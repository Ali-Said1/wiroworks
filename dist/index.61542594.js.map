{"mappings":"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G;SAAO,EAAE;YACrC,QAAQ;YACR,aAAa;YACb,YAAY;YACZ,SAAS;QACb;QACA,OAAO,GAAG,CAAC;IACf;IAEA,mBAAmB;IACnB,IAAK,IAAI,IAAI,GAAG,KAAK,QAAQ,KAAK,SAAU;QACxC,MAAM,OAAO,IAAI,CAAA,GAAA,YAAI,AAAD,EAAE;YAAC;YAAG;YAAG;YAAO;SAAE,EAAE;YACpC,QAAQ;YACR,aAAa;YACb,YAAY;YACZ,SAAS;QACb;QACA,OAAO,GAAG,CAAC;IACf;IACA,IAAK,IAAI,IAAI,GAAG,KAAK,OAAO,KAAK,SAC7B,IAAK,IAAI,IAAI,GAAG,KAAK,QAAQ,KAAK,SAAU;QACxC,MAAM,SAAS,IAAI,CAAA,GAAA,cAAM,AAAD,EAAE;YACtB,MAAM,IAAI;YACV,KAAK,IAAI;YACT,QAAQ;YACR,MAAM;YACN,YAAY;YACZ,SAAS;QACb;QACA,OAAO,GAAG,CAAC;IACf;AAER;AAEA,SAAS,QAAQ;AAEjB,OAAO,SAAS;AAEhB,SAAS,IAAI,CAAC,WAAW,CAAC;AAE1B,MAAM,UAAU,SAAS,cAAc,CAAC;AAExC,QAAQ,gBAAgB,CAAC,SAAS,KAElC;;;;;A,qD;A,+C;A,sD;A,4C;A,2D;A,sD;A,4C;A,iD;A,oD;A,2C;A,6C;A,6C;A,iD;A,kD;A,gD;A,sD;A,iD;A,8C;A,2C;A,2C;A,2C;A,6D;A,kD;A,mD;A,oD;A,0C;A,4C;A,gD;A,0C;A,6C;A,kD;A,iD;A,2C;A,6C;A,8C;A,0C;A,4C;A,gD;A,kD;A,4D;A,0C;A,6C;A,8C;A,wD;A,2C;A,mD;A,4C;A,mD;A,2D;A,6C;A,iD;A,4C;A,uD;A,qD;A,sD;A,6C;A,uD;A,sD;A,0D;A,uD;A,oD;A,qD;A,0D;A,0D;A,sD;A,yD;A,6D;A,uD;A,4C;A,sD;A,0C;A,6C;A,S,gB,C,E,C,E,C;I,O,A,C,I,e,E,K,I,O,c,C,G,G;Q,O;Q,Y,C;Q,c,C;Q,U,C;I,K,C,C,E,G,G;A;A,S,Q,C,E,C;I,I,I,O,I,C;I,I,O,qB,E;Q,I,I,O,qB,C;Q,K,C,I,E,M,C,S,C;Y,O,O,wB,C,G,G,U;Q,E,G,E,I,C,K,C,G;I;I,O;A;A,S,e,C;I,I,I,I,G,I,U,M,E,I;Q,I,I,Q,S,C,E,G,S,C,E,G,C;Q,I,I,Q,O,I,C,G,O,C,S,C;Y,gB,G,G,C,C,E;Q,K,O,yB,G,O,gB,C,G,O,yB,C,M,Q,O,I,O,C,S,C;Y,O,c,C,G,G,O,wB,C,G;Q;I;I,O;A;A,S,yB,C,E,C;I,I,Q,G,O,C;I,I,G,G,I,8B,G;I,I,O,qB,E;Q,I,I,O,qB,C;Q,I,I,G,I,E,M,E,I,I,C,C,E,E,E,O,C,M,K,C,C,C,E,oB,C,I,C,G,M,C,C,C,E,G,C,C,E,A;I;I,O;A;A,S,8B,C,E,C;I,I,Q,G,O,C;I,I,I,C;I,I,I,K,E,I,C,C,C,E,c,C,I,C,G,I;Q,I,E,O,C,M,G;Q,C,C,E,G,C,C,E;I;I,O;A;A,S,uB,C,E,C;I,O,K,C,I,E,K,C,E,G,O,M,C,O,gB,C,G;Q,K;Y,O,O,M,C;Q;I;A;A,S,a,C,E,C;I,I,Y,O,K,C,G,O;I,I,I,C,C,O,W,C;I,I,K,M,G;Q,I,I,E,I,C,G,K;Q,I,Y,O,G,O;Q,M,I,U;I;I,O,A,C,a,I,S,M,E;A;A,S,e,C;I,I,I,a,G;I,O,Y,O,I,I,I;A;AE1DA,MAAMA;IAAkBC,aAAA;QACtB;;;;;;;;;;;;;KAaF,GAbEC,gBAAA,IAAA,EAAA,6BAc4B;QAE5B;;KAEF,GAFEA,gBAAA,IAAA,EAAA,OAGM;QAEN;;;KAGF,GAHEA,gBAAA,IAAA,EAAA,oBAKE,OAAOC,WAAW,cAAcA,OAAOC,gBAAgB,GAAG;QAAG,4CAAA;QAE/D;;;;;KAKF,GALEF,gBAAA,IAAA,EAAA,sBAMqB;QAErB;;;;;KAKF,GALEA,gBAAA,IAAA,EAAA,qBAMoB;QAEpB;;;;;KAKF,GALEA,gBAAA,IAAA,EAAA,qBAMoB;QAEpB;;;;;;;KAOF,GAPEA,gBAAA,IAAA,EAAA,yBAQwB;QAExB;;;;;;;KAOF,GAPEA,gBAAA,IAAA,EAAA,qBAQoB;QAEpB;;;;;;;;;KASF,GATEA,gBAAA,IAAA,EAAA,eAUc;QAEd;;;;;;KAMF,GANEA,gBAAA,IAAA,EAAA,uBAOsB;QAEtB;;;;;;;KAOF,GAPEA,gBAAA,IAAA,EAAA,uBAQ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GAAG+0D,2BAA2B/0D,MAAM;IACnD;IACA5C,OAAOsrB,mBAAmB,CAACjG,QAAQruB,QAAQA;AAC7C;A,I,U,W,G,O,M,C;I,W;I,sB;I,S;I,c;I,wB;I,yB;I,sB;I,uB;I,oB;I,iB;I,U;I,e;I,mB;I,K;I,qB;I,a;I,oB;I,mB;I,mB;I,mB;I,uB;I,c;I,c;I,kB;I,Y;I,M;I,yB;I,gB;I,kB;I,gB;I,kB;I,sB;I,qB;I,gB;I,Y;I,c;I,uB;I,yB;I,kB;I,e;I,kB;I,iB;I,iB;I,kB;I,kB;I,c;I,e;I,U;I,W;I,W;I,2B;I,iB;I,a;I,gB;I,2B;I,8B;I,W;I,mC;I,W;I,M;I,uB;I,a;I,kB;I,iB;I,2B;I,oC;I,S;I,kB;I,sB;I,a;I,c;I,qB;I,mB;I,kB;I,mB;I,U;I,K;I,oB;I,Q;I,iB;I,e;I,W;I,S;I,e;I,gB;A;AClDO,MAAMghE,yBAAyBz6C;IAIpCvtB,YACEyK,IAAiC,CAWjC;QAAA,IAVA,EACEskB,sBAAsB,KAAK,EAC3Bk5C,iBAAiB,EAAA,EAOlB,GAAA1nE,UAAAC,MAAA,GAAAD,KAAAA,SAAA,CAAAE,EAAAA,KAAAA,YAAAF,SAAA,CAAG,EAAA,GAAA,CAAA;QAEJ,KAAK,CAACkK;QAAMxK,gBAAA,IAAA,EAAA,SAAA,KAAA;QAAAA,gBAAA,IAAA,EAAA,aAAA,KAAA;QACZ,MAAM,EAAEyrB,IAAIwD,aAAAA,EAAe,GAAG,IAAI,CAACzB,KAAK;QACxC,MAAMy6C,gBAAgB,IAAI,CAACC,iBAAiB;QAC5C,IAAI,CAACC,KAAK,GAAG;YAAE18C,IAAIw8C;YAAel8C,KAAKk8C,cAAc1kE,UAAU,CAAC;QAAQ;QACxE,IAAI,CAAC6kE,gBAAgB,CAACn5C,eAAe;YACnCH;QACF;QACA,IAAI,CAACs5C,gBAAgB,CAACH,eAAe;YACnCn5C;YACA0I,QAAQ;gBACNhM,UAAU;gBACVhZ,MAAM;gBACNC,KAAK;YACP;QACF;QACA,MAAM41D,YAAY,IAAI,CAACC,sBAAsB;QAC7CD,UAAUx6C,SAAS,CAACnhB,GAAG,CAACs7D;QACxB,IAAI/4C,cAAc7D,UAAU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","sources":["../../../../../Users/asazi/AppData/Roaming/nvm/v22.4.1/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-e75dd2430244a8f8.js","scripts/index.js","node_modules/fabric/dist/index.mjs","node_modules/fabric/src/config.ts","node_modules/fabric/src/util/internals/console.ts","node_modules/fabric/src/filters/GLProbes/GLProbe.ts","node_modules/fabric/src/filters/GLProbes/WebGLProbe.ts","node_modules/fabric/src/env/browser.ts","node_modules/fabric/src/env/index.ts","node_modules/fabric/src/cache.ts","node_modules/fabric/src/constants.ts","node_modules/fabric/src/ClassRegistry.ts","node_modules/fabric/src/util/animation/AnimationRegistry.ts","node_modules/fabric/src/Observable.ts","node_modules/fabric/src/util/internals/removeFromArray.ts","node_modules/fabric/src/util/misc/cos.ts","node_modules/fabric/src/util/misc/sin.ts","node_modules/fabric/src/Point.ts","node_modules/fabric/src/Collection.ts","node_modules/fabric/src/CommonMethods.ts","node_modules/fabric/src/util/animation/AnimationFrameProvider.ts","node_modules/fabric/src/util/internals/uid.ts","node_modules/fabric/src/util/misc/dom.ts","node_modules/fabric/src/util/misc/radiansDegreesConversion.ts","node_modules/fabric/src/util/misc/matrix.ts","node_modules/fabric/src/util/misc/objectEnlive.ts","node_modules/fabric/src/util/misc/pick.ts","node_modules/fabric/src/color/color_map.ts","node_modules/fabric/src/color/constants.ts","node_modules/fabric/src/color/util.ts","node_modules/fabric/src/color/Color.ts","node_modules/fabric/src/util/misc/toFixed.ts","node_modules/fabric/src/util/misc/svgParsing.ts","node_modules/fabric/src/util/typeAssertions.ts","node_modules/fabric/src/util/dom_misc.ts","node_modules/fabric/src/canvas/DOMManagers/util.ts","node_modules/fabric/src/canvas/DOMManagers/StaticCanvasDOMManager.ts","node_modules/fabric/src/canvas/StaticCanvasOptions.ts","node_modules/fabric/src/canvas/StaticCanvas.ts","node_modules/fabric/src/util/dom_event.ts","node_modules/fabric/src/util/misc/boundingBoxFromPoints.ts","node_modules/fabric/src/util/misc/objectTransforms.ts","node_modules/fabric/src/util/misc/planeChange.ts","node_modules/fabric/src/controls/fireEvent.ts","node_modules/fabric/src/util/misc/resolveOrigin.ts","node_modules/fabric/src/controls/util.ts","node_modules/fabric/src/controls/drag.ts","node_modules/fabric/src/shapes/Object/FabricObjectSVGExportMixin.ts","node_modules/fabric/src/parser/getSvgRegex.ts","node_modules/fabric/src/parser/constants.ts","node_modules/fabric/src/util/misc/vectors.ts","node_modules/fabric/src/Shadow.ts","node_modules/fabric/src/util/misc/capValue.ts","node_modules/fabric/src/shapes/Object/defaultValues.ts","node_modules/fabric/src/util/animation/easing.ts","node_modules/fabric/src/util/animation/AnimationBase.ts","node_modules/fabric/src/util/animation/ValueAnimation.ts","node_modules/fabric/src/util/animation/ArrayAnimation.ts","node_modules/fabric/src/util/animation/ColorAnimation.ts","node_modules/fabric/src/util/animation/animate.ts","node_modules/fabric/src/Intersection.ts","node_modules/fabric/src/shapes/Object/ObjectGeometry.ts","node_modules/fabric/src/shapes/Object/Object.ts","node_modules/fabric/src/controls/wrapWithFireEvent.ts","node_modules/fabric/src/controls/wrapWithFixedAnchor.ts","node_modules/fabric/src/controls/changeWidth.ts","node_modules/fabric/src/controls/controlRendering.ts","node_modules/fabric/src/controls/Control.ts","node_modules/fabric/src/controls/rotate.ts","node_modules/fabric/src/controls/scale.ts","node_modules/fabric/src/controls/skew.ts","node_modules/fabric/src/controls/scaleSkew.ts","node_modules/fabric/src/controls/commonControls.ts","node_modules/fabric/src/shapes/Object/InteractiveObject.ts","node_modules/fabric/src/util/applyMixins.ts","node_modules/fabric/src/shapes/Object/FabricObject.ts","node_modules/fabric/src/util/misc/isTransparent.ts","node_modules/fabric/src/util/misc/rotatePoint.ts","node_modules/fabric/src/util/internals/findRight.ts","node_modules/fabric/src/util/misc/projectStroke/StrokeProjectionsBase.ts","node_modules/fabric/src/util/misc/projectStroke/StrokeLineJoinProjections.ts","node_modules/fabric/src/util/misc/projectStroke/StrokeLineCapProjections.ts","node_modules/fabric/src/util/misc/projectStroke/index.ts","node_modules/fabric/src/util/internals/cloneStyles.ts","node_modules/fabric/src/util/lang_string.ts","node_modules/fabric/src/util/misc/textStyles.ts","node_modules/fabric/src/parser/attributes.ts","node_modules/fabric/src/parser/selectorMatches.ts","node_modules/fabric/src/parser/doesSomeParentMatch.ts","node_modules/fabric/src/parser/elementMatchesRule.ts","node_modules/fabric/src/parser/getGlobalStylesForElement.ts","node_modules/fabric/src/parser/normalizeAttr.ts","node_modules/fabric/src/util/internals/cleanupSvgAttribute.ts","node_modules/fabric/src/parser/parseTransformAttribute.ts","node_modules/fabric/src/parser/normalizeValue.ts","node_modules/fabric/src/parser/parseFontDeclaration.ts","node_modules/fabric/src/parser/parseStyleObject.ts","node_modules/fabric/src/parser/parseStyleString.ts","node_modules/fabric/src/parser/parseStyleAttribute.ts","node_modules/fabric/src/parser/setStrokeFillOpacity.ts","node_modules/fabric/src/parser/parseAttributes.ts","node_modules/fabric/src/shapes/Rect.ts","node_modules/fabric/src/LayoutManager/constants.ts","node_modules/fabric/src/LayoutManager/LayoutStrategies/utils.ts","node_modules/fabric/src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","node_modules/fabric/src/LayoutManager/LayoutStrategies/FitContentLayout.ts","node_modules/fabric/src/LayoutManager/LayoutManager.ts","node_modules/fabric/src/shapes/Group.ts","node_modules/fabric/src/util/misc/groupSVGElements.ts","node_modules/fabric/src/util/misc/findScaleTo.ts","node_modules/fabric/src/util/path/regex.ts","node_modules/fabric/src/util/path/index.ts","node_modules/fabric/src/util/dom_style.ts","node_modules/fabric/src/util/misc/mergeClipPaths.ts","node_modules/fabric/src/util/internals/getRandomInt.ts","node_modules/fabric/src/util/internals/dom_request.ts","node_modules/fabric/src/util/transform_matrix_removal.ts","node_modules/fabric/src/canvas/DOMManagers/CanvasDOMManager.ts","node_modules/fabric/src/canvas/CanvasOptions.ts","node_modules/fabric/src/canvas/SelectableCanvas.ts","node_modules/fabric/src/canvas/TextEditingManager.ts","node_modules/fabric/src/canvas/Canvas.ts","node_modules/fabric/src/gradient/constants.ts","node_modules/fabric/src/util/internals/ifNaN.ts","node_modules/fabric/src/parser/percent.ts","node_modules/fabric/src/gradient/parser/parseColorStops.ts","node_modules/fabric/src/gradient/parser/misc.ts","node_modules/fabric/src/gradient/parser/parseCoords.ts","node_modules/fabric/src/gradient/Gradient.ts","node_modules/fabric/src/Pattern/Pattern.ts","node_modules/fabric/src/brushes/BaseBrush.ts","node_modules/fabric/src/shapes/Path.ts","node_modules/fabric/src/brushes/PencilBrush.ts","node_modules/fabric/src/shapes/Circle.ts","node_modules/fabric/src/brushes/CircleBrush.ts","node_modules/fabric/src/brushes/SprayBrush.ts","node_modules/fabric/src/brushes/PatternBrush.ts","node_modules/fabric/src/shapes/Line.ts","node_modules/fabric/src/shapes/Triangle.ts","node_modules/fabric/src/shapes/Ellipse.ts","node_modules/fabric/src/parser/parsePointsAttribute.ts","node_modules/fabric/src/shapes/Polyline.ts","node_modules/fabric/src/shapes/Polygon.ts","node_modules/fabric/src/shapes/Text/constants.ts","node_modules/fabric/src/shapes/Text/StyledText.ts","node_modules/fabric/src/shapes/Text/TextSVGExportMixin.ts","node_modules/fabric/src/shapes/Text/Text.ts","node_modules/fabric/src/shapes/IText/DraggableTextDelegate.ts","node_modules/fabric/src/shapes/IText/ITextBehavior.ts","node_modules/fabric/src/shapes/IText/ITextKeyBehavior.ts","node_modules/fabric/src/shapes/IText/ITextClickBehavior.ts","node_modules/fabric/src/shapes/IText/constants.ts","node_modules/fabric/src/shapes/IText/IText.ts","node_modules/fabric/src/shapes/Textbox.ts","node_modules/fabric/src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","node_modules/fabric/src/LayoutManager/LayoutStrategies/FixedLayout.ts","node_modules/fabric/src/LayoutManager/ActiveSelectionLayoutManager.ts","node_modules/fabric/src/shapes/ActiveSelection.ts","node_modules/fabric/src/filters/Canvas2dFilterBackend.ts","node_modules/fabric/src/filters/WebGLFilterBackend.ts","node_modules/fabric/src/filters/FilterBackend.ts","node_modules/fabric/src/shapes/Image.ts","node_modules/fabric/src/parser/applyViewboxTransform.ts","node_modules/fabric/src/parser/getTagName.ts","node_modules/fabric/src/parser/hasInvalidAncestor.ts","node_modules/fabric/src/parser/getMultipleNodes.ts","node_modules/fabric/src/parser/parseUseDirectives.ts","node_modules/fabric/src/parser/recursivelyParseGradientsXlink.ts","node_modules/fabric/src/parser/getGradientDefs.ts","node_modules/fabric/src/parser/getCSSRules.ts","node_modules/fabric/src/parser/elements_parser.ts","node_modules/fabric/src/parser/parseSVGDocument.ts","node_modules/fabric/src/parser/loadSVGFromString.ts","node_modules/fabric/src/parser/loadSVGFromURL.ts","node_modules/fabric/src/controls/polyControl.ts","node_modules/fabric/src/controls/pathControl.ts","node_modules/fabric/src/filters/utils.ts","node_modules/fabric/src/filters/shaders/baseFilter.ts","node_modules/fabric/src/filters/BaseFilter.ts","node_modules/fabric/src/filters/shaders/blendColor.ts","node_modules/fabric/src/filters/BlendColor.ts","node_modules/fabric/src/filters/shaders/blendImage.ts","node_modules/fabric/src/filters/BlendImage.ts","node_modules/fabric/src/filters/shaders/blur.ts","node_modules/fabric/src/filters/Blur.ts","node_modules/fabric/src/filters/shaders/brightness.ts","node_modules/fabric/src/filters/Brightness.ts","node_modules/fabric/src/filters/shaders/colorMatrix.ts","node_modules/fabric/src/filters/ColorMatrix.ts","node_modules/fabric/src/filters/ColorMatrixFilters.ts","node_modules/fabric/src/filters/Composed.ts","node_modules/fabric/src/filters/shaders/constrast.ts","node_modules/fabric/src/filters/Contrast.ts","node_modules/fabric/src/filters/shaders/convolute.ts","node_modules/fabric/src/filters/Convolute.ts","node_modules/fabric/src/filters/shaders/gamma.ts","node_modules/fabric/src/filters/Gamma.ts","node_modules/fabric/src/filters/shaders/grayscale.ts","node_modules/fabric/src/filters/Grayscale.ts","node_modules/fabric/src/filters/HueRotation.ts","node_modules/fabric/src/filters/shaders/invert.ts","node_modules/fabric/src/filters/Invert.ts","node_modules/fabric/src/filters/shaders/noise.ts","node_modules/fabric/src/filters/Noise.ts","node_modules/fabric/src/filters/shaders/pixelate.ts","node_modules/fabric/src/filters/Pixelate.ts","node_modules/fabric/src/filters/shaders/removeColor.ts","node_modules/fabric/src/filters/RemoveColor.ts","node_modules/fabric/src/filters/Resize.ts","node_modules/fabric/src/filters/shaders/saturation.ts","node_modules/fabric/src/filters/Saturation.ts","node_modules/fabric/src/filters/shaders/vibrance.ts","node_modules/fabric/src/filters/Vibrance.ts","../../../../../Users/asazi/AppData/Roaming/nvm/v22.4.1/node_modules/parcel/node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"dfbb1b1861542594\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import { Canvas, Line, Circle } from 'fabric';\r\n\r\n// Create a canvas element\r\nconst canvasElement = document.createElement('canvas');\r\ncanvasElement.width = document.documentElement.clientWidth;\r\ncanvasElement.height = document.documentElement.clientHeight;\r\n\r\nconst canvas = new Canvas(canvasElement);\r\n\r\nfunction drawGrid(canvas, gridSize) {\r\n    const width = canvasElement.width;\r\n    const height = canvasElement.height;\r\n\r\n    // Vertical lines\r\n    for (let x = 0; x <= width; x += gridSize) {\r\n\r\n        const line = new Line([x, 0, x, height], {\r\n            stroke: 'lightgray',\r\n            strokeWidth: 1,\r\n            selectable: false,\r\n            evented: false,\r\n        });\r\n        canvas.add(line);\r\n    }\r\n\r\n    // Horizontal lines\r\n    for (let y = 0; y <= height; y += gridSize) {\r\n        const line = new Line([0, y, width, y], {\r\n            stroke: 'lightgray',\r\n            strokeWidth: 1,\r\n            selectable: false,\r\n            evented: false,\r\n        });\r\n        canvas.add(line);\r\n    }\r\n    for (let x = 0; x <= width; x += gridSize) {\r\n        for (let y = 0; y <= height; y += gridSize) {\r\n            const circle = new Circle({\r\n                left: x - 1,\r\n                top: y - 1,\r\n                radius: 1,\r\n                fill: 'darkgray',\r\n                selectable: false,\r\n                evented: false,\r\n            });\r\n            canvas.add(circle);\r\n        }\r\n    }\r\n}\r\n\r\ndrawGrid(canvas, 30);\r\n\r\ncanvas.renderAll();\r\n\r\ndocument.body.appendChild(canvasElement);\r\n\r\nconst battery = document.getElementById('battery');\r\n\r\nbattery.addEventListener('click', () => {\r\n    \r\n})",null,"export type TConfiguration = Partial<BaseConfiguration>;\n\nclass BaseConfiguration {\n  /**\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n   * which is unitless and not rendered equally across browsers.\n   *\n   * Values that work quite well (as of October 2017) are:\n   * - Chrome: 1.5\n   * - Edge: 1.75\n   * - Firefox: 0.9\n   * - Safari: 0.95\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default 1\n   */\n  browserShadowBlurConstant = 1;\n\n  /**\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n   */\n  DPI = 96;\n\n  /**\n   * Device Pixel Ratio\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   */\n  devicePixelRatio =\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\n\n  /**\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  perfLimitSizeTotal = 2097152;\n\n  /**\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  maxCacheSideLimit = 4096;\n\n  /**\n   * Lowest pixel limit for cache canvases, set at 256PX\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  minCacheSideLimit = 256;\n\n  /**\n   * When 'true', style information is not retained when copy/pasting text, making\n   * pasted text use destination style.\n   * Defaults to 'false'.\n   * @type Boolean\n   * @default\n   * @deprecated\n   */\n  disableStyleCopyPaste = false;\n\n  /**\n   * Enable webgl for filtering picture is available\n   * A filtering backend will be initialized, this will both take memory and\n   * time since a default 2048x2048 canvas will be created for the gl context\n   * @since 2.0.0\n   * @type Boolean\n   * @default\n   */\n  enableGLFiltering = true;\n\n  /**\n   * if webgl is enabled and available, textureSize will determine the size\n   * of the canvas backend\n   *\n   * In order to support old hardware set to `2048` to avoid OOM\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  textureSize = 4096;\n\n  /**\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\n   * @type Boolean\n   * @default false\n   */\n  forceGLPutImageData = false;\n\n  /**\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n   * With the standard behaviour of fabric to translate all curves in absolute commands and by not subtracting the starting point from\n   * the curve is very hard to hit any cache.\n   * Enable only if you know why it could be useful.\n   * Candidate for removal/simplification\n   * @default false\n   */\n  cachesBoundsOfCurve = false;\n\n  /**\n   * Map of font files\n   * Map<fontFamily, pathToFile> of font files\n   */\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   */\n  NUM_FRACTION_DIGITS = 4;\n}\n\nexport class Configuration extends BaseConfiguration {\n  constructor(config?: TConfiguration) {\n    super();\n    this.configure(config);\n  }\n\n  configure(config: TConfiguration = {}) {\n    Object.assign(this, config);\n  }\n\n  /**\n   * Map<fontFamily, pathToFile> of font files\n   */\n  addFonts(\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {},\n  ) {\n    this.fontPaths = {\n      ...this.fontPaths,\n      ...paths,\n    };\n  }\n\n  removeFonts(fontFamilys: string[] = []) {\n    fontFamilys.forEach((fontFamily) => {\n      delete this.fontPaths[fontFamily];\n    });\n  }\n\n  clearFonts() {\n    this.fontPaths = {};\n  }\n\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\n    const defaults = new BaseConfiguration() as T;\n    const config =\n      keys?.reduce((acc, key) => {\n        acc[key] = defaults[key];\n        return acc;\n      }, {} as T) || defaults;\n    this.configure(config);\n  }\n}\n\nexport const config = new Configuration();\n","export const log = (\n  severity: 'log' | 'warn' | 'error',\n  ...optionalParams: any[]\n) =>\n  // eslint-disable-next-line no-restricted-syntax\n  console[severity]('fabric', ...optionalParams);\n\nexport class FabricError extends Error {\n  constructor(message?: string, options?: ErrorOptions) {\n    super(`fabric: ${message}`, options);\n  }\n}\n\nexport class SignalAbortedError extends FabricError {\n  constructor(context: string) {\n    super(`${context} 'options.signal' is in 'aborted' state`);\n  }\n}\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\n\nexport abstract class GLProbe {\n  declare GLPrecision: GLPrecision | undefined;\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\n  abstract isSupported(textureSize: number): boolean;\n}\n","import { log } from '../../util/internals/console';\nimport { GLProbe } from './GLProbe';\nimport type { GLPrecision } from './GLProbe';\n\n/**\n * Lazy initialize WebGL constants\n */\nexport class WebGLProbe extends GLProbe {\n  declare maxTextureSize?: number;\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {GLPrecision} Precision to test can be any of following\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  private testPrecision(\n    gl: WebGLRenderingContext,\n    precision: GLPrecision,\n  ): boolean {\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    if (!fragmentShader) {\n      return false;\n    }\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\n  }\n\n  /**\n   * query browser for WebGL\n   */\n  queryWebGL(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n    if (gl) {\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\n        (precision) => this.testPrecision(gl, precision),\n      );\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\n    }\n  }\n\n  isSupported(textureSize: number) {\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\nimport type { TCopyPasteData, TFabricEnv } from './types';\n\nconst copyPasteData: TCopyPasteData = {};\n\nexport const getEnv = (): TFabricEnv => {\n  return {\n    document,\n    window,\n    isTouchSupported:\n      'ontouchstart' in window ||\n      'ontouchstart' in document ||\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\n    WebGLProbe: new WebGLProbe(),\n    dispose() {\n      // noop\n    },\n    copyPasteData,\n  };\n};\n","/**\n * This file is consumed by fabric.\n * The `./node` and `./browser` files define the env variable that is used by this module.\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\n * This is done in order to support isomorphic usage for browser and node applications\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\n */\n\nimport { config } from '../config';\nimport { getEnv as getBrowserEnv } from './browser';\nimport type { TFabricEnv } from './types';\nimport type { DOMWindow } from 'jsdom';\n\nlet env: TFabricEnv;\n\n/**\n * Sets the environment variables used by fabric.\\\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\n *\n * **CAUTION**: Must be called before using the package.\n *\n * @example\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\n * import { getEnv, setEnv } from 'fabric';\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\n * setEnv({ ...getEnv(), window, document });\n * // done with setup, using fabric is now safe\n */\nexport const setEnv = (value: TFabricEnv) => {\n  env = value;\n};\n\n/**\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\n */\nexport const getEnv = () => env || (env = getBrowserEnv());\n\nexport const getFabricDocument = (): Document => getEnv().document;\n\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\n  getEnv().window;\n\n/**\n * @returns the config value if defined, fallbacks to the environment value\n */\nexport const getDevicePixelRatio = () =>\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\n","import { config } from './config';\nimport type { TRectBounds } from './typedefs';\n\nexport class Cache {\n  /**\n   * Cache of widths of chars in text rendering.\n   */\n  charWidthsCache: Record<\n    /** fontFamily */ string,\n    Record<\n      /** fontStyleCacheKey */ string,\n      Record</** char */ string, /** width */ number>\n    >\n  > = {};\n\n  /**\n   * @return {Object} reference to cache\n   */\n  getFontCache({\n    fontFamily,\n    fontStyle,\n    fontWeight,\n  }: {\n    fontFamily: string;\n    fontStyle: string;\n    fontWeight: string | number;\n  }) {\n    fontFamily = fontFamily.toLowerCase();\n    if (!this.charWidthsCache[fontFamily]) {\n      this.charWidthsCache[fontFamily] = {};\n    }\n    const fontCache = this.charWidthsCache[fontFamily];\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\n      fontWeight + ''\n    ).toLowerCase()}`;\n    if (!fontCache[cacheKey]) {\n      fontCache[cacheKey] = {};\n    }\n    return fontCache[cacheKey];\n  }\n\n  /**\n   * Clear char widths cache for the given font family or all the cache if no\n   * fontFamily is specified.\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\n   * for custom fonts to load properly when adding text objects to the canvas.\n   * If a text object is added when its own font is not loaded yet, you will get wrong\n   * measurement and so wrong bounding boxes.\n   * After the font cache is cleared, either change the textObject text content or call\n   * initDimensions() to trigger a recalculation\n   * @param {String} [fontFamily] font family to clear\n   */\n  clearFontCache(fontFamily?: string) {\n    fontFamily = (fontFamily || '').toLowerCase();\n    if (!fontFamily) {\n      this.charWidthsCache = {};\n    } else if (this.charWidthsCache[fontFamily]) {\n      delete this.charWidthsCache[fontFamily];\n    }\n  }\n\n  /**\n   * Given current aspect ratio, determines the max width and height that can\n   * respect the total allowed area for the cache.\n   * @param {number} ar aspect ratio\n   * @return {number[]} Limited dimensions X and Y\n   */\n  limitDimsByArea(ar: number) {\n    const { perfLimitSizeTotal } = config;\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\n    // we are not returning a point on purpose, to avoid circular dependencies\n    // this is an internal utility\n    return [\n      Math.floor(roughWidth),\n      Math.floor(perfLimitSizeTotal / roughWidth),\n    ];\n  }\n\n  /**\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n   * you do not get any speed benefit and you get a big object in memory.\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n   * can eventually clear it.\n   * It was an internal variable, is accessible since version 2.3.4\n   */\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\n}\n\nexport const cache = new Cache();\n","import type { TMat2D } from './typedefs';\n// use this syntax so babel plugin see this import here\nimport { version } from '../package.json';\n\nexport const VERSION = version;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const halfPI = Math.PI / 2;\nexport const twoMathPi = Math.PI * 2;\nexport const PiBy180 = Math.PI / 180;\n\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\nexport const DEFAULT_SVG_FONT_SIZE = 16;\nexport const ALIASING_LIMIT = 2;\n\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nexport const kRect = 1 - 0.5522847498;\n\nexport const CENTER = 'center';\nexport const LEFT = 'left';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const RIGHT = 'right';\nexport const NONE = 'none';\n\nexport const reNewline = /\\r?\\n/;\n\nexport const MOVING = 'moving';\nexport const SCALING = 'scaling';\nexport const ROTATING = 'rotating';\nexport const ROTATE = 'rotate';\nexport const SKEWING = 'skewing';\nexport const RESIZING = 'resizing';\nexport const MODIFY_POLY = 'modifyPoly';\nexport const MODIFY_PATH = 'modifyPath';\nexport const CHANGED = 'changed';\nexport const SCALE = 'scale';\nexport const SCALE_X = 'scaleX';\nexport const SCALE_Y = 'scaleY';\nexport const SKEW_X = 'skewX';\nexport const SKEW_Y = 'skewY';\nexport const FILL = 'fill';\nexport const STROKE = 'stroke';\nexport const MODIFIED = 'modified';\n","import { FabricError } from './util/internals/console';\n\n/*\n * This Map connects the objects type value with their\n * class implementation. It used from any object to understand which are\n * the classes to enlive when requesting a object.type = 'path' for example.\n * Objects uses it for clipPath, Canvas uses it for everything.\n * This is necessary for generic code to run and enlive instances from serialized representation.\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\n * The Registry start empty and gets filled in depending which files you import.\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\n * different sources you will need to import all fabric because you may need all classes.\n */\n\nexport const JSON = 'json';\nexport const SVG = 'svg';\n\nexport class ClassRegistry {\n  declare [JSON]: Map<string, any>;\n  declare [SVG]: Map<string, any>;\n\n  constructor() {\n    this[JSON] = new Map();\n    this[SVG] = new Map();\n  }\n\n  has(classType: string): boolean {\n    return this[JSON].has(classType);\n  }\n\n  getClass<T>(classType: string): T {\n    const constructor = this[JSON].get(classType);\n    if (!constructor) {\n      throw new FabricError(`No class registered for ${classType}`);\n    }\n    return constructor;\n  }\n\n  setClass(classConstructor: any, classType?: string) {\n    if (classType) {\n      this[JSON].set(classType, classConstructor);\n    } else {\n      this[JSON].set(classConstructor.type, classConstructor);\n      // legacy\n      // @TODO: needs to be removed in fabric 7 or 8\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\n    }\n  }\n\n  getSVGClass(SVGTagName: string): any {\n    return this[SVG].get(SVGTagName);\n  }\n\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\n    this[SVG].set(\n      SVGTagName ?? classConstructor.type.toLowerCase(),\n      classConstructor,\n    );\n  }\n}\n\nexport const classRegistry = new ClassRegistry();\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas),\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n","export type TEventCallback<T = any> = (options: T) => any;\n\ntype EventRegistryObject<E> = {\n  [K in keyof E]?: TEventCallback<E[K]>;\n};\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n * @see {@link http://fabricjs.com/events|Events demo}\n */\nexport class Observable<EventSpec> {\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\n    {} as Record<keyof EventSpec, TEventCallback[]>;\n\n  /**\n   * Observes specified event\n   * @alias on\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\n    }\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this.on(eventName as K, handler as TEventCallback);\n      });\n      return () => this.off(arg0);\n    } else if (handler) {\n      const eventName = arg0;\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n      return () => this.off(eventName, handler);\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * Observes specified event **once**\n   * @alias once\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>,\n  ): VoidFunction;\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>,\n  ): VoidFunction {\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      const disposers: VoidFunction[] = [];\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\n      });\n      return () => disposers.forEach((d) => d());\n    } else if (handler) {\n      const disposer = this.on<K, E>(\n        arg0,\n        function onceHandler(this: Observable<EventSpec>, ...args) {\n          handler.call(this, ...args);\n          disposer();\n        },\n      );\n      return disposer;\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} eventName\n   * @param {Function} [handler]\n   */\n  private _removeEventListener<K extends keyof EventSpec>(\n    eventName: K,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      const eventListener = this.__eventListeners[eventName];\n      const index = eventListener.indexOf(handler);\n      index > -1 && eventListener.splice(index, 1);\n    } else {\n      this.__eventListeners[eventName] = [];\n    }\n  }\n\n  /**\n   * Unsubscribe all event listeners for eventname.\n   * Do not use this pattern. You could kill internal fabricJS events.\n   * We know we should have protected events for internal flows, but we don't have yet\n   * @deprecated\n   * @param {string} eventName event name (eg. 'after:render')\n   */\n  off<K extends keyof EventSpec>(eventName: K): void;\n  /**\n   * unsubscribe an event listener\n   * @param {string} eventName event name (eg. 'after:render')\n   * @param {TEventCallback} handler event listener to unsubscribe\n   */\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\n  /**\n   * unsubscribe event listeners\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   */\n  off(handlers: EventRegistryObject<EventSpec>): void;\n  /**\n   * unsubscribe all event listeners\n   */\n  off(): void;\n  off<K extends keyof EventSpec>(\n    arg0?: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback,\n  ) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (typeof arg0 === 'undefined') {\n      for (const eventName in this.__eventListeners) {\n        this._removeEventListener(eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (typeof arg0 === 'object') {\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this._removeEventListener(eventName as K, handler as TEventCallback);\n      });\n    } else {\n      this._removeEventListener(arg0, handler);\n    }\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   */\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\n    if (listenersForEvent) {\n      for (let i = 0; i < listenersForEvent.length; i++) {\n        listenersForEvent[i].call(this, options || {});\n      }\n    }\n  }\n}\n","/**\n * Removes value from an array.\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n * @param {Array} array\n * @param {*} value\n * @return {Array} original array\n */\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\n  const idx = array.indexOf(value);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n  return array;\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the cosin value for angle.\n */\nexport const cos = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 1;\n  }\n  const angleSlice = Math.abs(angle) / halfPI;\n  switch (angleSlice) {\n    case 1:\n    case 3:\n      return 0;\n    case 2:\n      return -1;\n  }\n  return Math.cos(angle);\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the sin value for angle.\n */\nexport const sin = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 0;\n  }\n  const angleSlice = angle / halfPI;\n  const value = Math.sign(angle);\n  switch (angleSlice) {\n    case 1:\n      return value;\n    case 2:\n      return 0;\n    case 3:\n      return -value;\n  }\n  return Math.sin(angle);\n};\n","import type { TMat2D, TRadian } from './typedefs';\nimport { cos } from './util/misc/cos';\nimport { sin } from './util/misc/sin';\n\nexport interface XY {\n  x: number;\n  y: number;\n}\n\n/**\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\n */\nexport class Point implements XY {\n  declare x: number;\n\n  declare y: number;\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(point?: XY);\n  constructor(arg0: number | XY = 0, y = 0) {\n    if (typeof arg0 === 'object') {\n      this.x = arg0.x;\n      this.y = arg0.y;\n    } else {\n      this.x = arg0;\n      this.y = y;\n    }\n  }\n\n  /**\n   * Adds another point to this one and returns another one\n   * @param {XY} that\n   * @return {Point} new Point instance with added values\n   */\n  add(that: XY): Point {\n    return new Point(this.x + that.x, this.y + that.y);\n  }\n\n  /**\n   * Adds another point to this one\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  addEquals(that: XY): Point {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  /**\n   * Adds value to this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point} new Point with added value\n   */\n  scalarAdd(scalar: number): Point {\n    return new Point(this.x + scalar, this.y + scalar);\n  }\n\n  /**\n   * Adds value to this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarAddEquals(scalar: number): Point {\n    this.x += scalar;\n    this.y += scalar;\n    return this;\n  }\n\n  /**\n   * Subtracts another point from this point and returns a new one\n   * @param {XY} that\n   * @return {Point} new Point object with subtracted values\n   */\n  subtract(that: XY): Point {\n    return new Point(this.x - that.x, this.y - that.y);\n  }\n\n  /**\n   * Subtracts another point from this point\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  subtractEquals(that: XY): Point {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  /**\n   * Subtracts value from this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarSubtract(scalar: number): Point {\n    return new Point(this.x - scalar, this.y - scalar);\n  }\n\n  /**\n   * Subtracts value from this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarSubtractEquals(scalar: number): Point {\n    this.x -= scalar;\n    this.y -= scalar;\n    return this;\n  }\n\n  /**\n   * Multiplies this point by another value and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  multiply(that: XY): Point {\n    return new Point(this.x * that.x, this.y * that.y);\n  }\n\n  /**\n   * Multiplies this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarMultiply(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Multiplies this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarMultiplyEquals(scalar: number): Point {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  /**\n   * Divides this point by another and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  divide(that: XY): Point {\n    return new Point(this.x / that.x, this.y / that.y);\n  }\n\n  /**\n   * Divides this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarDivide(scalar: number): Point {\n    return new Point(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Divides this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarDivideEquals(scalar: number): Point {\n    this.x /= scalar;\n    this.y /= scalar;\n    return this;\n  }\n\n  /**\n   * Returns true if this point is equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  eq(that: XY): boolean {\n    return this.x === that.x && this.y === that.y;\n  }\n\n  /**\n   * Returns true if this point is less than another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lt(that: XY): boolean {\n    return this.x < that.x && this.y < that.y;\n  }\n\n  /**\n   * Returns true if this point is less than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lte(that: XY): boolean {\n    return this.x <= that.x && this.y <= that.y;\n  }\n\n  /**\n\n   * Returns true if this point is greater another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gt(that: XY): boolean {\n    return this.x > that.x && this.y > that.y;\n  }\n\n  /**\n   * Returns true if this point is greater than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gte(that: XY): boolean {\n    return this.x >= that.x && this.y >= that.y;\n  }\n\n  /**\n   * Returns new point which is the result of linear interpolation with this one and another one\n   * @param {XY} that\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n   * @return {Point}\n   */\n  lerp(that: XY, t = 0.5): Point {\n    t = Math.max(Math.min(1, t), 0);\n    return new Point(\n      this.x + (that.x - this.x) * t,\n      this.y + (that.y - this.y) * t,\n    );\n  }\n\n  /**\n   * Returns distance from this point and another one\n   * @param {XY} that\n   * @return {Number}\n   */\n  distanceFrom(that: XY): number {\n    const dx = this.x - that.x,\n      dy = this.y - that.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the point between this point and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  midPointFrom(that: XY): Point {\n    return this.lerp(that);\n  }\n\n  /**\n   * Returns a new point which is the min of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  min(that: XY): Point {\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n  }\n\n  /**\n   * Returns a new point which is the max of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  max(that: XY): Point {\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n  }\n\n  /**\n   * Returns string representation of this point\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  /**\n   * Sets x/y of this point\n   * @param {Number} x\n   * @param {Number} y\n   * @chainable\n   */\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x of this point\n   * @param {Number} x\n   * @chainable\n   */\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets y of this point\n   * @param {Number} y\n   * @chainable\n   */\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x/y of this point from another point\n   * @param {XY} that\n   * @chainable\n   */\n  setFromPoint(that: XY) {\n    this.x = that.x;\n    this.y = that.y;\n    return this;\n  }\n\n  /**\n   * Swaps x/y of this point and another point\n   * @param {XY} that\n   */\n  swap(that: XY) {\n    const x = this.x,\n      y = this.y;\n    this.x = that.x;\n    this.y = that.y;\n    that.x = x;\n    that.y = y;\n  }\n\n  /**\n   * return a cloned instance of the point\n   * @return {Point}\n   */\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Rotates `point` around `origin` with `radians`\n   * @static\n   * @memberOf fabric.util\n   * @param {XY} origin The origin of the rotation\n   * @param {TRadian} radians The radians of the angle for the rotation\n   * @return {Point} The new rotated point\n   */\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\n    // TODO benchmark and verify the add and subtract how much cost\n    // and then in case early return if no origin is passed\n    const sinus = sin(radians),\n      cosinus = cos(radians);\n    const p = this.subtract(origin);\n    const rotated = new Point(\n      p.x * cosinus - p.y * sinus,\n      p.x * sinus + p.y * cosinus,\n    );\n    return rotated.add(origin);\n  }\n\n  /**\n   * Apply transform t to point p\n   * @static\n   * @memberOf fabric.util\n   * @param  {TMat2D} t The transform\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n   * @return {Point} The transformed point\n   */\n  transform(t: TMat2D, ignoreOffset = false): Point {\n    return new Point(\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5]),\n    );\n  }\n}\n\nexport const ZERO = new Point(0, 0);\n","import type { Constructor, TBBox } from './typedefs';\nimport { removeFromArray } from './util/internals/removeFromArray';\nimport { Point } from './Point';\nimport type { ActiveSelection } from './shapes/ActiveSelection';\nimport type { Group } from './shapes/Group';\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\nimport type { FabricObject } from './shapes/Object/FabricObject';\n\nexport const isCollection = (\n  fabricObject?: FabricObject,\n): fabricObject is Group | ActiveSelection => {\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\n};\n\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\n  class Collection extends Base {\n    /**\n     * @type {FabricObject[]}\n     * @TODO needs to end up in the constructor too\n     */\n    _objects: FabricObject[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectAdded(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectRemoved(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onStackOrderChanged(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    /**\n     * Adds objects to collection\n     * Objects should be instances of (or inherit from) FabricObject\n     * @param {...FabricObject[]} objects to add\n     * @returns {number} new array length\n     */\n    add(...objects: FabricObject[]): number {\n      const size = this._objects.push(...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return size;\n    }\n\n    /**\n     * Inserts an object into collection at specified index\n     * @param {number} index Index to insert object at\n     * @param {...FabricObject[]} objects Object(s) to insert\n     * @returns {number} new array length\n     */\n    insertAt(index: number, ...objects: FabricObject[]) {\n      this._objects.splice(index, 0, ...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return this._objects.length;\n    }\n\n    /**\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n     * @private\n     * @param {...FabricObject[]} objects objects to remove\n     * @returns {FabricObject[]} removed objects\n     */\n    remove(...objects: FabricObject[]) {\n      const array = this._objects,\n        removed: FabricObject[] = [];\n      objects.forEach((object) => {\n        const index = array.indexOf(object);\n        // only call onObjectRemoved if an object was actually removed\n        if (index !== -1) {\n          array.splice(index, 1);\n          removed.push(object);\n          this._onObjectRemoved(object);\n        }\n      });\n      return removed;\n    }\n\n    /**\n     * Executes given function for each object in this group\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\n     * now is just a shortcut.\n     * @param {Function} callback\n     *                   Callback invoked with current object as first argument,\n     *                   index - as second and an array of all objects - as third.\n     */\n    forEachObject(\n      callback: (\n        object: FabricObject,\n        index: number,\n        array: FabricObject[],\n      ) => any,\n    ) {\n      this.getObjects().forEach((object, index, objects) =>\n        callback(object, index, objects),\n      );\n    }\n\n    /**\n     * Returns an array of children objects of this instance\n     * @param {...String} [types] When specified, only objects of these types are returned\n     * @return {Array}\n     */\n    getObjects(...types: string[]) {\n      if (types.length === 0) {\n        return [...this._objects];\n      }\n      return this._objects.filter((o) => o.isType(...types));\n    }\n\n    /**\n     * Returns object at specified index\n     * @param {Number} index\n     * @return {Object} object at index\n     */\n    item(index: number) {\n      return this._objects[index];\n    }\n\n    /**\n     * Returns true if collection contains no objects\n     * @return {Boolean} true if collection is empty\n     */\n    isEmpty() {\n      return this._objects.length === 0;\n    }\n\n    /**\n     * Returns a size of a collection (i.e: length of an array containing its objects)\n     * @return {Number} Collection size\n     */\n    size() {\n      return this._objects.length;\n    }\n\n    /**\n     * Returns true if collection contains an object.\\\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\n     * @param {Object} object Object to check against\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n     * @return {Boolean} `true` if collection contains an object\n     */\n    contains(object: FabricObject, deep?: boolean): boolean {\n      if (this._objects.includes(object)) {\n        return true;\n      } else if (deep) {\n        return this._objects.some(\n          (obj) =>\n            obj instanceof Collection &&\n            (obj as unknown as Collection).contains(object, true),\n        );\n      }\n      return false;\n    }\n\n    /**\n     * Returns number representation of a collection complexity\n     * @return {Number} complexity\n     */\n    complexity() {\n      return this._objects.reduce((memo, current) => {\n        memo += current.complexity ? current.complexity() : 0;\n        return memo;\n      }, 0);\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectToBack(object: FabricObject) {\n      if (!object || object === this._objects[0]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectToFront(object: FabricObject) {\n      if (!object || object === this._objects[this._objects.length - 1]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, `intersecting` allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== 0) {\n        // if object is not on the bottom of stack\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== this._objects.length - 1) {\n        // if object is not on top of stack (last item in an array)\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {number} index Position to move to\n     * @returns {boolean} true if change occurred\n     */\n    moveObjectTo(object: FabricObject, index: number) {\n      if (object === this._objects[index]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    findNewLowerIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse down the stack looking for the nearest intersecting object\n        for (let i = idx - 1; i >= 0; --i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    }\n\n    findNewUpperIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean,\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse up the stack looking for the nearest intersecting object\n        for (let i = idx + 1; i < this._objects.length; ++i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    }\n\n    /**\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\n     * This is meant to work with selection. Is not a generic method.\n     * @param {TBBox} bbox a bounding box in scene coordinates\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\n     */\n    collectObjects(\n      { left, top, width, height }: TBBox,\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {},\n    ) {\n      const objects: InteractiveFabricObject[] = [],\n        tl = new Point(left, top),\n        br = tl.add(new Point(width, height));\n\n      // we iterate reverse order to collect top first in case of click.\n      for (let i = this._objects.length - 1; i >= 0; i--) {\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\n        if (\n          object.selectable &&\n          object.visible &&\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\n            object.isContainedWithinRect(tl, br) ||\n            (includeIntersecting && object.containsPoint(tl)) ||\n            (includeIntersecting && object.containsPoint(br)))\n        ) {\n          objects.push(object);\n        }\n      }\n\n      return objects;\n    }\n  }\n\n  // https://github.com/microsoft/TypeScript/issues/32080\n  return Collection as typeof Collection & TBase;\n}\n","import { Observable } from './Observable';\n\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\n  /**\n   * Sets object's properties from options, for initialization only\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected _setOptions(options: any = {}) {\n    for (const prop in options) {\n      this.set(prop, options[prop]);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setObject(obj: Record<string, any>) {\n    for (const prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  }\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   */\n  set(key: string | Record<string, any>, value?: any) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      this._set(key, value);\n    }\n    return this;\n  }\n\n  _set(key: string, value: any) {\n    this[key as keyof this] = value;\n  }\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   */\n  toggle(property: string) {\n    const value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  }\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get(property: string): any {\n    return this[property as keyof this];\n  }\n}\n","import { getFabricWindow } from '../../env';\n\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\n  return getFabricWindow().requestAnimationFrame(callback);\n}\n\nexport function cancelAnimFrame(handle: number): void {\n  return getFabricWindow().cancelAnimationFrame(handle);\n}\n","let id = 0;\n\nexport const uid = () => id++;\n","import { getFabricDocument } from '../../env';\nimport type { ImageFormat, TSize } from '../../typedefs';\nimport { FabricError } from '../internals/console';\n/**\n * Creates canvas element\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElement = (): HTMLCanvasElement => {\n  const element = getFabricDocument().createElement('canvas');\n  if (!element || typeof element.getContext === 'undefined') {\n    throw new FabricError('Failed to create `canvas` element');\n  }\n  return element;\n};\n\n/**\n * Creates image element (works on client and node)\n * @return {HTMLImageElement} HTML image element\n */\nexport const createImage = (): HTMLImageElement =>\n  getFabricDocument().createElement('img');\n\n/**\n * Creates a canvas element that is a copy of another and is also painted\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const copyCanvasElement = (\n  canvas: HTMLCanvasElement,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElementFor(canvas);\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\n  return newCanvas;\n};\n\nexport const createCanvasElementFor = (\n  canvas: HTMLCanvasElement | ImageData | HTMLImageElement | TSize,\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElement();\n  newCanvas.width = canvas.width;\n  newCanvas.height = canvas.height;\n  return newCanvas;\n};\n\n/**\n * since 2.6.0 moved from canvas instance to utility.\n * possibly useless\n * @param {CanvasElement} canvasEl to copy size and content of\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n * @param {Number} quality <= 1 and > 0\n * @return {String} data url\n */\nexport const toDataURL = (\n  canvasEl: HTMLCanvasElement,\n  format: ImageFormat,\n  quality: number,\n) => canvasEl.toDataURL(`image/${format}`, quality);\n\nexport const isHTMLCanvas = (\n  canvas?: HTMLCanvasElement | string,\n): canvas is HTMLCanvasElement => {\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\n};\n","import type { TRadian, TDegree } from '../../typedefs';\nimport { PiBy180 } from '../../constants';\n\n/**\n * Transforms degrees to radians.\n * @param {TDegree} degrees value in degrees\n * @return {TRadian} value in radians\n */\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\n  (degrees * PiBy180) as TRadian;\n\n/**\n * Transforms radians to degrees.\n * @param {TRadian} radians value in radians\n * @return {TDegree} value in degrees\n */\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\n  (radians / PiBy180) as TDegree;\n","import { iMatrix } from '../../constants';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\nimport { cos } from './cos';\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\nimport { sin } from './sin';\n\nexport type TRotateMatrixArgs = {\n  angle?: TDegree;\n};\n\nexport type TTranslateMatrixArgs = {\n  translateX?: number;\n  translateY?: number;\n};\n\nexport type TScaleMatrixArgs = {\n  scaleX?: number;\n  scaleY?: number;\n  flipX?: boolean;\n  flipY?: boolean;\n  skewX?: TDegree;\n  skewY?: TDegree;\n};\n\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\n  TRotateMatrixArgs &\n  TScaleMatrixArgs;\n\nexport type TQrDecomposeOut = Required<\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\n>;\n\nexport const isIdentityMatrix = (mat: TMat2D) =>\n  mat.every((value, index) => value === iMatrix[index]);\n\n/**\n * Apply transform t to point p\n * @deprecated use {@link Point#transform}\n * @param  {Point | XY} p The point to transform\n * @param  {Array} t The transform\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n * @return {Point} The transformed point\n */\nexport const transformPoint = (\n  p: XY,\n  t: TMat2D,\n  ignoreOffset?: boolean,\n): Point => new Point(p).transform(t, ignoreOffset);\n\n/**\n * Invert transformation t\n * @param {Array} t The transform\n * @return {Array} The inverted transform\n */\nexport const invertTransform = (t: TMat2D): TMat2D => {\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\n  r[4] = -x;\n  r[5] = -y;\n  return r;\n};\n\n/**\n * Multiply matrix A by matrix B to nest transformations\n * @param  {TMat2D} a First transformMatrix\n * @param  {TMat2D} b Second transformMatrix\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n * @return {TMat2D} The product of the two transform matrices\n */\nexport const multiplyTransformMatrices = (\n  a: TMat2D,\n  b: TMat2D,\n  is2x2?: boolean,\n): TMat2D =>\n  [\n    a[0] * b[0] + a[2] * b[1],\n    a[1] * b[0] + a[3] * b[1],\n    a[0] * b[2] + a[2] * b[3],\n    a[1] * b[2] + a[3] * b[3],\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\n  ] as TMat2D;\n\n/**\n * Multiplies {@link matrices} such that a matrix defines the plane for the rest of the matrices **after** it\n *\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\n *\n * @param matrices an array of matrices\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\n * @returns the multiplication product\n */\nexport const multiplyTransformMatrixArray = (\n  matrices: (TMat2D | undefined | null | false)[],\n  is2x2?: boolean,\n) =>\n  matrices.reduceRight(\n    (product: TMat2D, curr) =>\n      curr && product\n        ? multiplyTransformMatrices(curr, product, is2x2)\n        : curr || product,\n    undefined as unknown as TMat2D,\n  ) || iMatrix.concat();\n\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\n  Math.atan2(b, a) as TRadian;\n\n/**\n * Decomposes standard 2x3 matrix into transform components\n * @param  {TMat2D} a transformMatrix\n * @return {Object} Components of transform\n */\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\n  const angle = calcPlaneRotation(a),\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\n    scaleX = Math.sqrt(denom),\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\n  return {\n    angle: radiansToDegrees(angle),\n    scaleX,\n    scaleY,\n    skewX: radiansToDegrees(skewX),\n    skewY: 0 as TDegree,\n    translateX: a[4] || 0,\n    translateY: a[5] || 0,\n  };\n};\n\n/**\n * Generate a translation matrix\n *\n * A translation matrix in the form of\n * [ 1 0 x ]\n * [ 0 1 y ]\n * [ 0 0 1 ]\n *\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\n *\n * @param {number} x translation on X axis\n * @param {number} [y] translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\n  1,\n  0,\n  0,\n  1,\n  x,\n  y,\n];\n\n/**\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\n *\n * A matrix in the form of\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\n * [0       0      1                 ]\n *\n *\n * @param {TDegree} angle rotation in degrees\n * @param {XY} [pivotPoint] pivot point to rotate around\n * @returns {TMat2D} matrix\n */\nexport function createRotateMatrix(\n  { angle = 0 }: TRotateMatrixArgs = {},\n  { x = 0, y = 0 }: Partial<XY> = {},\n): TMat2D {\n  const angleRadiant = degreesToRadians(angle),\n    cosValue = cos(angleRadiant),\n    sinValue = sin(angleRadiant);\n  return [\n    cosValue,\n    sinValue,\n    -sinValue,\n    cosValue,\n    x ? x - (cosValue * x - sinValue * y) : 0,\n    y ? y - (sinValue * x + cosValue * y) : 0,\n  ];\n}\n\n/**\n * Generate a scale matrix around the point (0,0)\n *\n * A matrix in the form of\n * [x 0 0]\n * [0 y 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\n *\n * @param {number} x scale on X axis\n * @param {number} [y] scale on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\n  x,\n  0,\n  0,\n  y,\n  0,\n  0,\n];\n\nexport const angleToSkew = (angle: TDegree) =>\n  Math.tan(degreesToRadians(angle));\n\nexport const skewToAngle = (value: TRadian) =>\n  radiansToDegrees(Math.atan(value));\n\n/**\n * Generate a skew matrix for the X axis\n *\n * A matrix in the form of\n * [1 x 0]\n * [0 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\n *\n * @param {TDegree} skewValue translation on X axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  0,\n  angleToSkew(skewValue),\n  1,\n  0,\n  0,\n];\n\n/**\n * Generate a skew matrix for the Y axis\n *\n * A matrix in the form of\n * [1 0 0]\n * [y 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\n *\n * @param {TDegree} skewValue translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  angleToSkew(skewValue),\n  0,\n  1,\n  0,\n  0,\n];\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet.\n * is called DimensionsTransformMatrix because those properties are the one that influence\n * the size of the resulting box of the object.\n * @param  {Object} options\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @return {Number[]} transform matrix\n */\nexport const calcDimensionsMatrix = ({\n  scaleX = 1,\n  scaleY = 1,\n  flipX = false,\n  flipY = false,\n  skewX = 0 as TDegree,\n  skewY = 0 as TDegree,\n}: TScaleMatrixArgs) => {\n  let matrix = createScaleMatrix(\n    flipX ? -scaleX : scaleX,\n    flipY ? -scaleY : scaleY,\n  );\n  if (skewX) {\n    matrix = multiplyTransformMatrices(matrix, createSkewXMatrix(skewX), true);\n  }\n  if (skewY) {\n    matrix = multiplyTransformMatrices(matrix, createSkewYMatrix(skewY), true);\n  }\n  return matrix;\n};\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet\n * Before changing this function look at: src/benchmarks/calcTransformMatrix.mjs\n * @param  {Object} options\n * @param  {Number} [options.angle]\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @param  {Number} [options.translateX]\n * @param  {Number} [options.translateY]\n * @return {Number[]} transform matrix\n */\nexport const composeMatrix = (options: TComposeMatrixArgs): TMat2D => {\n  const { translateX = 0, translateY = 0, angle = 0 as TDegree } = options;\n  let matrix = createTranslateMatrix(translateX, translateY);\n  if (angle) {\n    matrix = multiplyTransformMatrices(matrix, createRotateMatrix({ angle }));\n  }\n  const scaleMatrix = calcDimensionsMatrix(options);\n  if (!isIdentityMatrix(scaleMatrix)) {\n    matrix = multiplyTransformMatrices(matrix, scaleMatrix);\n  }\n  return matrix;\n};\n","import { noop } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type {\n  Abortable,\n  Constructor,\n  TCrossOrigin,\n  TFiller,\n} from '../../typedefs';\nimport { createImage } from './dom';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { BaseFilter } from '../../filters/BaseFilter';\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\nimport { FabricError, SignalAbortedError } from '../internals/console';\nimport type { Shadow } from '../../Shadow';\n\nexport type LoadImageOptions = Abortable & {\n  /**\n   * cors value for the image loading, default to anonymous\n   */\n  crossOrigin?: TCrossOrigin;\n};\n\n/**\n * Loads image element from given url and resolve it, or catch.\n * @param {String} url URL representing an image\n * @param {LoadImageOptions} [options] image loading options\n * @returns {Promise<HTMLImageElement>} the loaded image.\n */\nexport const loadImage = (\n  url: string,\n  { signal, crossOrigin = null }: LoadImageOptions = {},\n) =>\n  new Promise<HTMLImageElement>(function (resolve, reject) {\n    if (signal && signal.aborted) {\n      return reject(new SignalAbortedError('loadImage'));\n    }\n    const img = createImage();\n    let abort: EventListenerOrEventListenerObject;\n    if (signal) {\n      abort = function (err: Event) {\n        img.src = '';\n        reject(err);\n      };\n      signal.addEventListener('abort', abort, { once: true });\n    }\n    const done = function () {\n      img.onload = img.onerror = null;\n      abort && signal?.removeEventListener('abort', abort);\n      resolve(img);\n    };\n    if (!url) {\n      done();\n      return;\n    }\n    img.onload = done;\n    img.onerror = function () {\n      abort && signal?.removeEventListener('abort', abort);\n      reject(new FabricError(`Error loading ${img.src}`));\n    };\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n  });\n\nexport type EnlivenObjectOptions = Abortable & {\n  /**\n   * Method for further parsing of object elements,\n   * called after each fabric object created.\n   */\n  reviver?: <\n    T extends\n      | BaseFabricObject\n      | FabricObject\n      | BaseFilter<string>\n      | Shadow\n      | TFiller,\n  >(\n    serializedObj: Record<string, any>,\n    instance: T,\n  ) => void;\n};\n\n/**\n * @TODO type this correctly.\n * Creates corresponding fabric instances from their object representations\n * @param {Object[]} objects Objects to enliven\n * @param {EnlivenObjectOptions} [options]\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\n * called after each fabric object created.\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<FabricObject[]>}\n */\nexport const enlivenObjects = <\n  T extends\n    | BaseFabricObject\n    | FabricObject\n    | BaseFilter<string>\n    | Shadow\n    | TFiller,\n>(\n  objects: any[],\n  { signal, reviver = noop }: EnlivenObjectOptions = {},\n) =>\n  new Promise<T[]>((resolve, reject) => {\n    const instances: T[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    Promise.all(\n      objects.map((obj) =>\n        classRegistry\n          .getClass<\n            Constructor<T> & {\n              fromObject(options: any, context: Abortable): Promise<T>;\n            }\n          >(obj.type)\n          .fromObject(obj, { signal })\n          .then((fabricInstance) => {\n            reviver(obj, fabricInstance);\n            instances.push(fabricInstance);\n            return fabricInstance;\n          }),\n      ),\n    )\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance) => {\n          (instance as FabricObject).dispose &&\n            (instance as FabricObject).dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n\n/**\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\n */\nexport const enlivenObjectEnlivables = <\n  R = Record<string, FabricObject | TFiller | null>,\n>(\n  serializedObject: any,\n  { signal }: Abortable = {},\n) =>\n  new Promise<R>((resolve, reject) => {\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    // enlive every possible property\n    const promises = Object.values(serializedObject).map((value: any) => {\n      if (!value) {\n        return value;\n      }\n      /**\n       * clipPath or shadow or gradient or text on a path or a pattern,\n       * or the backgroundImage or overlayImage of canvas\n       * If we have a type and there is a classe registered for it, we enlive it.\n       * If there is no class registered for it we return the value as is\n       * */\n      if (value.type && classRegistry.has(value.type)) {\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\n          signal,\n        }).then(([enlived]) => {\n          instances.push(enlived);\n          return enlived;\n        });\n      }\n      return value;\n    });\n    const keys = Object.keys(serializedObject);\n    Promise.all(promises)\n      .then((enlived) => {\n        return enlived.reduce((acc, instance, index) => {\n          acc[keys[index]] = instance;\n          return acc;\n        }, {});\n      })\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance: any) => {\n          instance.dispose && instance.dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n","/**\n * Populates an object with properties of another object\n * @param {Object} source Source object\n * @param {string[]} properties Properties names to include\n * @returns object populated with the picked keys\n */\nexport const pick = <T extends Record<string, any>>(\n  source: T,\n  keys: (keyof T)[] = [],\n) => {\n  return keys.reduce((o, key) => {\n    if (key in source) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n\nexport const pickBy = <T extends Record<string, any>>(\n  source: T,\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean,\n) => {\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\n    if (predicate(source[key], key, source)) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n","/**\n * Map of the 148 color names with HEX code\n * @see: https://www.w3.org/TR/css3-color/#svg-color\n */\nexport const ColorNameMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#0FF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#00F',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#0FF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgrey: '#A9A9A9',\n  darkgreen: '#006400',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#F0F',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  grey: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgrey: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#0F0',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#F0F',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#F00',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FF0',\n  yellowgreen: '#9ACD32',\n};\n","/**\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n * Formal syntax at the time of writing:\n * <rgb()> =\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\n * <alpha-value> = <number> | <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an rgba or rgb CSS color value\n *\n * /^          # Beginning of the string\n * rgba?       # \"rgb\" or \"rgba\"\n * \\(\\s*       # Opening parenthesis and optional whitespace\n * (\\d{0,3}    # 0 to three digits R channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the first color component\n * %?          # Optional percent sign after the first color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits G channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the second color component\n * %?          # Optional percent sign after the second color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits B channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the third color component\n * %?          # Optional percent sign after the third color component\n * \\s*         # Optional whitespace\n * (?:         # Beginning of non-capturing group for alpha value\n *  \\s*        # Optional whitespace\n *  [,/]       # Comma or slash separator for alpha value\n *  \\s*        # Optional whitespace\n *  (\\d{0,3}   # Zero to three digits\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\n *  )          # End of capturing group for alpha value\n *  %?         # Optional percent sign after alpha value\n *  \\s*        # Optional whitespace\n * )?          # End of non-capturing group for alpha value (optional)\n * \\)          # Closing parenthesis\n * $           # End of the string\n *\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\n *\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\n */\nexport const reRGBa = () =>\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n * Formal syntax at the time of writing:\n * <hsl()> =\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\n *\n * <hue> =\n *   <number>  |\n *   <angle>\n *\n * <alpha-value> =\n *   <number>      |\n *   <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an hsla or hsl CSS color value\n *\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\n * (\\d{0,3}          // Hue: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Hue: Optional (non capture group) decimal with one or more digits.\n * (?:deg|turn|rad)? // Hue: Optionally include suffix deg or turn or rad\n * )                 // Hue: End capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Saturation: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Saturation: Optional decimal with one or more digits in a non-capturing group\n * %?)               // Saturation: match optional % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{0,3}          // Lightness: 0 to three digits - start capture in a group\n * (?:\\.\\d+)?        // Lightness: Optional decimal with one or more digits in a non-capturing group\n * %?)                // Lightness: match % character and end capture group\n * \\s*               // Matches any whitespace characters zero or more times\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\n *   \\s*             // Matches any whitespace characters zero or more times\n *   [,/]            // Matches a comma or forward slash\n *   \\s*             // Matches any whitespace characters zero or more times\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\n *   \\s*             // Matches any whitespace characters zero or more times\n * )?                // Makes the alpha value group optional\n * \\)                // Matches the closing parenthesis\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\n *\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\n */\nexport const reHSLa = () =>\n  /^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n */\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\n","import type { TRGBAColorSource } from './typedefs';\n\n/**\n * @param {Number} p\n * @param {Number} q\n * @param {Number} t\n * @return {Number}\n */\nexport const hue2rgb = (p: number, q: number, t: number): number => {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n\n/**\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\n * @param {Number} r Red color value\n * @param {Number} g Green color value\n * @param {Number} b Blue color value\n * @param {Number} a Alpha color value pass through\n * @return {TRGBColorSource} Hsl color\n */\nexport const rgb2Hsl = (\n  r: number,\n  g: number,\n  b: number,\n  a: number,\n): TRGBAColorSource => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const maxValue = Math.max(r, g, b),\n    minValue = Math.min(r, g, b);\n\n  let h!: number, s: number;\n  const l = (maxValue + minValue) / 2;\n\n  if (maxValue === minValue) {\n    h = s = 0; // achromatic\n  } else {\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\n};\n\nexport const fromAlphaToFloat = (value = '1') =>\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\n\n/**\n * Convert a value in the inclusive range [0, 255] to hex\n */\nexport const hexify = (value: number) =>\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\n\n/**\n * Calculate the grey average value for rgb and pass through alpha\n */\nexport const greyAverage = ([\n  r,\n  g,\n  b,\n  a = 1,\n]: TRGBAColorSource): TRGBAColorSource => {\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\n  return [avg, avg, avg, a];\n};\n","import { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { ColorNameMap } from './color_map';\nimport { reHSLa, reHex, reRGBa } from './constants';\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\nimport {\n  hue2rgb,\n  hexify,\n  rgb2Hsl,\n  fromAlphaToFloat,\n  greyAverage,\n} from './util';\n\n/**\n * @class Color common color operations\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\n */\nexport class Color {\n  private declare _source: TRGBAColorSource;\n  isUnrecognised = false;\n\n  /**\n   *\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\n   */\n  constructor(color?: TColorArg) {\n    if (!color) {\n      // we default to black as canvas does\n      this.setSource([0, 0, 0, 1]);\n    } else if (color instanceof Color) {\n      this.setSource([...color._source]);\n    } else if (Array.isArray(color)) {\n      const [r, g, b, a = 1] = color;\n      this.setSource([r, g, b, a]);\n    } else {\n      this.setSource(this._tryParsingColor(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} [color] Color value to parse\n   * @returns {TRGBAColorSource}\n   */\n  protected _tryParsingColor(color: string) {\n    if (color in ColorNameMap) {\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\n    }\n    return color === 'transparent'\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\n      : Color.sourceFromHex(color) ||\n          Color.sourceFromRgb(color) ||\n          Color.sourceFromHsl(color) ||\n          // color is not recognized\n          // we default to black as canvas does\n          // eslint-disable-next-line no-constant-binary-expression\n          ((this.isUnrecognised = true) && ([0, 0, 0, 1] as TRGBAColorSource));\n  }\n\n  /**\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @return {TRGBAColorSource}\n   */\n  getSource() {\n    return this._source;\n  }\n\n  /**\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @param {TRGBAColorSource} source\n   */\n  setSource(source: TRGBAColorSource) {\n    this._source = source;\n  }\n\n  /**\n   * Returns color representation in RGB format\n   * @return {String} ex: rgb(0-255,0-255,0-255)\n   */\n  toRgb() {\n    const [r, g, b] = this.getSource();\n    return `rgb(${r},${g},${b})`;\n  }\n\n  /**\n   * Returns color representation in RGBA format\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n   */\n  toRgba() {\n    return `rgba(${this.getSource().join(',')})`;\n  }\n\n  /**\n   * Returns color representation in HSL format\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n   */\n  toHsl() {\n    const [h, s, l] = rgb2Hsl(...this.getSource());\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /**\n   * Returns color representation in HSLA format\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n   */\n  toHsla() {\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\n    return `hsla(${h},${s}%,${l}%,${a})`;\n  }\n\n  /**\n   * Returns color representation in HEX format\n   * @return {String} ex: FF5555\n   */\n  toHex() {\n    const fullHex = this.toHexa();\n    return fullHex.slice(0, 6);\n  }\n\n  /**\n   * Returns color representation in HEXA format\n   * @return {String} ex: FF5555CC\n   */\n  toHexa() {\n    const [r, g, b, a] = this.getSource();\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\n  }\n\n  /**\n   * Gets value of alpha channel for this color\n   * @return {Number} 0-1\n   */\n  getAlpha() {\n    return this.getSource()[3];\n  }\n\n  /**\n   * Sets value of alpha channel for this color\n   * @param {Number} alpha Alpha value 0-1\n   * @return {Color} thisArg\n   */\n  setAlpha(alpha: number) {\n    this._source[3] = alpha;\n    return this;\n  }\n\n  /**\n   * Transforms color to its grayscale representation\n   * @return {Color} thisArg\n   */\n  toGrayscale() {\n    this.setSource(greyAverage(this.getSource()));\n    return this;\n  }\n\n  /**\n   * Transforms color to its black and white representation\n   * @param {Number} threshold\n   * @return {Color} thisArg\n   */\n  toBlackWhite(threshold: number) {\n    const [average, , , a] = greyAverage(this.getSource()),\n      bOrW = average < (threshold || 127) ? 0 : 255;\n    this.setSource([bOrW, bOrW, bOrW, a]);\n    return this;\n  }\n\n  /**\n   * Overlays color with another color\n   * @param {String|Color} otherColor\n   * @return {Color} thisArg\n   */\n  overlayWith(otherColor: string | Color) {\n    if (!(otherColor instanceof Color)) {\n      otherColor = new Color(otherColor);\n    }\n\n    const source = this.getSource(),\n      otherAlpha = 0.5,\n      otherSource = otherColor.getSource(),\n      [R, G, B] = source.map((value, index) =>\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha),\n      );\n\n    this.setSource([R, G, B, source[3]]);\n    return this;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {Color}\n   */\n  static fromRgb(color: string): Color {\n    return Color.fromRgba(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromRgba(color: string): Color {\n    return new Color(Color.sourceFromRgb(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reRGBa());\n    if (match) {\n      const [r, g, b] = match.slice(1, 4).map((value) => {\n        const parsedValue = parseFloat(value);\n        return value.endsWith('%')\n          ? Math.round(parsedValue * 2.55)\n          : parsedValue;\n      });\n      return [r, g, b, fromAlphaToFloat(match[4])];\n    }\n  }\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf Color\n   * @return {Color}\n   */\n  static fromHsl(color: string): Color {\n    return Color.fromHsla(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromHsla(color: string): Color {\n    return new Color(Color.sourceFromHsl(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {TRGBAColorSource | undefined} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reHSLa());\n    if (!match) {\n      return;\n    }\n    const match1degrees = Color.parseAngletoDegrees(match[1]);\n\n    const h = (((match1degrees % 360) + 360) % 360) / 360,\n      s = parseFloat(match[2]) / 100,\n      l = parseFloat(match[3]) / 100;\n    let r: number, g: number, b: number;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n        p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      fromAlphaToFloat(match[4]),\n    ];\n  }\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color Color value ex: FF5555\n   * @return {Color}\n   */\n  static fromHex(color: string): Color {\n    return new Color(Color.sourceFromHex(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\n    if (color.match(reHex())) {\n      const value = color.slice(color.indexOf('#') + 1),\n        isShortNotation = value.length <= 4;\n      let expandedValue: string[];\n      if (isShortNotation) {\n        expandedValue = value.split('').map((hex) => hex + hex);\n      } else {\n        expandedValue = value.match(/.{2}/g)!;\n      }\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\n        parseInt(hexCouple, 16),\n      );\n      return [r, g, b, a / 255];\n    }\n  }\n\n  /**\n   * Converts a string that could be any angle notation (50deg, 0.5turn, 2rad)\n   * into degrees without the 'deg' suffix\n   * @static\n   * @memberOf Color\n   * @param {String} value ex: 0deg, 0.5turn, 2rad\n   * @return {Number} number in degrees or NaN if inputs are invalid\n   */\n  static parseAngletoDegrees(value: string): number {\n    const lowercase = value.toLowerCase();\n    const numeric = parseFloat(lowercase);\n\n    if (lowercase.includes('rad')) {\n      return radiansToDegrees(numeric);\n    }\n\n    if (lowercase.includes('turn')) {\n      return numeric * 360;\n    }\n\n    // Value is probably just a number already in degrees eg '50'\n    return numeric;\n  }\n}\n","/**\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n * @param {number|string} number number to operate on\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {number}\n */\nexport const toFixed = (number: number | string, fractionDigits: number) =>\n  parseFloat(Number(number).toFixed(fractionDigits));\n","import { Color } from '../../color/Color';\nimport { config } from '../../config';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, NONE } from '../../constants';\nimport type {\n  TBBox,\n  TMat2D,\n  SVGElementName,\n  SupportedSVGUnit,\n} from '../../typedefs';\nimport { toFixed } from './toFixed';\n\n/**\n * Returns array of attributes for given svg that fabric parses\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\n * @return {Array} string names of supported attributes\n */\nexport const getSvgAttributes = (type: SVGElementName) => {\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\n  switch (type) {\n    case 'linearGradient':\n      return commonAttributes.concat([\n        'x1',\n        'y1',\n        'x2',\n        'y2',\n        'gradientUnits',\n        'gradientTransform',\n      ]);\n    case 'radialGradient':\n      return commonAttributes.concat([\n        'gradientUnits',\n        'gradientTransform',\n        'cx',\n        'cy',\n        'r',\n        'fx',\n        'fy',\n        'fr',\n      ]);\n    case 'stop':\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\n  }\n  return commonAttributes;\n};\n\n/**\n * Converts from attribute value to pixel value if applicable.\n * Returns converted pixels or original value not converted.\n * @param {string} value number to operate on\n * @param {number} fontSize\n * @return {number}\n */\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\n  const unit = /\\D{0,2}$/.exec(value),\n    number = parseFloat(value);\n  const dpi = config.DPI;\n  switch (unit?.[0] as SupportedSVGUnit) {\n    case 'mm':\n      return (number * dpi) / 25.4;\n\n    case 'cm':\n      return (number * dpi) / 2.54;\n\n    case 'in':\n      return number * dpi;\n\n    case 'pt':\n      return (number * dpi) / 72; // or * 4 / 3\n\n    case 'pc':\n      return ((number * dpi) / 72) * 12; // or * 16\n\n    case 'em':\n      return number * fontSize;\n\n    default:\n      return number;\n  }\n};\n\nexport type MeetOrSlice = 'meet' | 'slice';\n\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\n\nexport type TPreserveArParsed = {\n  meetOrSlice: MeetOrSlice;\n  alignX: MinMidMax;\n  alignY: MinMidMax;\n};\n\n// align can be either none or undefined or a combination of mid/max\nconst parseAlign = (align: string): MinMidMax[] => {\n  //divide align in alignX and alignY\n  if (align && align !== NONE) {\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\n  } else if (align === NONE) {\n    return [align, align];\n  }\n  return ['Mid', 'Mid'];\n};\n\n/**\n * Parse preserveAspectRatio attribute from element\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n * @param {string} attribute to be parsed\n * @return {Object} an object containing align and meetOrSlice attribute\n */\nexport const parsePreserveAspectRatioAttribute = (\n  attribute: string,\n): TPreserveArParsed => {\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\n    MinMidMax,\n    MeetOrSlice | undefined,\n  ];\n  const [alignX, alignY] = parseAlign(firstPart);\n  return {\n    meetOrSlice: secondPart || 'meet',\n    alignX,\n    alignY,\n  };\n};\n\n/**\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n * @param {TMat2D} transform an array with 6 numbers\n * @return {String} transform matrix for svg\n */\nexport const matrixToSVG = (transform: TMat2D) =>\n  'matrix(' +\n  transform\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\n    .join(' ') +\n  ')';\n\n/**\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n * @param prop\n * @param value\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\n * @returns\n */\nexport const colorPropToSVG = (\n  prop: string,\n  value?: any,\n  inlineStyle = true,\n) => {\n  let colorValue;\n  let opacityValue;\n  if (!value) {\n    colorValue = 'none';\n  } else if (value.toLive) {\n    colorValue = `url(#SVGID_${value.id})`;\n  } else {\n    const color = new Color(value),\n      opacity = color.getAlpha();\n\n    colorValue = color.toRgb();\n    if (opacity !== 1) {\n      opacityValue = opacity.toString();\n    }\n  }\n  if (inlineStyle) {\n    return `${prop}: ${colorValue}; ${\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\n    }`;\n  } else {\n    return `${prop}=\"${colorValue}\" ${\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\n    }`;\n  }\n};\n\nexport const createSVGRect = (\n  color: string,\n  { left, top, width, height }: TBBox,\n  precision = config.NUM_FRACTION_DIGITS,\n) => {\n  const svgColor = colorPropToSVG(FILL, color, false);\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\n    toFixed(value, precision),\n  );\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\n};\n","import type { FabricObject } from '../shapes/Object/Object';\nimport type { TFiller } from '../typedefs';\nimport type { FabricText } from '../shapes/Text/Text';\nimport type { Pattern } from '../Pattern';\nimport type { Path } from '../shapes/Path';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\n\nexport const isFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && (filler as TFiller).toLive !== undefined;\n};\n\nexport const isSerializableFiller = (\n  filler: TFiller | string | null,\n): filler is TFiller => {\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\n};\n\nexport const isPattern = (filler: TFiller): filler is Pattern => {\n  return (\n    !!filler && (filler as Pattern).offsetX !== undefined && 'source' in filler\n  );\n};\n\nexport const isTextObject = (\n  fabricObject?: FabricObject,\n): fabricObject is FabricText => {\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as FabricText)._renderText === 'function'\n  );\n};\n\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\n  // we could use instanceof but that would mean pulling in Text code for a simple check\n  // @todo discuss what to do and how to do\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\n  );\n};\n\nexport const isActiveSelection = (\n  fabricObject?: FabricObject,\n): fabricObject is ActiveSelection =>\n  !!fabricObject && 'multiSelectionStacking' in fabricObject;\n","/**\n * Returns element scroll offsets\n * @param {HTMLElement} element Element to operate on\n * @return {Object} Object with left/top values\n */\nexport function getScrollLeftTop(element: HTMLElement | null) {\n  const doc = element && getDocumentFromElement(element);\n  let left = 0,\n    top = 0;\n  if (!element || !doc) {\n    return { left, top };\n  }\n  let elementLoop: HTMLElement | Document | ShadowRoot = element;\n  const docElement = doc.documentElement,\n    body = doc.body || {\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  // While loop checks (and then sets element to) .parentNode OR .host\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n  while (\n    elementLoop &&\n    (elementLoop.parentNode || (elementLoop as unknown as ShadowRoot).host)\n  ) {\n    elementLoop = (elementLoop.parentNode ||\n      (elementLoop as unknown as ShadowRoot).host) as\n      | HTMLElement\n      | Document\n      | ShadowRoot;\n    if (elementLoop === doc) {\n      left = body.scrollLeft || docElement.scrollLeft || 0;\n      top = body.scrollTop || docElement.scrollTop || 0;\n    } else {\n      left += (elementLoop as HTMLElement).scrollLeft || 0;\n      top += (elementLoop as HTMLElement).scrollTop || 0;\n    }\n\n    if (\n      elementLoop.nodeType === 1 &&\n      (elementLoop as HTMLElement).style.position === 'fixed'\n    ) {\n      break;\n    }\n  }\n\n  return { left, top };\n}\n\nexport const getDocumentFromElement = (el: HTMLElement) =>\n  el.ownerDocument || null;\n\nexport const getWindowFromElement = (el: HTMLElement) =>\n  el.ownerDocument?.defaultView || null;\n","import { NONE } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1,\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>,\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 };\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle: CSSStyleDeclaration =\n    getWindowFromElement(element)?.getComputedStyle(element, null) ||\n    ({} as CSSStyleDeclaration);\n  offset.left += parseInt(elemStyle.borderLeftWidth, 10) || 0;\n  offset.top += parseInt(elemStyle.borderTopWidth, 10) || 0;\n  offset.left += parseInt(elemStyle.paddingLeft, 10) || 0;\n  offset.top += parseInt(elemStyle.paddingTop, 10) || 0;\n\n  let box = { left: 0, top: 0 };\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport type { CSSDimensions } from './util';\nimport { setCSSDimensions, getElementOffset } from './util';\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\nimport { setCanvasDimensions } from './util';\nimport { FabricError } from '../../util/internals/console';\n\nexport type CanvasItem = {\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class StaticCanvasDOMManager {\n  /**\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\n   * in order to return it to original state on dispose\n   * @type string\n   */\n  private _originalCanvasStyle?: string;\n\n  lower: CanvasItem;\n\n  constructor(arg0?: string | HTMLCanvasElement) {\n    const el = this.createLowerCanvas(arg0);\n    this.lower = { el, ctx: el.getContext('2d')! };\n  }\n\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n    const el = isHTMLCanvas(arg0)\n      ? arg0\n      : (arg0 &&\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\n        createCanvasElement();\n    if (el.hasAttribute('data-fabric')) {\n      throw new FabricError(\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?',\n      );\n    }\n    this._originalCanvasStyle = el.style.cssText;\n    el.setAttribute('data-fabric', 'main');\n    el.classList.add('lower-canvas');\n    return el;\n  }\n\n  cleanupDOM({ width, height }: TSize) {\n    const { el } = this.lower;\n    // restore canvas style and attributes\n    el.classList.remove('lower-canvas');\n    el.removeAttribute('data-fabric');\n    // restore canvas size to original size in case retina scaling was applied\n    el.setAttribute('width', `${width}`);\n    el.setAttribute('height', `${height}`);\n    el.style.cssText = this._originalCanvasStyle || '';\n    this._originalCanvasStyle = undefined;\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    const { el, ctx } = this.lower;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>) {\n    setCSSDimensions(this.lower.el, size);\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   */\n  calcOffset() {\n    return getElementOffset(this.lower.el);\n  }\n\n  dispose() {\n    getEnv().dispose(this.lower.el);\n    // @ts-expect-error disposing\n    delete this.lower;\n  }\n}\n","import { iMatrix } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\n\ninterface CanvasDrawableOptions {\n  /**\n   * if set to false background image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  backgroundVpt: boolean;\n\n  /**\n   * Background color of canvas instance.\n   * @type {(String|TFiller)}\n   * @default\n   */\n  backgroundColor: TFiller | string;\n\n  /**\n   * Background image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  backgroundImage?: FabricObject;\n\n  /**\n   * if set to false overlay image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  overlayVpt: boolean;\n\n  /**\n   * Overlay color of canvas instance.\n   * @since 1.3.9\n   * @type {(String|TFiller)}\n   * @default\n   */\n  overlayColor: TFiller | string;\n\n  /**\n   * Overlay image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  overlayImage?: FabricObject;\n}\n\ninterface CanvasRenderingOptions {\n  /**\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n   * since the renders are queued and executed one per frame.\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n   * Left default to true to do not break documentation and old app, fiddles.\n   * @type Boolean\n   * @default\n   */\n  renderOnAddRemove: boolean;\n\n  /**\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\n   * are not included in current viewport.\n   * May greatly help in applications with crowded canvas and use of zoom/pan\n   * If One of the corner of the bounding box of the object is on the canvas\n   * the objects get rendered.\n   * @type Boolean\n   * @default true\n   */\n  skipOffscreen: boolean;\n\n  /**\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n   * @type Boolean\n   * @default\n   */\n  enableRetinaScaling: boolean;\n\n  /**\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n   * @type Boolean\n   * @default\n   */\n  imageSmoothingEnabled: boolean;\n\n  /**\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n   * top left corner of the canvas.\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n   * @type FabricObject\n   */\n  clipPath?: FabricObject;\n}\n\nexport interface CanvasExportOptions {\n  /**\n   * Indicates whether toObject/toDatalessObject should include default values\n   * if set to false, takes precedence over the object value.\n   * @type Boolean\n   * @default\n   */\n  includeDefaultValues: boolean;\n\n  /**\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n   * a zoomed canvas will then produce zoomed SVG output.\n   * @type Boolean\n   * @default\n   */\n  svgViewportTransformation: boolean;\n}\n\nexport interface StaticCanvasOptions\n  extends CanvasDrawableOptions,\n    CanvasRenderingOptions,\n    CanvasExportOptions {\n  /**\n   * Width in virtual/logical pixels of the canvas.\n   * The canvas can be larger than width if retina scaling is active\n   * @type number\n   */\n  width: number;\n\n  /**\n   * Height in virtual/logical pixels of the canvas.\n   * The canvas can be taller than width if retina scaling is active\n   * @type height\n   */\n  height: number;\n\n  /**\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: boolean;\n\n  /**\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n   * It gives PRIORITY to DOM scrolling, it doesn't make it always possible.\n   * If is true, when using a touch event on the canvas, the canvas will scroll if scroll is possible.\n   * If we are in drawing mode or if we are selecting an object the canvas preventDefault and so it won't scroll\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: boolean;\n\n  /**\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n   * @type Array\n   * @example <caption>Default transform</caption>\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n   * @default\n   */\n  viewportTransform: TMat2D;\n}\n\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\n  backgroundVpt: true,\n  backgroundColor: '',\n  overlayVpt: true,\n  overlayColor: '',\n\n  includeDefaultValues: true,\n  svgViewportTransformation: true,\n\n  renderOnAddRemove: true,\n  skipOffscreen: true,\n  enableRetinaScaling: true,\n  imageSmoothingEnabled: true,\n\n  /**\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: false,\n  /**\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: false,\n\n  viewportTransform: [...iMatrix],\n};\n","import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents,\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  protected declare hasLostContext: boolean;\n  protected declare nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  /**\n   * When true control drawing is skipped.\n   * This boolean is used to avoid toDataURL to export controls.\n   * Usage of this boolean to build up other flows and features is not supported\n   * @type Boolean\n   * @default false\n   */\n  protected declare skipControlsDrawing: boolean;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  protected declare __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {},\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults(),\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.skipControlsDrawing = false;\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas',\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Sets width of this canvas instance\n   * @param {Number|String} value                         Value to set width to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setWidth(\n    value: TSize['width'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setWidth(\n    value: CSSDimensions['width'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setWidth(value: number, options?: never) {\n    return this.setDimensions({ width: value }, options);\n  }\n\n  /**s\n   * Sets height of this canvas instance\n   * @param {Number|String} value                         Value to set height to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setHeight(\n    value: TSize['height'],\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setHeight(\n    value: CSSDimensions['height'],\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setHeight(value: CSSDimensions['height'], options?: never) {\n    return this.setDimensions({ height: value }, options);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {},\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false },\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false },\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions,\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    this.viewportTransform = vpt;\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5],\n      ),\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(_ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      // todo migrate to the newer one\n      path.shouldCache();\n      path._transformDone = true;\n      (path as TCachedFabricObject).renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject,\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY,\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay',\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * Returned value is an object with top and left properties\n   * @return {Object} object with \"top\" and \"left\" number values\n   * @deprecated migrate to `getCenterPoint`\n   */\n  getCenter() {\n    return {\n      top: this.height / 2,\n      left: this.width / 2,\n    };\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y),\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y),\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform),\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * var json = canvas.toJSON();\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude),\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[],\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude,\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n',\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS,\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n',\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver,\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`,\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver?: TSVGReviver,\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`,\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n',\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {},\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal },\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElementFor(this);\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality,\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions,\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      originalSkipControlsDrawing = this.skipControlsDrawing,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElementFor({\n        width: scaledWidth,\n        height: scaledHeight,\n      }),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.skipControlsDrawing = true;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    this.skipControlsDrawing = originalSkipControlsDrawing;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { getScrollLeftTop } from './dom_misc';\n\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\n\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\n  const touchProp = (event as TouchEvent).changedTouches;\n  if (touchProp && touchProp[0]) {\n    return touchProp[0];\n  }\n  return event as MouseEvent;\n}\n\nexport const getPointer = (event: TPointerEvent): Point => {\n  const element = event.target as HTMLElement,\n    scroll = getScrollLeftTop(element),\n    _evt = getTouchInfo(event);\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\n};\n\nexport const isTouchEvent = (event: TPointerEvent) =>\n  touchEvents.includes(event.type) ||\n  (event as PointerEvent).pointerType === 'touch';\n\nexport const stopEvent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import type { XY } from '../../Point';\nimport type { TBBox } from '../../typedefs';\n\n/**\n * Calculates bounding box (left, top, width, height) from given `points`\n * @param {XY[]} points\n * @return {Object} Object with left, top, width, height properties\n */\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\n  let left = 0,\n    top = 0,\n    width = 0,\n    height = 0;\n\n  for (let i = 0, len = points.length; i < len; i++) {\n    const { x, y } = points[i];\n    if (x > width || !i) width = x;\n    if (x < left || !i) left = x;\n    if (y > height || !i) height = y;\n    if (y < top || !i) top = y;\n  }\n\n  return {\n    left,\n    top,\n    width: width - left,\n    height: height - top,\n  };\n};\n","import { Point } from '../../Point';\nimport { CENTER } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from './matrix';\n\n/**\n * given an object and a transform, apply the inverse transform to the object,\n * this is equivalent to remove from that object that transformation, so that\n * added in a space with the removed transform, the object will be the same as before.\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\n * in the opposite direction.\n * This util is used to add objects inside transformed groups or nested groups.\n * @param {FabricObject} object the object you want to transform\n * @param {TMat2D} transform the destination transform\n */\nexport const removeTransformFromObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const inverted = invertTransform(transform),\n    finalTransform = multiplyTransformMatrices(\n      inverted,\n      object.calcOwnMatrix(),\n    );\n  applyTransformToObject(object, finalTransform);\n};\n\n/**\n * given an object and a transform, apply the transform to the object.\n * this is equivalent to change the space where the object is drawn.\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\n * This is used when removing an object from an active selection for example.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(transform, object.calcOwnMatrix()),\n  );\n\n/**\n * discard an object transform state and apply the one from the matrix.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const applyTransformToObject = (\n  object: FabricObject,\n  transform: TMat2D,\n) => {\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\n      qrDecompose(transform),\n    center = new Point(translateX, translateY);\n  object.flipX = false;\n  object.flipY = false;\n  Object.assign(object, otherOptions);\n  object.set({ scaleX, scaleY });\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n/**\n * reset an object transform state to neutral. Top and left are not accounted for\n * @param  {FabricObject} target object to transform\n */\nexport const resetObjectTransform = (target: FabricObject) => {\n  target.scaleX = 1;\n  target.scaleY = 1;\n  target.skewX = 0;\n  target.skewY = 0;\n  target.flipX = false;\n  target.flipY = false;\n  target.rotate(0);\n};\n\n/**\n * Extract Object transform values\n * @param  {FabricObject} target object to read from\n * @return {Object} Components of transform\n */\nexport const saveObjectTransform = (target: FabricObject) => ({\n  scaleX: target.scaleX,\n  scaleY: target.scaleY,\n  skewX: target.skewX,\n  skewY: target.skewY,\n  angle: target.angle,\n  left: target.left,\n  flipX: target.flipX,\n  flipY: target.flipY,\n  top: target.top,\n});\n\n/**\n * given a width and height, return the size of the bounding box\n * that can contains the box with width/height with applied transform.\n * Use to calculate the boxes around objects for controls.\n * @param {Number} width\n * @param {Number} height\n * @param {TMat2D} t\n * @returns {Point} size\n */\nexport const sizeAfterTransform = (\n  width: number,\n  height: number,\n  t: TMat2D,\n) => {\n  const dimX = width / 2,\n    dimY = height / 2,\n    points = [\n      new Point(-dimX, -dimY),\n      new Point(dimX, -dimY),\n      new Point(-dimX, dimY),\n      new Point(dimX, dimY),\n    ].map((p) => p.transform(t)),\n    bbox = makeBoundingBoxFromPoints(points);\n  return new Point(bbox.width, bbox.height);\n};\n","import { iMatrix } from '../../constants';\nimport type { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\nimport { applyTransformToObject } from './objectTransforms';\n\n/**\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\n * @param [from]\n * @param [to]\n * @returns\n */\nexport const calcPlaneChangeMatrix = (\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n) => multiplyTransformMatrices(invertTransform(to), from);\n\n/**\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\n * From the canvas/viewer's perspective the point remains unchanged.\n *\n * @example <caption>Send point from canvas plane to group plane</caption>\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\n * var group = new Group([obj], { strokeWidth: 0 });\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\n *\n * @param {Point} point\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\n * @returns {Point} transformed point\n */\nexport const sendPointToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\n\n/**\n * See {@link sendPointToPlane}\n */\nexport const sendVectorToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix,\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\n\n/**\n *\n * A util that abstracts applying transform to objects.\\\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\n * Changes the space/plane where `object` is drawn.\\\n * From the canvas/viewer's perspective `object` remains unchanged.\n *\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\n * let obj, obj2;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * // render\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\n * obj.clipPath = undefined;\n * obj2.clipPath = clipPath;\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\n *\n * @example <caption>Clip an object's clip path with an existing object</caption>\n * let obj, existingObj;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\n * clipPath.clipPath = existingObj;\n *\n * @param {FabricObject} object\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\n * @returns {Matrix} the transform matrix that was applied to `object`\n */\nexport const sendObjectToPlane = (\n  object: FabricObject,\n  from?: TMat2D,\n  to?: TMat2D,\n): TMat2D => {\n  const t = calcPlaneChangeMatrix(from, to);\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(t, object.calcOwnMatrix()),\n  );\n  return t;\n};\n","import type {\n  ObjectModificationEvents,\n  TModificationEvents,\n} from '../EventTypeDefs';\n\nexport const fireEvent = (\n  eventName: TModificationEvents,\n  options: ObjectModificationEvents[typeof eventName],\n) => {\n  const {\n    transform: { target },\n  } = options;\n  target.canvas?.fire(`object:${eventName}`, {\n    ...options,\n    target,\n  });\n  target.fire(eventName, options);\n};\n","import type { TOriginX, TOriginY } from '../../typedefs';\n\nconst originOffset = {\n  left: -0.5,\n  top: -0.5,\n  center: 0,\n  bottom: 0.5,\n  right: 0.5,\n};\n/**\n * Resolves origin value relative to center\n * @private\n * @param {TOriginX | TOriginY} originValue originX / originY\n * @returns number\n */\n\nexport const resolveOrigin = (\n  originValue: TOriginX | TOriginY | number,\n): number =>\n  typeof originValue === 'string'\n    ? originOffset[originValue]\n    : originValue - 0.5;\n","import type {\n  TPointerEvent,\n  Transform,\n  TransformAction,\n  BasicTransformEvent,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TOriginX, TOriginY } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { CENTER } from '../constants';\n\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\n\n/**\n * @param {Boolean} alreadySelected true if target is already selected\n * @param {String} corner a string representing the corner ml, mr, tl ...\n * @param {Event} e Event object\n * @param {FabricObject} [target] inserted back to help overriding. Unused\n */\nexport const getActionFromCorner = (\n  alreadySelected: boolean,\n  corner: string | undefined,\n  e: TPointerEvent,\n  target: FabricObject,\n) => {\n  if (!corner || !alreadySelected) {\n    return 'drag';\n  }\n  const control = target.controls[corner];\n  return control.getActionName(e, control, target);\n};\n\n/**\n * Checks if transform is centered\n * @param {Object} transform transform data\n * @return {Boolean} true if transform is centered\n */\nexport function isTransformCentered(transform: Transform) {\n  return (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) &&\n    resolveOrigin(transform.originY) === resolveOrigin(CENTER)\n  );\n}\n\nexport function invertOrigin(origin: TOriginX | TOriginY) {\n  return -resolveOrigin(origin) + 0.5;\n}\n\nexport const isLocked = (\n  target: FabricObject,\n  lockingKey:\n    | 'lockMovementX'\n    | 'lockMovementY'\n    | 'lockRotation'\n    | 'lockScalingX'\n    | 'lockScalingY'\n    | 'lockSkewingX'\n    | 'lockSkewingY'\n    | 'lockScalingFlip',\n) => target[lockingKey];\n\nexport const commonEventInfo: TransformAction<\n  Transform,\n  BasicTransformEvent\n> = (eventData, transform, x, y) => {\n  return {\n    e: eventData,\n    transform,\n    pointer: new Point(x, y),\n  };\n};\n\n/**\n * Combine control position and object angle to find the control direction compared\n * to the object center.\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n * @param {Control} control the control class\n * @return {Number} 0 - 7 a quadrant number\n */\nexport function findCornerQuadrant(\n  fabricObject: FabricObject,\n  control: Control,\n): number {\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle(),\n    cornerAngle =\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n  return Math.round((cornerAngle % 360) / 45);\n}\n\n/**\n * @returns the normalized point (rotated relative to center) in local coordinates\n */\nfunction normalizePoint(\n  target: FabricObject,\n  point: Point,\n  originX: TOriginX,\n  originY: TOriginY,\n): Point {\n  const center = target.getRelativeCenterPoint(),\n    p =\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\n        ? target.translateToGivenOrigin(\n            center,\n            CENTER,\n            CENTER,\n            originX,\n            originY,\n          )\n        : new Point(target.left, target.top),\n    p2 = target.angle\n      ? point.rotate(-degreesToRadians(target.angle), center)\n      : point;\n  return p2.subtract(p);\n}\n\n/**\n * Transforms a point to the offset from the given origin\n * @param {Object} transform\n * @param {String} originX\n * @param {String} originY\n * @param {number} x\n * @param {number} y\n * @return {Fabric.Point} the normalized point\n */\nexport function getLocalPoint(\n  { target, corner }: Transform,\n  originX: TOriginX,\n  originY: TOriginY,\n  x: number,\n  y: number,\n) {\n  const control = target.controls[corner],\n    zoom = target.canvas?.getZoom() || 1,\n    padding = target.padding / zoom,\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\n  if (localPoint.x >= padding) {\n    localPoint.x -= padding;\n  }\n  if (localPoint.x <= -padding) {\n    localPoint.x += padding;\n  }\n  if (localPoint.y >= padding) {\n    localPoint.y -= padding;\n  }\n  if (localPoint.y <= padding) {\n    localPoint.y += padding;\n  }\n  localPoint.x -= control.offsetX;\n  localPoint.y -= control.offsetY;\n  return localPoint;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { LEFT, TOP, MOVING } from '../constants';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo, isLocked } from './util';\n\n/**\n * Action handler\n * @private\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if the translation occurred\n */\nexport const dragHandler: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const { target, offsetX, offsetY } = transform,\n    newLeft = x - offsetX,\n    newTop = y - offsetY,\n    moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\n  moveX && target.set(LEFT, newLeft);\n  moveY && target.set(TOP, newTop);\n  if (moveX || moveY) {\n    fireEvent(MOVING, commonEventInfo(eventData, transform, x, y));\n  }\n  return moveX || moveY;\n};\n","import type { TSVGReviver } from '../../typedefs';\nimport { uid } from '../../util/internals/uid';\nimport { colorPropToSVG, matrixToSVG } from '../../util/misc/svgParsing';\nimport { FILL, NONE, STROKE } from '../../constants';\nimport type { FabricObject } from './FabricObject';\nimport { isFiller } from '../../util/typeAssertions';\n\nexport class FabricObjectSVGExportMixin {\n  /**\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\n   * This reference is a UID in the fabric namespace and is temporary stored here.\n   * @type {String}\n   */\n  declare clipPathId?: string;\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    skipShadow?: boolean,\n  ) {\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n      strokeDashArray = this.strokeDashArray\n        ? this.strokeDashArray.join(' ')\n        : NONE,\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n      visibility = this.visible ? '' : ' visibility: hidden;',\n      filter = skipShadow ? '' : this.getSvgFilter(),\n      fill = colorPropToSVG(FILL, this.fill),\n      stroke = colorPropToSVG(STROKE, this.stroke);\n\n    return [\n      stroke,\n      'stroke-width: ',\n      strokeWidth,\n      '; ',\n      'stroke-dasharray: ',\n      strokeDashArray,\n      '; ',\n      'stroke-linecap: ',\n      strokeLineCap,\n      '; ',\n      'stroke-dashoffset: ',\n      strokeDashOffset,\n      '; ',\n      'stroke-linejoin: ',\n      strokeLineJoin,\n      '; ',\n      'stroke-miterlimit: ',\n      strokeMiterLimit,\n      '; ',\n      fill,\n      'fill-rule: ',\n      fillRule,\n      '; ',\n      'opacity: ',\n      opacity,\n      ';',\n      filter,\n      visibility,\n    ].join('');\n  }\n\n  /**\n   * Returns filter for svg shadow\n   * @return {String}\n   */\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\n  }\n\n  /**\n   * Returns id attribute for svg output\n   * @return {String}\n   */\n  getSvgCommons(\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string },\n  ) {\n    return [\n      this.id ? `id=\"${this.id}\" ` : '',\n      this.clipPath\n        ? `clip-path=\"url(#${\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\n              .clipPathId\n          })\" `\n        : '',\n    ].join('');\n  }\n\n  /**\n   * Returns transform-string for svg-export\n   * @param {Boolean} use the full transform or the single object one.\n   * @return {String}\n   */\n  getSvgTransform(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    full?: boolean,\n    additionalTransform = '',\n  ) {\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\n    return `${svgTransform}${additionalTransform}\" `;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * This function is implemented in each subclass\n   * This is just because typescript otherwise cryies all the time\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(_reviver?: TSVGReviver): string[] {\n    return [''];\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\n      reviver,\n    });\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver,\n      })\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createBaseClipPathSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      reviver,\n      additionalTransform = '',\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {},\n  ) {\n    const commonPieces = [\n        this.getSvgTransform(true, additionalTransform),\n        this.getSvgCommons(),\n      ].join(''),\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    objectMarkup[index] = commonPieces;\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      noStyle,\n      reviver,\n      withShadow,\n      additionalTransform,\n    }: {\n      noStyle?: boolean;\n      reviver?: TSVGReviver;\n      withShadow?: boolean;\n      additionalTransform?: string;\n    } = {},\n  ): string {\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\n      vectorEffect = this.strokeUniform\n        ? 'vector-effect=\"non-scaling-stroke\" '\n        : '',\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\n      stroke = this.stroke,\n      fill = this.fill,\n      shadow = this.shadow,\n      markup = [],\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    let clipPathMarkup;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      clipPathMarkup = `<clipPath id=\"${\n        clipPath.clipPathId\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\n    }\n    if (absoluteClipPath) {\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n    }\n    markup.push(\n      '<g ',\n      this.getSvgTransform(false),\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n      ' >\\n',\n    );\n    const commonPieces = [\n      styleInfo,\n      vectorEffect,\n      noStyle ? '' : this.addPaintOrder(),\n      ' ',\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\n    ].join('');\n    objectMarkup[index] = commonPieces;\n    if (isFiller(fill)) {\n      markup.push(fill.toSVG(this));\n    }\n    if (isFiller(stroke)) {\n      markup.push(stroke.toSVG(this));\n    }\n    if (shadow) {\n      markup.push(shadow.toSVG(this));\n    }\n    if (clipPath) {\n      markup.push(clipPathMarkup);\n    }\n    markup.push(objectMarkup.join(''));\n    markup.push('</g>\\n');\n    absoluteClipPath && markup.push('</g>\\n');\n    return reviver ? reviver(markup.join('')) : markup.join('');\n  }\n\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.paintFirst !== FILL ? ` paint-order=\"${this.paintFirst}\" ` : '';\n  }\n}\n","export function getSvgRegex(arr: string[]) {\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n}\n","import { getSvgRegex } from './getSvgRegex';\nimport { LEFT, TOP } from '../constants';\n\nexport const reNum = String.raw`(?:[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?)`;\n\nexport const svgNS = 'http://www.w3.org/2000/svg';\n\nexport const reFontDeclaration = new RegExp(\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n    reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\n    reNum +\n    '))?\\\\s+(.*)',\n);\n\nexport const svgValidTagNames = [\n    'path',\n    'circle',\n    'polygon',\n    'polyline',\n    'ellipse',\n    'rect',\n    'line',\n    'image',\n    'text',\n  ],\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n  svgInvalidAncestors = [\n    'pattern',\n    'defs',\n    'symbol',\n    'metadata',\n    'clipPath',\n    'mask',\n    'desc',\n  ],\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n  attributesMap = {\n    cx: LEFT,\n    x: LEFT,\n    r: 'radius',\n    cy: TOP,\n    y: TOP,\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform',\n    'image-rendering': 'imageSmoothing',\n  },\n  fSize = 'font-size',\n  cPath = 'clip-path';\n\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n// matches, e.g.: +14.56e-12, etc.\nexport const reViewBoxAttrValue = new RegExp(\n  '^' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*' +\n    '$',\n);\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n\nconst unitVectorX = new Point(1, 0);\nconst zero = new Point();\n\n/**\n * Rotates `vector` with `radians`\n * @param {Point} vector The vector to rotate (x and y)\n * @param {Number} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotateVector = (vector: Point, radians: TRadian) =>\n  vector.rotate(radians);\n\n/**\n * Creates a vector from points represented as a point\n *\n * @param {Point} from\n * @param {Point} to\n * @returns {Point} vector\n */\nexport const createVector = (from: XY, to: XY): Point =>\n  new Point(to).subtract(from);\n\n/**\n * return the magnitude of a vector\n * @return {number}\n */\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\n\n/**\n * Calculates the angle between 2 vectors\n * @param {Point} a\n * @param {Point} b\n * @returns the angle in radians from `a` to `b`\n */\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\n\n/**\n * Calculates the angle between the x axis and the vector\n * @param {Point} v\n * @returns the angle in radians of `v`\n */\nexport const calcVectorRotation = (v: Point) =>\n  calcAngleBetweenVectors(unitVectorX, v);\n\n/**\n * @param {Point} v\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\n */\nexport const getUnitVector = (v: Point): Point =>\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\n\n/**\n * @param {Point} v\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\n * @returns {Point} the unit orthogonal vector\n */\nexport const getOrthonormalVector = (\n  v: Point,\n  counterClockwise = true,\n): Point =>\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\n\n/**\n * Cross product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number} the magnitude of Z vector\n */\nexport const crossProduct = (a: Point, b: Point): number =>\n  a.x * b.y - a.y * b.x;\n\n/**\n * Dot product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number}\n */\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\n\n/**\n * Checks if the vector is between two others. It is considered\n * to be inside when the vector to be tested is between the\n * initial vector and the final vector (included) in a counterclockwise direction.\n * @param {Point} t vector to be tested\n * @param {Point} a initial vector\n * @param {Point} b final vector\n * @returns {boolean} true if the vector is among the others\n */\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\n  if (t.eq(a) || t.eq(b)) return true;\n  const AxB = crossProduct(a, b),\n    AxT = crossProduct(a, t),\n    BxT = crossProduct(b, t);\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\n};\n","import { classRegistry } from './ClassRegistry';\nimport { Color } from './color/Color';\nimport { config } from './config';\nimport { reNum } from './parser/constants';\nimport { Point } from './Point';\nimport type { FabricObject } from './shapes/Object/FabricObject';\nimport type { TClassProperties } from './typedefs';\nimport { uid } from './util/internals/uid';\nimport { pickBy } from './util/misc/pick';\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\nimport { toFixed } from './util/misc/toFixed';\nimport { rotateVector } from './util/misc/vectors';\n\n/**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\n   *   - (?:px)?: Optionally captures the \"px\" unit.\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\n\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\n\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\n\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\n   */\n// eslint-disable-next-line max-len\n\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\n\nconst reOffsetsAndBlur = new RegExp(\n  '(?:\\\\s|^)' +\n    shadowOffsetRegex +\n    shadowOffsetRegex +\n    '(' +\n    reNum +\n    '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)',\n);\n\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\n  color: 'rgb(0,0,0)',\n  blur: 0,\n  offsetX: 0,\n  offsetY: 0,\n  affectStroke: false,\n  includeDefaultValues: true,\n  nonScaling: false,\n};\n\nexport type SerializedShadowOptions = {\n  color: string;\n  blur: number;\n  offsetX: number;\n  offsetY: number;\n  affectStroke: boolean;\n  nonScaling: boolean;\n  type: string;\n};\n\nexport class Shadow {\n  /**\n   * Shadow color\n   * @type String\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * Shadow blur\n   * @type Number\n   */\n  declare blur: number;\n\n  /**\n   * Shadow horizontal offset\n   * @type Number\n   * @default\n   */\n  declare offsetX: number;\n\n  /**\n   * Shadow vertical offset\n   * @type Number\n   * @default\n   */\n  declare offsetY: number;\n\n  /**\n   * Whether the shadow should affect stroke operations\n   * @type Boolean\n   * @default\n   */\n  declare affectStroke: boolean;\n\n  /**\n   * Indicates whether toObject should include default values\n   * @type Boolean\n   * @default\n   */\n  declare includeDefaultValues: boolean;\n\n  /**\n   * When `false`, the shadow will scale with the object.\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n   * default to false\n   * @type Boolean\n   * @default\n   */\n  declare nonScaling: boolean;\n\n  declare id: number;\n\n  static ownDefaults = shadowDefaultValues;\n\n  static type = 'shadow';\n\n  /**\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n   */\n  constructor(options: Partial<TClassProperties<Shadow>>);\n  constructor(svgAttribute: string);\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\n    const options: Partial<TClassProperties<Shadow>> =\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\n    Object.assign(this, Shadow.ownDefaults, options);\n    this.id = uid();\n  }\n\n  /**\n   * @param {String} value Shadow value to parse\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\n   */\n  static parseShadow(value: string) {\n    const shadowStr = value.trim(),\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\n        reOffsetsAndBlur.exec(shadowStr) || []\n      ).map((value) => parseFloat(value) || 0),\n      color = (shadowStr.replace(reOffsetsAndBlur, '') || 'rgb(0,0,0)').trim();\n\n    return {\n      color,\n      offsetX,\n      offsetY,\n      blur,\n    };\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n   * @return {String} Returns CSS3 text-shadow declaration\n   */\n  toString() {\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n  }\n\n  /**\n   * Returns SVG representation of a shadow\n   * @param {FabricObject} object\n   * @return {String} SVG representation of a shadow\n   */\n  toSVG(object: FabricObject) {\n    const offset = rotateVector(\n        new Point(this.offsetX, this.offsetY),\n        degreesToRadians(-object.angle),\n      ),\n      BLUR_BOX = 20,\n      color = new Color(this.color);\n    let fBoxX = 40,\n      fBoxY = 40;\n\n    if (object.width && object.height) {\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n      // we add some extra space to filter box to contain the blur ( 20 )\n      fBoxX =\n        toFixed(\n          (Math.abs(offset.x) + this.blur) / object.width,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n      fBoxY =\n        toFixed(\n          (Math.abs(offset.y) + this.blur) / object.height,\n          config.NUM_FRACTION_DIGITS,\n        ) *\n          100 +\n        BLUR_BOX;\n    }\n    if (object.flipX) {\n      offset.x *= -1;\n    }\n    if (object.flipY) {\n      offset.y *= -1;\n    }\n\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\n      100 + 2 * fBoxY\n    }%\" x=\"-${fBoxX}%\" width=\"${\n      100 + 2 * fBoxX\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\n      this.blur ? this.blur / 2 : 0,\n      config.NUM_FRACTION_DIGITS,\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\n      offset.x,\n      config.NUM_FRACTION_DIGITS,\n    )}\" dy=\"${toFixed(\n      offset.y,\n      config.NUM_FRACTION_DIGITS,\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\n  }\n\n  /**\n   * Returns object representation of a shadow\n   * @return {Object} Object representation of a shadow instance\n   */\n  toObject() {\n    const data: SerializedShadowOptions = {\n      color: this.color,\n      blur: this.blur,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      affectStroke: this.affectStroke,\n      nonScaling: this.nonScaling,\n      type: (this.constructor as typeof Shadow).type,\n    };\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\n    return !this.includeDefaultValues\n      ? pickBy(data, (value, key) => value !== defaults[key])\n      : data;\n  }\n\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\n    return new this(options);\n  }\n}\n\nclassRegistry.setClass(Shadow, 'shadow');\n","export const capValue = (min: number, value: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n","import {\n  TOP,\n  LEFT,\n  SCALE_Y,\n  SCALE_X,\n  SKEW_X,\n  SKEW_Y,\n  FILL,\n  STROKE,\n} from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { InteractiveFabricObject } from './InteractiveObject';\nimport type { FabricObject } from './Object';\n\nexport const stateProperties = [\n  TOP,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  'flipX',\n  'flipY',\n  'originX',\n  'originY',\n  'angle',\n  'opacity',\n  'globalCompositeOperation',\n  'shadow',\n  'visible',\n  SKEW_X,\n  SKEW_Y,\n];\n\nexport const cacheProperties = [\n  FILL,\n  STROKE,\n  'strokeWidth',\n  'strokeDashArray',\n  'width',\n  'height',\n  'paintFirst',\n  'strokeUniform',\n  'strokeLineCap',\n  'strokeDashOffset',\n  'strokeLineJoin',\n  'strokeMiterLimit',\n  'backgroundColor',\n  'clipPath',\n];\n\nexport const fabricObjectDefaultValues: Partial<\n  TClassProperties<FabricObject>\n> = {\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  angle: 0,\n  flipX: false,\n  flipY: false,\n  scaleX: 1,\n  scaleY: 1,\n  minScaleLimit: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: LEFT,\n  originY: TOP,\n  strokeWidth: 1,\n  strokeUniform: false,\n  padding: 0,\n  opacity: 1,\n  paintFirst: FILL,\n  fill: 'rgb(0,0,0)',\n  fillRule: 'nonzero',\n  stroke: null,\n  strokeDashArray: null,\n  strokeDashOffset: 0,\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  strokeMiterLimit: 4,\n  globalCompositeOperation: 'source-over',\n  backgroundColor: '',\n  shadow: null,\n  visible: true,\n  includeDefaultValues: true,\n  excludeFromExport: false,\n  objectCaching: true,\n  clipPath: undefined,\n  inverted: false,\n  absolutePositioned: false,\n  centeredRotation: true,\n  centeredScaling: false,\n  dirty: true,\n} as const;\n\nexport const interactiveObjectDefaultValues: Partial<\n  TClassProperties<InteractiveFabricObject>\n> = {\n  noScaleCache: true,\n  lockMovementX: false,\n  lockMovementY: false,\n  lockRotation: false,\n  lockScalingX: false,\n  lockScalingY: false,\n  lockSkewingX: false,\n  lockSkewingY: false,\n  lockScalingFlip: false,\n  cornerSize: 13,\n  touchCornerSize: 24,\n  transparentCorners: true,\n  cornerColor: 'rgb(178,204,255)',\n  cornerStrokeColor: '',\n  cornerStyle: 'rect',\n  cornerDashArray: null,\n  hasControls: true,\n  borderColor: 'rgb(178,204,255)',\n  borderDashArray: null,\n  borderOpacityWhenMoving: 0.4,\n  borderScaleFactor: 1,\n  hasBorders: true,\n  selectionBackgroundColor: '',\n  selectable: true,\n  evented: true,\n  perPixelTargetFind: false,\n  activeOn: 'down',\n  hoverCursor: null,\n  moveCursor: null,\n};\n","/**\n * Easing functions\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\n */\n\nimport { twoMathPi, halfPI } from '../../constants';\nimport type { TEasingFunction } from './types';\n\nconst normalize = (a: number, c: number, p: number, s: number) => {\n  if (a < Math.abs(c)) {\n    a = c;\n    s = p / 4;\n  } else {\n    //handle the 0/0 case:\n    if (c === 0 && a === 0) {\n      s = (p / twoMathPi) * Math.asin(1);\n    } else {\n      s = (p / twoMathPi) * Math.asin(c / a);\n    }\n  }\n  return { a, c, p, s };\n};\n\nconst elastic = (\n  a: number,\n  s: number,\n  p: number,\n  t: number,\n  d: number,\n): number =>\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\n\n/**\n * Default sinusoidal easing\n */\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Cubic easing in\n */\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 3 + b;\n\n/**\n * Cubic easing out\n */\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 3 + 1) + b;\n\n/**\n * Cubic easing in and out\n */\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 3 + b;\n  }\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\n};\n\n/**\n * Quartic easing in\n */\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\n  c * (t /= d) * t ** 3 + b;\n\n/**\n * Quartic easing out\n */\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\n\n/**\n * Quartic easing in and out\n */\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 4 + b;\n  }\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\n};\n\n/**\n * Quintic easing in\n */\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 5 + b;\n\n/**\n * Quintic easing out\n */\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 5 + 1) + b;\n\n/**\n * Quintic easing in and out\n */\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 5 + b;\n  }\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\n};\n\n/**\n * Sinusoidal easing in\n */\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Sinusoidal easing out\n */\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\n  c * Math.sin((t / d) * halfPI) + b;\n\n/**\n * Sinusoidal easing in and out\n */\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n\n/**\n * Exponential easing in\n */\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\n\n/**\n * Exponential easing out\n */\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\n\n/**\n * Exponential easing in and out\n */\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\n  if (t === 0) {\n    return b;\n  }\n  if (t === d) {\n    return b + c;\n  }\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\n  }\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\n};\n\n/**\n * Circular easing in\n */\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\n/**\n * Circular easing out\n */\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\n/**\n * Circular easing in and out\n */\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\n  }\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n};\n\n/**\n * Elastic easing in\n */\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\n  return -elastic(normA, normS, normP, t, d) + b;\n};\n\n/**\n * Elastic easing out\n */\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  return (\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\n    normC +\n    b\n  );\n};\n\n/**\n * Elastic easing in and out\n */\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d / 2;\n  if (t === 2) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * (0.3 * 1.5);\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  if (t < 1) {\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\n  }\n  return (\n    normA *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\n      0.5 +\n    normC +\n    b\n  );\n};\n\n/**\n * Backwards easing in\n */\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\n\n/**\n * Backwards easing out\n */\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\n/**\n * Backwards easing in and out\n */\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n  }\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n};\n\n/**\n * Bouncing easing out\n */\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\n  if ((t /= d) < 1 / 2.75) {\n    return c * (7.5625 * t * t) + b;\n  } else if (t < 2 / 2.75) {\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n  } else if (t < 2.5 / 2.75) {\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n  } else {\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n};\n\n/**\n * Bouncing easing in\n */\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\n  c - easeOutBounce(d - t, 0, c, d) + b;\n\n/**\n * Bouncing easing in and out\n */\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\n  t < d / 2\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\n/**\n * Quadratic easing in\n */\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\n\n/**\n * Quadratic easing out\n */\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\n  -c * (t /= d) * (t - 2) + b;\n\n/**\n * Quadratic easing in and out\n */\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 2 + b;\n  }\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\n};\n","import { noop } from '../../constants';\nimport { requestAnimFrame } from './AnimationFrameProvider';\nimport { runningAnimations } from './AnimationRegistry';\nimport { defaultEasing } from './easing';\nimport type {\n  AnimationState,\n  TAbortCallback,\n  TBaseAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultAbort = () => false;\n\nexport abstract class AnimationBase<\n  T extends number | number[] = number | number[],\n> {\n  declare readonly startValue: T;\n  declare readonly endValue: T;\n  declare readonly duration: number;\n  declare readonly delay: number;\n\n  protected declare readonly byValue: T;\n  protected declare readonly easing: TEasingFunction<T>;\n\n  private declare readonly _onStart: VoidFunction;\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _abort: TAbortCallback<T>;\n\n  /**\n   * Used to register the animation to a target object\n   * so that it can be cancelled within the object context\n   */\n  declare readonly target?: unknown;\n\n  private _state: AnimationState = 'pending';\n  /**\n   * Time %, or the ratio of `timeElapsed / duration`\n   * @see tick\n   */\n  durationProgress = 0;\n  /**\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\n   */\n  valueProgress = 0;\n  /**\n   * Current value\n   */\n  declare value: T;\n  /**\n   * Animation start time ms\n   */\n  private declare startTime: number;\n\n  constructor({\n    startValue,\n    byValue,\n    duration = 500,\n    delay = 0,\n    easing = defaultEasing,\n    onStart = noop,\n    onChange = noop,\n    onComplete = noop,\n    abort = defaultAbort,\n    target,\n  }: TBaseAnimationOptions<T>) {\n    this.tick = this.tick.bind(this);\n\n    this.duration = duration;\n    this.delay = delay;\n    this.easing = easing;\n    this._onStart = onStart;\n    this._onChange = onChange;\n    this._onComplete = onComplete;\n    this._abort = abort;\n    this.target = target;\n\n    this.startValue = startValue;\n    this.byValue = byValue;\n    this.value = this.startValue;\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  isDone() {\n    return this._state === 'aborted' || this._state === 'completed';\n  }\n\n  /**\n   * Calculate the current value based on the easing parameters\n   * @param timeElapsed in ms\n   * @protected\n   */\n  protected abstract calculate(timeElapsed: number): {\n    value: T;\n    valueProgress: number;\n  };\n\n  start() {\n    const firstTick: FrameRequestCallback = (timestamp) => {\n      if (this._state !== 'pending') return;\n      this.startTime = timestamp || +new Date();\n      this._state = 'running';\n      this._onStart();\n      this.tick(this.startTime);\n    };\n\n    this.register();\n\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\n    // we don't want that\n    if (this.delay > 0) {\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\n    } else {\n      requestAnimFrame(firstTick);\n    }\n  }\n\n  private tick(t: number) {\n    const durationMs = (t || +new Date()) - this.startTime;\n    const boundDurationMs = Math.min(durationMs, this.duration);\n    this.durationProgress = boundDurationMs / this.duration;\n    const { value, valueProgress } = this.calculate(boundDurationMs);\n    this.value = Object.freeze(value);\n    this.valueProgress = valueProgress;\n\n    if (this._state === 'aborted') {\n      return;\n    } else if (\n      this._abort(this.value, this.valueProgress, this.durationProgress)\n    ) {\n      this._state = 'aborted';\n      this.unregister();\n    } else if (durationMs >= this.duration) {\n      this.durationProgress = this.valueProgress = 1;\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\n      this._state = 'completed';\n      this._onComplete(\n        this.endValue,\n        this.valueProgress,\n        this.durationProgress,\n      );\n      this.unregister();\n    } else {\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\n      requestAnimFrame(this.tick);\n    }\n  }\n\n  private register() {\n    runningAnimations.push(this as unknown as AnimationBase);\n  }\n\n  private unregister() {\n    runningAnimations.remove(this as unknown as AnimationBase);\n  }\n\n  abort() {\n    this._state = 'aborted';\n    this.unregister();\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ValueAnimationOptions } from './types';\n\nexport class ValueAnimation extends AnimationBase<number> {\n  constructor({\n    startValue = 0,\n    endValue = 100,\n    ...otherOptions\n  }: ValueAnimationOptions) {\n    super({\n      ...otherOptions,\n      startValue,\n      byValue: endValue - startValue,\n    });\n  }\n\n  protected calculate(timeElapsed: number) {\n    const value = this.easing(\n      timeElapsed,\n      this.startValue,\n      this.byValue,\n      this.duration,\n    );\n    return {\n      value,\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\n    };\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ArrayAnimationOptions } from './types';\n\nexport class ArrayAnimation extends AnimationBase<number[]> {\n  constructor({\n    startValue = [0],\n    endValue = [100],\n    ...options\n  }: ArrayAnimationOptions) {\n    super({\n      ...options,\n      startValue,\n      byValue: endValue.map((value, i) => value - startValue[i]),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const values = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    );\n    return {\n      value: values,\n      valueProgress: Math.abs(\n        (values[0] - this.startValue[0]) / this.byValue[0],\n      ),\n    };\n  }\n}\n","import { Color } from '../../color/Color';\nimport type { TRGBAColorSource } from '../../color/typedefs';\nimport { halfPI } from '../../constants';\nimport { capValue } from '../misc/capValue';\nimport { AnimationBase } from './AnimationBase';\nimport type {\n  ColorAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultColorEasing: TEasingFunction = (\n  timeElapsed,\n  startValue,\n  byValue,\n  duration,\n) => {\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\n  return startValue + byValue * durationProgress;\n};\n\nconst wrapColorCallback = <R>(\n  callback?: TOnAnimationChangeCallback<string, R>,\n) =>\n  callback &&\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\n\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\n  constructor({\n    startValue,\n    endValue,\n    easing = defaultColorEasing,\n    onChange,\n    onComplete,\n    abort,\n    ...options\n  }: ColorAnimationOptions) {\n    const startColor = new Color(startValue).getSource();\n    const endColor = new Color(endValue).getSource();\n    super({\n      ...options,\n      startValue: startColor,\n      byValue: endColor.map(\n        (value, i) => value - startColor[i],\n      ) as TRGBAColorSource,\n      easing,\n      onChange: wrapColorCallback(onChange),\n      onComplete: wrapColorCallback(onComplete),\n      abort: wrapColorCallback(abort),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const [r, g, b, a] = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i),\n    ) as TRGBAColorSource;\n    const value = [\n      ...[r, g, b].map(Math.round),\n      capValue(0, a, 1),\n    ] as TRGBAColorSource;\n    return {\n      value,\n      valueProgress:\n        // to correctly calculate the change ratio we must find a changed value\n        value\n          .map((p, i) =>\n            this.byValue[i] !== 0\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\n              : 0,\n          )\n          .find((p) => p !== 0) || 0,\n    };\n  }\n}\n","import { ValueAnimation } from './ValueAnimation';\nimport { ArrayAnimation } from './ArrayAnimation';\nimport { ColorAnimation } from './ColorAnimation';\nimport type {\n  ValueAnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n} from './types';\nimport type { TColorArg } from '../../color/typedefs';\n\nexport type TAnimation<T extends number | number[] | TColorArg> =\n  T extends TColorArg\n    ? ColorAnimation\n    : T extends number[]\n      ? ArrayAnimation\n      : ValueAnimation;\n\nconst isArrayAnimation = (\n  options: ArrayAnimationOptions | ValueAnimationOptions,\n): options is ArrayAnimationOptions => {\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\n};\n\n/**\n * Changes value(s) from startValue to endValue within a certain period of time,\n * invoking callbacks as the value(s) change.\n *\n * @example\n * animate({\n *   startValue: 1,\n *   endValue: 0,\n *   onChange: (v) => {\n *     obj.set('opacity', v);\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\n *     canvas.renderAll();\n *   }\n * });\n *\n * @example Using lists:\n * animate({\n *   startValue: [1, 2, 3],\n *   endValue: [2, 4, 6],\n *   onChange: ([x, y, zoom]) => {\n *     canvas.zoomToPoint(new Point(x, y), zoom);\n *     canvas.renderAll();\n *   }\n * });\n *\n */\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n>(\n  options: T,\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation,\n>(options: T): R {\n  const animation = (\n    isArrayAnimation(options)\n      ? new ArrayAnimation(options)\n      : new ValueAnimation(options)\n  ) as R;\n  animation.start();\n  return animation;\n}\n\nexport function animateColor(options: ColorAnimationOptions) {\n  const animation = new ColorAnimation(options);\n  animation.start();\n  return animation;\n}\n","import { Point } from './Point';\nimport { createVector } from './util/misc/vectors';\n\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\n\nexport class Intersection {\n  declare points: Point[];\n\n  declare status?: IntersectionType;\n\n  constructor(status?: IntersectionType) {\n    this.status = status;\n    this.points = [];\n  }\n\n  /**\n   * Used to verify if a point is alredy in the collection\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  private includes(point: Point): boolean {\n    return this.points.some((p) => p.eq(point));\n  }\n\n  /**\n   * Appends points of intersection\n   * @param {...Point[]} points\n   * @return {Intersection} thisArg\n   * @chainable\n   */\n  private append(...points: Point[]): Intersection {\n    this.points = this.points.concat(\n      points.filter((point) => {\n        return !this.includes(point);\n      }),\n    );\n    return this;\n  }\n\n  /**\n   * check if point T is on the segment or line defined between A and B\n   *\n   * @param {Point} T the point we are checking for\n   * @param {Point} A one extremity of the segment\n   * @param {Point} B the other extremity of the segment\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\n   * @returns true if `T` is contained\n   */\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\n    if (A.eq(B)) {\n      // Edge case: the segment is a point, we check for coincidence,\n      // infinite param has no meaning because there are infinite lines to consider\n      return T.eq(A);\n    } else if (A.x === B.x) {\n      // Edge case: horizontal line.\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\n      return (\n        T.x === A.x &&\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\n      );\n    } else if (A.y === B.y) {\n      // Edge case: vertical line.\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\n      return (\n        T.y === A.y &&\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\n      );\n    } else {\n      // Generic case: sloped line.\n      // we check that AT has the same slope as AB\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\n      const AB = createVector(A, B);\n      const AT = createVector(A, T);\n      const s = AT.divide(AB);\n      return infinite\n        ? Math.abs(s.x) === Math.abs(s.y)\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\n    }\n  }\n\n  /**\n   * Use the ray casting algorithm to determine if {@link point} is in the polygon defined by {@link points}\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\n   * @param point\n   * @param points polygon points\n   * @returns\n   */\n  static isPointInPolygon(point: Point, points: Point[]) {\n    const other = new Point(point).setX(\n      Math.min(point.x - 1, ...points.map((p) => p.x)),\n    );\n    let hits = 0;\n    for (let index = 0; index < points.length; index++) {\n      const inter = this.intersectSegmentSegment(\n        // polygon side\n        points[index],\n        points[(index + 1) % points.length],\n        // ray\n        point,\n        other,\n      );\n      if (inter.includes(point)) {\n        // point is on the polygon side\n        return true;\n      }\n      hits += Number(inter.status === 'Intersection');\n    }\n    return hits % 2 === 1;\n  }\n\n  /**\n   * Checks if a line intersects another\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\n   * @static\n   * @param {Point} a1\n   * @param {Point} a2\n   * @param {Point} b1\n   * @param {Point} b2\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLineLine(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n    aInfinite = true,\n    bInfinite = true,\n  ): Intersection {\n    const a2xa1x = a2.x - a1.x,\n      a2ya1y = a2.y - a1.y,\n      b2xb1x = b2.x - b1.x,\n      b2yb1y = b2.y - b1.y,\n      a1xb1x = a1.x - b1.x,\n      a1yb1y = a1.y - b1.y,\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\n    if (uB !== 0) {\n      const ua = uaT / uB,\n        ub = ubT / uB;\n      if (\n        (aInfinite || (0 <= ua && ua <= 1)) &&\n        (bInfinite || (0 <= ub && ub <= 1))\n      ) {\n        return new Intersection('Intersection').append(\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y),\n        );\n      } else {\n        return new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        const segmentsCoincide =\n          aInfinite ||\n          bInfinite ||\n          Intersection.isPointContained(a1, b1, b2) ||\n          Intersection.isPointContained(a2, b1, b2) ||\n          Intersection.isPointContained(b1, a1, a2) ||\n          Intersection.isPointContained(b2, a1, a2);\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\n      } else {\n        return new Intersection('Parallel');\n      }\n    }\n  }\n\n  /**\n   * Checks if a segment intersects a line\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} s1 boundary point of segment\n   * @param {Point} s2 other boundary point of segment\n   * @param {Point} l1 point on line\n   * @param {Point} l2 other point on line\n   * @return {Intersection}\n   */\n  static intersectSegmentLine(\n    s1: Point,\n    s2: Point,\n    l1: Point,\n    l2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\n  }\n\n  /**\n   * Checks if a segment intersects another\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point} b1 boundary point of segment\n   * @param {Point} b2 other boundary point of segment\n   * @return {Intersection}\n   */\n  static intersectSegmentSegment(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n  ): Intersection {\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\n  }\n\n  /**\n   * Checks if line intersects polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @see {@link intersectSegmentPolygon} for segment intersection\n   * @param {Point} a1 point on line\n   * @param {Point} a2 other point on line\n   * @param {Point[]} points polygon points\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLinePolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n    infinite = true,\n  ): Intersection {\n    const result = new Intersection();\n    const length = points.length;\n\n    for (let i = 0, b1, b2, inter; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\n      if (inter.status === 'Coincident') {\n        return inter;\n      }\n      result.append(...inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if segment intersects polygon\n   * @static\n   * @see {@link intersectLinePolygon} for line intersection\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point[]} points polygon points\n   * @return {Intersection}\n   */\n  static intersectSegmentPolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n  ): Intersection {\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\n  }\n\n  /**\n   * Checks if polygon intersects another polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @param {Point[]} points1\n   * @param {Point[]} points2\n   * @return {Intersection}\n   */\n  static intersectPolygonPolygon(\n    points1: Point[],\n    points2: Point[],\n  ): Intersection {\n    const result = new Intersection(),\n      length = points1.length;\n    const coincidences: Intersection[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const a1 = points1[i],\n        a2 = points1[(i + 1) % length],\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\n      if (inter.status === 'Coincident') {\n        coincidences.push(inter);\n        result.append(a1, a2);\n      } else {\n        result.append(...inter.points);\n      }\n    }\n\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\n      return new Intersection('Coincident');\n    } else if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @see {@link intersectPolygonPolygon} for polygon intersection\n   * @param {Point[]} points polygon points\n   * @param {Point} r1 top left point of rect\n   * @param {Point} r2 bottom right point of rect\n   * @return {Intersection}\n   */\n  static intersectPolygonRectangle(\n    points: Point[],\n    r1: Point,\n    r2: Point,\n  ): Intersection {\n    const min = r1.min(r2),\n      max = r1.max(r2),\n      topRight = new Point(max.x, min.y),\n      bottomLeft = new Point(min.x, max.y);\n\n    return Intersection.intersectPolygonPolygon(points, [\n      min,\n      topRight,\n      max,\n      bottomLeft,\n    ]);\n  }\n}\n","import type {\n  TBBox,\n  TCornerPoint,\n  TDegree,\n  TMat2D,\n  TOriginX,\n  TOriginY,\n} from '../../typedefs';\nimport { SCALE_X, SCALE_Y, iMatrix } from '../../constants';\nimport { Intersection } from '../../Intersection';\nimport { Point } from '../../Point';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  createRotateMatrix,\n  createTranslateMatrix,\n  composeMatrix,\n  invertTransform,\n  multiplyTransformMatrices,\n  transformPoint,\n  calcPlaneRotation,\n} from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { ControlProps } from './types/ControlProps';\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\nimport type { Group } from '../Group';\nimport { calcDimensionsMatrix } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport { CommonMethods } from '../../CommonMethods';\nimport type { BaseProps } from './types/BaseProps';\nimport type { FillStrokeProps } from './types/FillStrokeProps';\nimport { CENTER, LEFT, TOP } from '../../constants';\n\ntype TMatrixCache = {\n  key: number[];\n  value: TMat2D;\n};\n\ntype TACoords = TCornerPoint;\n\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\n  extends CommonMethods<EventSpec>\n  implements\n    Pick<ControlProps, 'padding'>,\n    BaseProps,\n    Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\n{\n  // #region Geometry\n\n  declare padding: number;\n\n  /**\n   * Describe object's corner position in scene coordinates.\n   * The coordinates are derived from the following:\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\n   * The coordinates do not depend on viewport changes.\n   * The coordinates get updated with {@link setCoords}.\n   * You can calculate them without updating with {@link calcACoords()}\n   */\n  declare aCoords: TACoords;\n\n  /**\n   * storage cache for object transform matrix\n   */\n  declare ownMatrixCache?: TMatrixCache;\n\n  /**\n   * storage cache for object full transform matrix\n   */\n  declare matrixCache?: TMatrixCache;\n\n  /**\n   * A Reference of the Canvas where the object is actually added\n   * @type StaticCanvas | Canvas;\n   * @default undefined\n   * @private\n   */\n  declare canvas?: StaticCanvas | Canvas;\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  getX(): number {\n    return this.getXY().x;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  setX(value: number) {\n    this.setXY(this.getXY().setX(value));\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  getY(): number {\n    return this.getXY().y;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  setY(value: number) {\n    this.setXY(this.getXY().setY(value));\n  }\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getX}\n   */\n  getRelativeX(): number {\n    return this.left;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this method is identical to {@link setX}\n   */\n  setRelativeX(value: number) {\n    this.left = value;\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getY}\n   */\n  getRelativeY(): number {\n    return this.top;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link setY}\n   */\n  setRelativeY(value: number) {\n    this.top = value;\n  }\n\n  /**\n   * @returns {Point} x position according to object's {@link originX} {@link originY} properties in canvas coordinate plane\n   */\n  getXY(): Point {\n    const relativePosition = this.getRelativeXY();\n    return this.group\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\n      : relativePosition;\n  }\n\n  /**\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\n   * You can specify {@link originX} and {@link originY} values,\n   * that otherwise are the object's current values.\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\n   * @param {Point} point position in scene coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\n    if (this.group) {\n      point = transformPoint(\n        point,\n        invertTransform(this.group.calcTransformMatrix()),\n      );\n    }\n    this.setRelativeXY(point, originX, originY);\n  }\n\n  /**\n   * @returns {Point} x,y position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   */\n  getRelativeXY(): Point {\n    return new Point(this.left, this.top);\n  }\n\n  /**\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\n   * @param {Point} point position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setRelativeXY(\n    point: Point,\n    originX: TOriginX = this.originX,\n    originY: TOriginY = this.originY,\n  ) {\n    this.setPositionByOrigin(point, originX, originY);\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return false;\n  }\n\n  /**\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\n   */\n  getCoords(): Point[] {\n    const { tl, tr, br, bl } =\n      this.aCoords || (this.aCoords = this.calcACoords());\n    const coords = [tl, tr, br, bl];\n    if (this.group) {\n      const t = this.group.calcTransformMatrix();\n      return coords.map((p) => transformPoint(p, t));\n    }\n    return coords;\n  }\n\n  /**\n   * Checks if object intersects with the scene rect formed by {@link tl} and {@link br}\n   */\n  intersectsWithRect(tl: Point, br: Point): boolean {\n    const intersection = Intersection.intersectPolygonRectangle(\n      this.getCoords(),\n      tl,\n      br,\n    );\n    return intersection.status === 'Intersection';\n  }\n\n  /**\n   * Checks if object intersects with another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object intersects with another object\n   */\n  intersectsWithObject(other: ObjectGeometry): boolean {\n    const intersection = Intersection.intersectPolygonPolygon(\n      this.getCoords(),\n      other.getCoords(),\n    );\n\n    return (\n      intersection.status === 'Intersection' ||\n      intersection.status === 'Coincident' ||\n      other.isContainedWithinObject(this) ||\n      this.isContainedWithinObject(other)\n    );\n  }\n\n  /**\n   * Checks if object is fully contained within area of another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object is fully contained within area of another object\n   */\n  isContainedWithinObject(other: ObjectGeometry): boolean {\n    const points = this.getCoords();\n    return points.every((point) => other.containsPoint(point));\n  }\n\n  /**\n   * Checks if object is fully contained within the scene rect formed by {@link tl} and {@link br}\n   */\n  isContainedWithinRect(tl: Point, br: Point): boolean {\n    const { left, top, width, height } = this.getBoundingRect();\n    return (\n      left >= tl.x &&\n      left + width <= br.x &&\n      top >= tl.y &&\n      top + height <= br.y\n    );\n  }\n\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\n    return (\n      this.intersectsWithObject(other) ||\n      this.isContainedWithinObject(other) ||\n      other.isContainedWithinObject(this)\n    );\n  }\n\n  /**\n   * Checks if point is inside the object\n   * @param {Point} point Point to check against\n   * @return {Boolean} true if point is inside the object\n   */\n  containsPoint(point: Point): boolean {\n    return Intersection.isPointInPolygon(point, this.getCoords());\n  }\n\n  /**\n   * Checks if object is contained within the canvas with current viewportTransform\n   * the check is done stopping at first point that appears on screen\n   * @return {Boolean} true if object is fully or partially contained within canvas\n   */\n  isOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    const points = this.getCoords();\n    // if some point is on screen, the object is on screen.\n    if (\n      points.some(\n        (point) =>\n          point.x <= br.x &&\n          point.x >= tl.x &&\n          point.y <= br.y &&\n          point.y >= tl.y,\n      )\n    ) {\n      return true;\n    }\n    // no points on screen, check intersection with absolute coordinates\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    // check if the object is so big that it contains the entire viewport\n    return this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Checks if object is partially contained within the canvas with current viewportTransform\n   * @return {Boolean} true if object is partially contained within canvas\n   */\n  isPartiallyOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    const allPointsAreOutside = this.getCoords().every(\n      (point) =>\n        (point.x >= br.x || point.x <= tl.x) &&\n        (point.y >= br.y || point.y <= tl.y),\n    );\n    // check if the object is so big that it contains the entire viewport\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\n   * the box is intended as aligned to axis of canvas.\n   * @return {Object} Object with left, top, width, height properties\n   */\n  getBoundingRect(): TBBox {\n    return makeBoundingBoxFromPoints(this.getCoords());\n  }\n\n  /**\n   * Returns width of an object's bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} width value\n   */\n  getScaledWidth(): number {\n    return this._getTransformedDimensions().x;\n  }\n\n  /**\n   * Returns height of an object bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} height value\n   */\n  getScaledHeight(): number {\n    return this._getTransformedDimensions().y;\n  }\n\n  /**\n   * Scales an object (equally by x and y)\n   * @param {Number} value Scale factor\n   * @return {void}\n   */\n  scale(value: number): void {\n    this._set(SCALE_X, value);\n    this._set(SCALE_Y, value);\n    this.setCoords();\n  }\n\n  /**\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New width value\n   * @return {void}\n   */\n  scaleToWidth(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().width / this.getScaledWidth();\n    return this.scale(value / this.width / boundingRectFactor);\n  }\n\n  /**\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New height value\n   * @return {void}\n   */\n  scaleToHeight(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().height / this.getScaledHeight();\n    return this.scale(value / this.height / boundingRectFactor);\n  }\n\n  getCanvasRetinaScaling() {\n    return this.canvas?.getRetinaScaling() || 1;\n  }\n\n  /**\n   * Returns the object angle relative to canvas counting also the group property\n   * @returns {TDegree}\n   */\n  getTotalAngle(): TDegree {\n    return this.group\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\n      : this.angle;\n  }\n\n  /**\n   * Retrieves viewportTransform from Object's canvas if available\n   * @return {TMat2D}\n   */\n  getViewportTransform(): TMat2D {\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\n  }\n\n  /**\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\n   * those never change with zoom or viewport changes.\n   * @return {TCornerPoint}\n   */\n  calcACoords(): TCornerPoint {\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\n      { x, y } = this.getRelativeCenterPoint(),\n      tMatrix = createTranslateMatrix(x, y),\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\n      dim = this._getTransformedDimensions(),\n      w = dim.x / 2,\n      h = dim.y / 2;\n    return {\n      // corners\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\n      br: transformPoint({ x: w, y: h }, finalMatrix),\n    };\n  }\n\n  /**\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n   * aCoords are used to quickly find an object on the canvas.\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   */\n  setCoords(): void {\n    this.aCoords = this.calcACoords();\n  }\n\n  transformMatrixKey(skipGroup = false): number[] {\n    let prefix: number[] = [];\n    if (!skipGroup && this.group) {\n      prefix = this.group.transformMatrixKey(skipGroup);\n    }\n    prefix.push(\n      this.top,\n      this.left,\n      this.width,\n      this.height,\n      this.scaleX,\n      this.scaleY,\n      this.angle,\n      this.strokeWidth,\n      this.skewX,\n      this.skewY,\n      +this.flipX,\n      +this.flipY,\n      resolveOrigin(this.originX),\n      resolveOrigin(this.originY),\n    );\n\n    return prefix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties.\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n   * There are some situation in which this is useful to avoid the fake rotation.\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcTransformMatrix(skipGroup = false): TMat2D {\n    let matrix = this.calcOwnMatrix();\n    if (skipGroup || !this.group) {\n      return matrix;\n    }\n    const key = this.transformMatrixKey(skipGroup),\n      cache = this.matrixCache;\n    if (cache && cache.key.every((x, i) => x === key[i])) {\n      return cache.value;\n    }\n    if (this.group) {\n      matrix = multiplyTransformMatrices(\n        this.group.calcTransformMatrix(false),\n        matrix,\n      );\n    }\n    this.matrixCache = {\n      key,\n      value: matrix,\n    };\n    return matrix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties, this matrix does not include the group transformation\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcOwnMatrix(): TMat2D {\n    const key = this.transformMatrixKey(true),\n      cache = this.ownMatrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    const center = this.getRelativeCenterPoint(),\n      options = {\n        angle: this.angle,\n        translateX: center.x,\n        translateY: center.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY,\n        flipX: this.flipX,\n        flipY: this.flipY,\n      },\n      value = composeMatrix(options);\n    this.ownMatrixCache = {\n      key,\n      value,\n    };\n    return value;\n  }\n\n  /**\n   * Calculate object dimensions from its properties\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getNonTransformedDimensions(): Point {\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\n  }\n\n  /**\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\n   * and active selection\n   * @private\n   * @param {object} [options] transform options\n   * @returns {Point} dimensions\n   */\n  _calculateCurrentDimensions(options?: any): Point {\n    return this._getTransformedDimensions(options)\n      .transform(this.getViewportTransform(), true)\n      .scalarAdd(2 * this.padding);\n  }\n\n  // #region Origin\n\n  declare top: number;\n  declare left: number;\n  declare width: number;\n  declare height: number;\n  declare flipX: boolean;\n  declare flipY: boolean;\n  declare scaleX: number;\n  declare scaleY: number;\n  declare skewX: number;\n  declare skewY: number;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originX: TOriginX;\n  /**\n   * @deprecated please use 'center' as value in new projects\n   * */\n  declare originY: TOriginY;\n  declare angle: TDegree;\n  declare strokeWidth: number;\n  declare strokeUniform: boolean;\n\n  /**\n   * Object containing this object.\n   * can influence its size and position\n   */\n  declare group?: Group;\n\n  /**\n   * Calculate object bounding box dimensions from its properties scale, skew.\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\n   * @param {Object} [options]\n   * @param {Number} [options.scaleX]\n   * @param {Number} [options.scaleY]\n   * @param {Number} [options.skewX]\n   * @param {Number} [options.skewY]\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getTransformedDimensions(options: any = {}): Point {\n    const dimOptions = {\n      // if scaleX or scaleY are negative numbers,\n      // this will return dimensions that are negative.\n      // and this will break assumptions around the codebase\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      width: this.width,\n      height: this.height,\n      strokeWidth: this.strokeWidth,\n      ...options,\n    };\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\n    const strokeWidth = dimOptions.strokeWidth;\n    let preScalingStrokeValue = strokeWidth,\n      postScalingStrokeValue = 0;\n\n    if (this.strokeUniform) {\n      preScalingStrokeValue = 0;\n      postScalingStrokeValue = strokeWidth;\n    }\n    const dimX = dimOptions.width + preScalingStrokeValue,\n      dimY = dimOptions.height + preScalingStrokeValue,\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\n    let finalDimensions;\n    if (noSkew) {\n      finalDimensions = new Point(\n        dimX * dimOptions.scaleX,\n        dimY * dimOptions.scaleY,\n      );\n    } else {\n      finalDimensions = sizeAfterTransform(\n        dimX,\n        dimY,\n        calcDimensionsMatrix(dimOptions),\n      );\n    }\n\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\n  }\n\n  /**\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToGivenOrigin(\n    point: Point,\n    fromOriginX: TOriginX,\n    fromOriginY: TOriginY,\n    toOriginX: TOriginX,\n    toOriginY: TOriginY,\n  ): Point {\n    let x = point.x,\n      y = point.y;\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\n\n    if (offsetX || offsetY) {\n      const dim = this._getTransformedDimensions();\n      x += offsetX * dim.x;\n      y += offsetY * dim.y;\n    }\n\n    return new Point(x, y);\n  }\n\n  /**\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToCenterPoint(\n    point: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    if (originX === CENTER && originY === CENTER) {\n      return point;\n    }\n    const p = this.translateToGivenOrigin(\n      point,\n      originX,\n      originY,\n      CENTER,\n      CENTER,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), point);\n    }\n    return p;\n  }\n\n  /**\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n   * @param {Point} center The point which corresponds to center of the object\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToOriginPoint(\n    center: Point,\n    originX: TOriginX,\n    originY: TOriginY,\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      center,\n      CENTER,\n      CENTER,\n      originX,\n      originY,\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), center);\n    }\n    return p;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to canvas\n   * @return {Point}\n   */\n  getCenterPoint(): Point {\n    const relCenter = this.getRelativeCenterPoint();\n    return this.group\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\n      : relCenter;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to it's parent\n   * @return {Point}\n   */\n  getRelativeCenterPoint(): Point {\n    return this.translateToCenterPoint(\n      new Point(this.left, this.top),\n      this.originX,\n      this.originY,\n    );\n  }\n\n  /**\n   * Returns the position of the object as if it has a different origin.\n   * Take an object that has left, top set to 100, 100 with origin 'left', 'top'.\n   * Return the values of left top ( wrapped in a point ) that you would need to keep\n   * the same position if origin where different.\n   * Alternatively you can use this to also find which point in the parent plane is a specific origin\n   * ( where is the bottom right corner of my object? )\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      originX,\n      originY,\n    );\n  }\n\n  /**\n   * Sets the position of the object taking into consideration the object's origin\n   * @param {Point} pos The new position of the object\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {void}\n   */\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\n    const center = this.translateToCenterPoint(pos, originX, originY),\n      position = this.translateToOriginPoint(\n        center,\n        this.originX,\n        this.originY,\n      );\n    this.set({ left: position.x, top: position.y });\n  }\n\n  /**\n   * @private\n   */\n  _getLeftTopCoords() {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      LEFT,\n      TOP,\n    );\n  }\n}\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport {\n  ALIASING_LIMIT,\n  CENTER,\n  iMatrix,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  STROKE,\n  FILL,\n  TOP,\n  VERSION,\n} from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport { Shadow } from '../../Shadow';\nimport type {\n  TDegree,\n  TFiller,\n  TSize,\n  TCacheCanvasDimensions,\n  Abortable,\n  TOptions,\n  ImageFormat,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\nimport { capValue } from '../../util/misc/capValue';\nimport {\n  createCanvasElement,\n  createCanvasElementFor,\n  toDataURL,\n} from '../../util/misc/dom';\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\nimport {\n  resetObjectTransform,\n  saveObjectTransform,\n} from '../../util/misc/objectTransforms';\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\nimport { pick, pickBy } from '../../util/misc/pick';\nimport { toFixed } from '../../util/misc/toFixed';\nimport type { Group } from '../Group';\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\nimport {\n  isFiller,\n  isSerializableFiller,\n  isTextObject,\n} from '../../util/typeAssertions';\nimport type { FabricImage } from '../Image';\nimport {\n  cacheProperties,\n  fabricObjectDefaultValues,\n  stateProperties,\n} from './defaultValues';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\nimport type { ObjectProps } from './types/ObjectProps';\nimport { getDevicePixelRatio, getEnv } from '../../env';\nimport { log } from '../../util/internals/console';\nimport type { TColorArg } from '../../color/typedefs';\nimport type { TAnimation } from '../../util/animation/animate';\nimport { animate, animateColor } from '../../util/animation/animate';\nimport type {\n  AnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n  ValueAnimationOptions,\n} from '../../util/animation/types';\nimport { ObjectGeometry } from './ObjectGeometry';\n\ntype TAncestor = FabricObject;\ntype TCollection = Group;\n\nexport type Ancestors =\n  | [FabricObject | Group]\n  | [FabricObject | Group, ...Group[]]\n  | Group[];\n\nexport type AncestryComparison = {\n  /**\n   * common ancestors of `this` and`other`(may include`this` | `other`)\n   */\n  common: Ancestors;\n  /**\n   * ancestors that are of `this` only\n   */\n  fork: Ancestors;\n  /**\n   * ancestors that are of `other` only\n   */\n  otherFork: Ancestors;\n};\n\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\n  Required<\n    Pick<\n      T,\n      | 'zoomX'\n      | 'zoomY'\n      | '_cacheCanvas'\n      | '_cacheContext'\n      | 'cacheTranslationX'\n      | 'cacheTranslationY'\n    >\n  > & {\n    _cacheContext: CanvasRenderingContext2D;\n  };\n\nexport type ObjectToCanvasElementOptions = {\n  format?: ImageFormat;\n  /** Multiplier to scale by */\n  multiplier?: number;\n  /** Cropping left offset. Introduced in v1.2.14 */\n  left?: number;\n  /** Cropping top offset. Introduced in v1.2.14 */\n  top?: number;\n  /** Cropping width. Introduced in v1.2.14 */\n  width?: number;\n  /** Cropping height. Introduced in v1.2.14 */\n  height?: number;\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\n  enableRetinaScaling?: boolean;\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\n  withoutTransform?: boolean;\n  /** Remove current object shadow. Introduced in 2.4.2 */\n  withoutShadow?: boolean;\n  /** Account for canvas viewport transform */\n  viewportTransform?: boolean;\n  /** Function to create the output canvas to export onto */\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\n};\n\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\n  quality?: number;\n};\n\nexport type DrawContext =\n  | {\n      parentClipPaths: FabricObject[];\n      width: number;\n      height: number;\n      cacheTranslationX: number;\n      cacheTranslationY: number;\n      zoomX: number;\n      zoomY: number;\n    }\n  | Record<string, never>;\n\n/**\n * Root object class from which all 2d shape classes inherit from\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n *\n * @fires added\n * @fires removed\n *\n * @fires selected\n * @fires deselected\n *\n * @fires rotating\n * @fires scaling\n * @fires moving\n * @fires skewing\n * @fires modified\n *\n * @fires mousedown\n * @fires mouseup\n * @fires mouseover\n * @fires mouseout\n * @fires mousewheel\n * @fires mousedblclick\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drop\n */\nexport class FabricObject<\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends ObjectGeometry<EventSpec>\n  implements ObjectProps\n{\n  declare minScaleLimit: number;\n\n  declare opacity: number;\n\n  declare paintFirst: 'fill' | 'stroke';\n  declare fill: string | TFiller | null;\n  declare fillRule: CanvasFillRule;\n  declare stroke: string | TFiller | null;\n  declare strokeDashArray: number[] | null;\n  declare strokeDashOffset: number;\n  declare strokeLineCap: CanvasLineCap;\n  declare strokeLineJoin: CanvasLineJoin;\n  declare strokeMiterLimit: number;\n\n  declare globalCompositeOperation: GlobalCompositeOperation;\n  declare backgroundColor: string;\n\n  declare shadow: Shadow | null;\n\n  declare visible: boolean;\n\n  declare includeDefaultValues: boolean;\n  declare excludeFromExport: boolean;\n\n  declare objectCaching: boolean;\n\n  declare clipPath?: FabricObject;\n  declare inverted: boolean;\n  declare absolutePositioned: boolean;\n  declare centeredRotation: boolean;\n  declare centeredScaling: boolean;\n\n  /**\n   * This list of properties is used to check if the state of an object is changed.\n   * This state change now is only used for children of groups to understand if a group\n   * needs its cache regenerated during a .set call\n   * @type Array\n   */\n  static stateProperties: string[] = stateProperties;\n\n  /**\n   * List of properties to consider when checking if cache needs refresh\n   * Those properties are checked by\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n   * and refreshed at the next render\n   * @type Array\n   */\n  static cacheProperties: string[] = cacheProperties;\n\n  /**\n   * When set to `true`, object's cache will be rerendered next render call.\n   * since 1.7.0\n   * @type Boolean\n   * @default true\n   */\n  declare dirty: boolean;\n\n  /**\n   * Quick access for the _cacheCanvas rendering context\n   * This is part of the objectCaching feature\n   * since 1.7.0\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  _cacheContext: CanvasRenderingContext2D | null = null;\n\n  /**\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\n   * this canvas element is resized and cleared as needed\n   * Is marked private, you can read it, don't use it since it is handled by fabric\n   * since 1.7.0\n   * @type HTMLCanvasElement\n   * @default undefined\n   * @private\n   */\n  declare _cacheCanvas?: HTMLCanvasElement;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, X axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomX?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomY?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationX?: number;\n\n  /**\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationY?: number;\n\n  /**\n   * A reference to the parent of the object, usually a Group\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare group?: Group;\n\n  /**\n   * Indicate if the object is sitting on a cache dedicated to it\n   * or is part of a larger cache for many object ( a group for example)\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare ownCaching?: boolean;\n\n  /**\n   * Private. indicates if the object inside a group is on a transformed context or not\n   * or is part of a larger cache for many object ( a group for example)\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  declare _transformDone?: boolean;\n\n  static ownDefaults = fabricObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return FabricObject.ownDefaults;\n  }\n\n  /**\n   * The class type.\n   * This is used for serialization and deserialization purposes and internally it can be used\n   * to identify classes.\n   * When we transform a class in a plain JS object we need a way to recognize which class it was,\n   * and the type is the way we do that. It has no other purposes and you should not give one.\n   * Hard to reach on instances and please do not use to drive instance's logic (this.constructor.type).\n   * To idenfity a class use instanceof class ( instanceof Rect ).\n   * We do not do that in fabricJS code because we want to try to have code splitting possible.\n   */\n  static type = 'FabricObject';\n\n  /**\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\n   * Will be removed in fabric 7 or 8.\n   * The setter exists to avoid type errors in old code and possibly current deserialization code.\n   * DO NOT build new code around this type value\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    const name = (this.constructor as typeof FabricObject).type;\n    if (name === 'FabricObject') {\n      return 'object';\n    }\n    return name.toLowerCase();\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, FabricObject.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * Create a the canvas used to keep the cached copy of the object\n   * @private\n   */\n  _createCacheCanvas() {\n    this._cacheCanvas = createCanvasElement();\n    this._cacheContext = this._cacheCanvas.getContext('2d');\n    this._updateCacheCanvas();\n    // if canvas gets created, is empty, so dirty.\n    this.dirty = true;\n  }\n\n  /**\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\n   * and each side do not cross fabric.cacheSideLimit\n   * those numbers are configurable so that you can get as much detail as you want\n   * making bargain with performances.\n   * @param {Object} dims\n   * @param {Object} dims.width width of canvas\n   * @param {Object} dims.height height of canvas\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _limitCacheSize(\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any,\n  ) {\n    const width = dims.width,\n      height = dims.height,\n      max = config.maxCacheSideLimit,\n      min = config.minCacheSideLimit;\n    if (\n      width <= max &&\n      height <= max &&\n      width * height <= config.perfLimitSizeTotal\n    ) {\n      if (width < min) {\n        dims.width = min;\n      }\n      if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    }\n    const ar = width / height,\n      [limX, limY] = cache.limitDimsByArea(ar),\n      x = capValue(min, limX, max),\n      y = capValue(min, limY, max);\n    if (width > x) {\n      dims.zoomX /= width / x;\n      dims.width = x;\n      dims.capped = true;\n    }\n    if (height > y) {\n      dims.zoomY /= height / y;\n      dims.height = y;\n      dims.capped = true;\n    }\n    return dims;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @return {Object}.x width of object to be cached\n   * @return {Object}.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const objectScale = this.getTotalObjectScaling(),\n      // calculate dimensions without skewing\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\n      neededX = (dim.x * objectScale.x) / this.scaleX,\n      neededY = (dim.y * objectScale.y) / this.scaleY;\n    return {\n      // for sure this ALIASING_LIMIT is slightly creating problem\n      // in situation in which the cache canvas gets an upper limit\n      // also objectScale contains already scaleX and scaleY\n      width: neededX + ALIASING_LIMIT,\n      height: neededY + ALIASING_LIMIT,\n      zoomX: objectScale.x,\n      zoomY: objectScale.y,\n      x: neededX,\n      y: neededY,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const canvas = this._cacheCanvas!,\n      context = this._cacheContext,\n      dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      minCacheSize = config.minCacheSideLimit,\n      width = dims.width,\n      height = dims.height,\n      zoomX = dims.zoomX,\n      zoomY = dims.zoomY,\n      dimensionsChanged = width !== canvas.width || height !== canvas.height,\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\n\n    if (!canvas || !context) {\n      return false;\n    }\n\n    let drawingWidth,\n      drawingHeight,\n      shouldRedraw = dimensionsChanged || zoomChanged,\n      additionalWidth = 0,\n      additionalHeight = 0,\n      shouldResizeCanvas = false;\n\n    if (dimensionsChanged) {\n      const canvasWidth = (this._cacheCanvas as HTMLCanvasElement).width,\n        canvasHeight = (this._cacheCanvas as HTMLCanvasElement).height,\n        sizeGrowing = width > canvasWidth || height > canvasHeight,\n        sizeShrinking =\n          (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n          canvasWidth > minCacheSize &&\n          canvasHeight > minCacheSize;\n      shouldResizeCanvas = sizeGrowing || sizeShrinking;\n      if (\n        sizeGrowing &&\n        !dims.capped &&\n        (width > minCacheSize || height > minCacheSize)\n      ) {\n        additionalWidth = width * 0.1;\n        additionalHeight = height * 0.1;\n      }\n    }\n    if (isTextObject(this) && this.path) {\n      shouldRedraw = true;\n      shouldResizeCanvas = true;\n      // IMHO in those lines we are using zoomX and zoomY not the this version.\n      additionalWidth += this.getHeightOfLine(0) * this.zoomX!;\n      additionalHeight += this.getHeightOfLine(0) * this.zoomY!;\n    }\n    if (shouldRedraw) {\n      if (shouldResizeCanvas) {\n        canvas.width = Math.ceil(width + additionalWidth);\n        canvas.height = Math.ceil(height + additionalHeight);\n      } else {\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      drawingWidth = dims.x / 2;\n      drawingHeight = dims.y / 2;\n      this.cacheTranslationX =\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n      this.cacheTranslationY =\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\n      context.scale(zoomX, zoomY);\n      this.zoomX = zoomX;\n      this.zoomY = zoomY;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sets object's properties from options, for class constructor only.\n   * Needs to be overridden for different defaults.\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected setOptions(options: Record<string, any> = {}) {\n    this._setOptions(options);\n  }\n\n  /**\n   * Transforms context when rendering an object\n   * @param {CanvasRenderingContext2D} ctx Context\n   */\n  transform(ctx: CanvasRenderingContext2D) {\n    const needFullTransform =\n      (this.group && !this.group._transformDone) ||\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\n    const m = this.calcTransformMatrix(!needFullTransform);\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling\n   * @return {Point}\n   */\n  getObjectScaling() {\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\n    // otherwise the complex method with angles will return approximations and decimals\n    // and will likely kill the cache when not needed\n    // https://github.com/fabricjs/fabric.js/issues/7157\n    if (!this.group) {\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\n    }\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n    const options = qrDecompose(this.calcTransformMatrix());\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling, zoom and retina\n   * @return {Object} object with scaleX and scaleY properties\n   */\n  getTotalObjectScaling() {\n    const scale = this.getObjectScaling();\n    if (this.canvas) {\n      const zoom = this.canvas.getZoom();\n      const retina = this.getCanvasRetinaScaling();\n      return scale.scalarMultiply(zoom * retina);\n    }\n    return scale;\n  }\n\n  /**\n   * Return the object opacity counting also the group property\n   * @return {Number}\n   */\n  getObjectOpacity() {\n    let opacity = this.opacity;\n    if (this.group) {\n      opacity *= this.group.getObjectOpacity();\n    }\n    return opacity;\n  }\n\n  /**\n   * Makes sure the scale is valid and modifies it if necessary\n   * @todo: this is a control action issue, not a geometry one\n   * @private\n   * @param {Number} value, unconstrained\n   * @return {Number} constrained value;\n   */\n  _constrainScale(value: number): number {\n    if (Math.abs(value) < this.minScaleLimit) {\n      if (value < 0) {\n        return -this.minScaleLimit;\n      } else {\n        return this.minScaleLimit;\n      }\n    } else if (value === 0) {\n      return 0.0001;\n    }\n    return value;\n  }\n\n  /**\n   * Handles setting values on the instance and handling internal side effects\n   * @protected\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (key === SCALE_X || key === SCALE_Y) {\n      value = this._constrainScale(value);\n    }\n    if (key === SCALE_X && value < 0) {\n      this.flipX = !this.flipX;\n      value *= -1;\n    } else if (key === 'scaleY' && value < 0) {\n      this.flipY = !this.flipY;\n      value *= -1;\n      // i don't like this automatic initialization here\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\n      value = new Shadow(value);\n    }\n\n    const isChanged = this[key as keyof this] !== value;\n    this[key as keyof this] = value;\n\n    // invalidate caches\n    if (\n      isChanged &&\n      (this.constructor as typeof FabricObject).cacheProperties.includes(key)\n    ) {\n      this.dirty = true;\n    }\n    // a dirty child makes the parent dirty.\n    // but a non dirty child does not make the parent not dirty.\n    // the parent could be dirty for some other reason.\n    this.parent &&\n      (this.dirty ||\n        (isChanged &&\n          (this.constructor as typeof FabricObject).stateProperties.includes(\n            key,\n          ))) &&\n      this.parent._set('dirty', true);\n\n    return this;\n  }\n\n  /*\n   * @private\n   * return if the object would be visible in rendering\n   * @memberOf FabricObject.prototype\n   * @return {Boolean}\n   */\n  isNotVisible() {\n    return (\n      this.opacity === 0 ||\n      (!this.width && !this.height && this.strokeWidth === 0) ||\n      !this.visible\n    );\n  }\n\n  /**\n   * Renders an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    // do not render if width/height are zeros or object is not visible\n    if (this.isNotVisible()) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    ctx.save();\n    this._setupCompositeOperation(ctx);\n    this.drawSelectionBackground(ctx);\n    this.transform(ctx);\n    this._setOpacity(ctx);\n    this._setShadow(ctx);\n    if (this.shouldCache()) {\n      (this as TCachedFabricObject).renderCache();\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\n    } else {\n      this._removeCacheCanvas();\n      this.drawObject(ctx, false, {});\n      this.dirty = false;\n    }\n    ctx.restore();\n  }\n\n  drawSelectionBackground(_ctx: CanvasRenderingContext2D) {\n    /* no op */\n  }\n\n  renderCache(this: TCachedFabricObject, options?: any) {\n    options = options || {};\n    if (!this._cacheCanvas || !this._cacheContext) {\n      this._createCacheCanvas();\n    }\n    if (this.isCacheDirty() && this._cacheContext) {\n      const { zoomX, zoomY, cacheTranslationX, cacheTranslationY } = this;\n      const { width, height } = this._cacheCanvas;\n      this.drawObject(this._cacheContext, options.forClipping, {\n        zoomX,\n        zoomY,\n        cacheTranslationX,\n        cacheTranslationY,\n        width,\n        height,\n        parentClipPaths: [],\n      });\n      this.dirty = false;\n    }\n  }\n\n  /**\n   * Remove cacheCanvas and its dimensions from the objects\n   */\n  _removeCacheCanvas() {\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  /**\n   * return true if the object will draw a stroke\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when stroke happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the stroke is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasStroke() {\n    return (\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\n    );\n  }\n\n  /**\n   * return true if the object will draw a fill\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when fill happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the fill is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasFill() {\n    return this.fill && this.fill !== 'transparent';\n  }\n\n  /**\n   * When set to `true`, force the object to have its own cache, even if it is inside a group\n   * it may be needed when your object behave in a particular way on the cache and always needs\n   * its own isolated canvas to render correctly.\n   * Created to be overridden\n   * since 1.7.12\n   * @returns Boolean\n   */\n  needsItsOwnCache() {\n    if (\n      this.paintFirst === STROKE &&\n      this.hasFill() &&\n      this.hasStroke() &&\n      !!this.shadow\n    ) {\n      return true;\n    }\n    if (this.clipPath) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    this.ownCaching =\n      this.needsItsOwnCache() ||\n      (this.objectCaching && (!this.parent || !this.parent.isOnACache()));\n    return this.ownCaching;\n  }\n\n  /**\n   * Check if this object will cast a shadow with an offset.\n   * used by Group.shouldCache to know if child has a shadow recursively\n   * @return {Boolean}\n   * @deprecated\n   */\n  willDrawShadow() {\n    return (\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\n    );\n  }\n\n  /**\n   * Execute the drawing operation for an object clipPath\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {FabricObject} clipPath\n   */\n  drawClipPathOnCache(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject,\n    canvasWithClipPath: HTMLCanvasElement,\n  ) {\n    ctx.save();\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4\n    if (clipPath.inverted) {\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'destination-in';\n    }\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    //ctx.scale(1 / 2, 1 / 2);\n    ctx.drawImage(canvasWithClipPath, 0, 0);\n    ctx.restore();\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {boolean} forClipping apply clipping styles\n   * @param {DrawContext} context additional context for rendering\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    const originalFill = this.fill,\n      originalStroke = this.stroke;\n    if (forClipping) {\n      this.fill = 'black';\n      this.stroke = '';\n      this._setClippingProperties(ctx);\n    } else {\n      this._renderBackground(ctx);\n    }\n    this._render(ctx);\n    this._drawClipPath(ctx, this.clipPath, context);\n    this.fill = originalFill;\n    this.stroke = originalStroke;\n  }\n\n  private createClipPathLayer(\n    this: TCachedFabricObject,\n    clipPath: FabricObject,\n    context: DrawContext,\n  ) {\n    const canvas = createCanvasElementFor(context as TSize);\n    const ctx = canvas.getContext('2d')!;\n    ctx.translate(context.cacheTranslationX, context.cacheTranslationY);\n    ctx.scale(context.zoomX, context.zoomY);\n    clipPath._cacheCanvas = canvas;\n    context.parentClipPaths.forEach((prevClipPath) => {\n      prevClipPath.transform(ctx);\n    });\n    context.parentClipPaths.push(clipPath);\n    if (clipPath.absolutePositioned) {\n      const m = invertTransform(this.calcTransformMatrix());\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    clipPath.transform(ctx);\n    clipPath.drawObject(ctx, true, context);\n    return canvas;\n  }\n\n  /**\n   * Prepare clipPath state and cache and draw it on instance's cache\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {FabricObject} clipPath\n   */\n  _drawClipPath(\n    ctx: CanvasRenderingContext2D,\n    clipPath: FabricObject | undefined,\n    context: DrawContext,\n  ) {\n    if (!clipPath) {\n      return;\n    }\n    // needed to setup _transformDone\n    // TODO find a better solution?\n    clipPath._transformDone = true;\n    const canvas = (this as TCachedFabricObject).createClipPathLayer(\n      clipPath,\n      context,\n    );\n    this.drawClipPathOnCache(ctx, clipPath, canvas);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n    ctx.drawImage(\n      this._cacheCanvas,\n      -this.cacheTranslationX,\n      -this.cacheTranslationY,\n    );\n  }\n\n  /**\n   * Check if cache is dirty\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n   * on parent canvas.\n   */\n  isCacheDirty(skipCanvas = false) {\n    if (this.isNotVisible()) {\n      return false;\n    }\n    const canvas = this._cacheCanvas;\n    const ctx = this._cacheContext;\n    if (canvas && ctx && !skipCanvas && this._updateCacheCanvas()) {\n      // in this case the context is already cleared.\n      return true;\n    } else {\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\n        if (canvas && ctx && !skipCanvas) {\n          ctx.save();\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.restore();\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Draws a background for the object big as its untransformed dimensions\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.backgroundColor) {\n      return;\n    }\n    const dim = this._getNonTransformedDimensions();\n    ctx.fillStyle = this.backgroundColor;\n\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n    // if there is background color no other shadows\n    // should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setOpacity(ctx: CanvasRenderingContext2D) {\n    if (this.group && !this.group._transformDone) {\n      ctx.globalAlpha = this.getObjectOpacity();\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n  }\n\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    decl: Pick<\n      this,\n      | 'stroke'\n      | 'strokeWidth'\n      | 'strokeLineCap'\n      | 'strokeDashOffset'\n      | 'strokeLineJoin'\n      | 'strokeMiterLimit'\n    >,\n  ) {\n    const stroke = decl.stroke;\n    if (stroke) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = decl.strokeLineCap;\n      ctx.lineDashOffset = decl.strokeDashOffset;\n      ctx.lineJoin = decl.strokeLineJoin;\n      ctx.miterLimit = decl.strokeMiterLimit;\n      if (isFiller(stroke)) {\n        if (\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\n          (stroke as Gradient<'linear'>).gradientTransform ||\n          (stroke as Pattern).patternTransform\n        ) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          this._applyPatternForTransformedGradient(ctx, stroke);\n        } else {\n          // is a simple gradient or pattern\n          ctx.strokeStyle = stroke.toLive(ctx)!;\n          this._applyPatternGradientTransform(ctx, stroke);\n        }\n      } else {\n        // is a color\n        ctx.strokeStyle = decl.stroke as string;\n      }\n    }\n  }\n\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    if (fill) {\n      if (isFiller(fill)) {\n        ctx.fillStyle = fill.toLive(ctx)!;\n        this._applyPatternGradientTransform(ctx, fill);\n      } else {\n        ctx.fillStyle = fill;\n      }\n    }\n  }\n\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = '#000000';\n  }\n\n  /**\n   * @private\n   * Sets line dash\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n   * @param {Array} dashArray array representing dashes\n   */\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\n    if (!dashArray || dashArray.length === 0) {\n      return;\n    }\n    // Spec requires the concatenation of two copies of the dash array when the number of elements is odd\n    if (1 & dashArray.length) {\n      dashArray.push(...dashArray);\n    }\n    ctx.setLineDash(dashArray);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    const shadow = this.shadow,\n      canvas = this.canvas,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\n      multX = sx * retinaScaling,\n      multY = sy * retinaScaling,\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur =\n      (shadow.blur *\n        config.browserShadowBlurConstant *\n        (multX + multY) *\n        (scaling.x + scaling.y)) /\n      4;\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _removeShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\n   */\n  _applyPatternGradientTransform(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    if (!isFiller(filler)) {\n      return { offsetX: 0, offsetY: 0 };\n    }\n    const t =\n      (filler as Gradient<'linear'>).gradientTransform ||\n      (filler as Pattern).patternTransform;\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\n      offsetY = -this.height / 2 + filler.offsetY || 0;\n\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n    } else {\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n    }\n    if (t) {\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n    }\n    return { offsetX: offsetX, offsetY: offsetY };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderStroke(ctx);\n      this._renderFill(ctx);\n    } else {\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * function that actually render something on the context.\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\n   * not related to rendering\n   * @param {CanvasRenderingContext2D} _ctx Context to render on\n   */\n  _render(_ctx: CanvasRenderingContext2D) {\n    // placeholder to be overridden\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill) {\n      return;\n    }\n\n    ctx.save();\n    this._setFillStyles(ctx, this);\n    if (this.fillRule === 'evenodd') {\n      ctx.fill('evenodd');\n    } else {\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderStroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    if (this.strokeUniform) {\n      const scaling = this.getObjectScaling();\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\n    }\n    this._setLineDash(ctx, this.strokeDashArray);\n    this._setStrokeStyles(ctx, this);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Gradient} filler\n   */\n  _applyPatternForTransformedGradient(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller,\n  ) {\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      retinaScaling = this.getCanvasRetinaScaling(),\n      width = dims.x / this.scaleX / retinaScaling,\n      height = dims.y / this.scaleY / retinaScaling,\n      pCanvas = createCanvasElementFor({\n        // in case width and height are less than 1px, we have to round up.\n        // since the pattern is no-repeat, this is fine\n        width: Math.ceil(width),\n        height: Math.ceil(height),\n      });\n\n    const pCtx = pCanvas.getContext('2d');\n    if (!pCtx) {\n      return;\n    }\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.scale(\n      dims.zoomX / this.scaleX / retinaScaling,\n      dims.zoomY / this.scaleY / retinaScaling,\n    );\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fillStyle = filler.toLive(ctx)!;\n    pCtx.fill();\n    ctx.translate(\n      -this.width / 2 - this.strokeWidth / 2,\n      -this.height / 2 - this.strokeWidth / 2,\n    );\n    ctx.scale(\n      (retinaScaling * this.scaleX) / dims.zoomX,\n      (retinaScaling * this.scaleY) / dims.zoomY,\n    );\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement() {\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\n  }\n\n  /**\n   * Clones an instance.\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {Promise<FabricObject>}\n   */\n  clone(propertiesToInclude?: string[]): Promise<this> {\n    const objectForm = this.toObject(propertiesToInclude);\n    return (this.constructor as typeof FabricObject).fromObject(\n      objectForm,\n    ) as unknown as Promise<this>;\n  }\n\n  /**\n   * Creates an instance of Image out of an object\n   * makes use of toCanvasElement.\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\n   * and format option. toCanvasElement is faster and produce no loss of quality.\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {FabricImage} Object cloned as image.\n   */\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\n    const canvasEl = this.toCanvasElement(options);\n    // TODO: how to import Image w/o an import cycle?\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\n    return new ImageClass(canvasEl);\n  }\n\n  /**\n   * Converts an object into a HTMLCanvas element\n   * @param {ObjectToCanvasElementOptions} options Options object\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\n   */\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\n    const origParams = saveObjectTransform(this),\n      originalGroup = this.group,\n      originalShadow = this.shadow,\n      abs = Math.abs,\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\n      multiplier = (options.multiplier || 1) * retinaScaling,\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\n        options.canvasProvider ||\n        ((el: HTMLCanvasElement) =>\n          new StaticCanvas(el, {\n            enableRetinaScaling: false,\n            renderOnAddRemove: false,\n            skipOffscreen: false,\n          }));\n    delete this.group;\n    if (options.withoutTransform) {\n      resetObjectTransform(this);\n    }\n    if (options.withoutShadow) {\n      this.shadow = null;\n    }\n    if (options.viewportTransform) {\n      sendObjectToPlane(this, this.getViewportTransform());\n    }\n\n    this.setCoords();\n    const el = createCanvasElement(),\n      boundingRect = this.getBoundingRect(),\n      shadow = this.shadow,\n      shadowOffset = new Point();\n\n    if (shadow) {\n      const shadowBlur = shadow.blur;\n      const scaling = shadow.nonScaling\n        ? new Point(1, 1)\n        : this.getObjectScaling();\n      // consider non scaling shadow.\n      shadowOffset.x =\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\n      shadowOffset.y =\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\n    }\n    const width = boundingRect.width + shadowOffset.x,\n      height = boundingRect.height + shadowOffset.y;\n    // if the current width/height is not an integer\n    // we need to make it so.\n    el.width = Math.ceil(width);\n    el.height = Math.ceil(height);\n    const canvas = canvasProvider(el);\n    if (options.format === 'jpeg') {\n      canvas.backgroundColor = '#fff';\n    }\n    this.setPositionByOrigin(\n      new Point(canvas.width / 2, canvas.height / 2),\n      CENTER,\n      CENTER,\n    );\n    const originalCanvas = this.canvas;\n    // static canvas and canvas have both an array of InteractiveObjects\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\n    canvas._objects = [this];\n    this.set('canvas', canvas);\n    this.setCoords();\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n    this.set('canvas', originalCanvas);\n    this.shadow = originalShadow;\n    if (originalGroup) {\n      this.group = originalGroup;\n    }\n    this.set(origParams);\n    this.setCoords();\n    // canvas.dispose will call image.dispose that will nullify the elements\n    // since this canvas is a simple element for the process, we remove references\n    // to objects in this way in order to avoid object trashing.\n    canvas._objects = [];\n    // since render has settled it is safe to destroy canvas\n    canvas.destroy();\n    return canvasEl;\n  }\n\n  /**\n   * Converts an object into a data-url-like string\n   * @param {Object} options Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL(options: toDataURLOptions = {}) {\n    return toDataURL(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1,\n    );\n  }\n\n  /**\n   * Returns true if any of the specified types is identical to the type of an instance\n   * @param {String} type Type to check against\n   * @return {Boolean}\n   */\n  isType(...types: string[]) {\n    return (\n      types.includes((this.constructor as typeof FabricObject).type) ||\n      types.includes(this.type)\n    );\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\n   */\n  complexity() {\n    return 1;\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  /**\n   * Sets \"angle\" of an instance with centered rotation\n   * @param {TDegree} angle Angle value (in degrees)\n   */\n  rotate(angle: TDegree) {\n    const { centeredRotation, originX, originY } = this;\n\n    if (centeredRotation) {\n      const { x, y } = this.getRelativeCenterPoint();\n      this.originX = CENTER;\n      this.originY = CENTER;\n      this.left = x;\n      this.top = y;\n    }\n\n    this.set('angle', angle);\n\n    if (centeredRotation) {\n      const { x, y } = this.translateToOriginPoint(\n        this.getRelativeCenterPoint(),\n        originX,\n        originY,\n      );\n      this.left = x;\n      this.top = y;\n      this.originX = originX;\n      this.originY = originY;\n    }\n  }\n\n  /**\n   * This callback function is called by the parent group of an object every\n   * time a non-delegated property changes on the group. It is passed the key\n   * and value as parameters. Not adding in this function's signature to avoid\n   * Travis build error about unused variables.\n   */\n  setOnGroup() {\n    // implemented by sub-classes, as needed.\n  }\n\n  /**\n   * Sets canvas globalCompositeOperation for specific object\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n   */\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\n    if (this.globalCompositeOperation) {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n  }\n\n  /**\n   * cancel instance's running animations\n   * override if necessary to dispose artifacts such as `clipPath`\n   */\n  dispose() {\n    runningAnimations.cancelByTarget(this);\n    this.off();\n    this._set('canvas', undefined);\n    // clear caches\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  // #region Animation methods\n  /**\n   * List of properties to consider for animating colors.\n   * @type String[]\n   */\n  static colorProperties: string[] = [FILL, STROKE, 'backgroundColor'];\n\n  /**\n   * Animates object's properties\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\n   * @param {Partial<AnimationOptions<T>>} options\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   */\n  animate<T extends number | number[] | TColorArg>(\n    animatable: Record<string, T>,\n    options?: Partial<AnimationOptions<T>>,\n  ): Record<string, TAnimation<T>> {\n    return Object.entries(animatable).reduce(\n      (acc, [key, endValue]) => {\n        acc[key] = this._animate(key, endValue, options);\n        return acc;\n      },\n      {} as Record<string, TAnimation<T>>,\n    );\n  }\n\n  /**\n   * @private\n   * @param {String} key Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   */\n  _animate<T extends number | number[] | TColorArg>(\n    key: string,\n    endValue: T,\n    options: Partial<AnimationOptions<T>> = {},\n  ): TAnimation<T> {\n    const path = key.split('.');\n    const propIsColor = (\n      this.constructor as typeof FabricObject\n    ).colorProperties.includes(path[path.length - 1]);\n    const { abort, startValue, onChange, onComplete } = options;\n    const animationOptions = {\n      ...options,\n      target: this,\n      // path.reduce... is the current value in case start value isn't provided\n      startValue:\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\n      endValue,\n      abort: abort?.bind(this),\n      onChange: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        path.reduce((deep: Record<string, any>, key, index) => {\n          if (index === path.length - 1) {\n            deep[key] = value;\n          }\n          return deep[key];\n        }, this);\n        onChange &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onChange(value, valueProgress, durationProgress);\n      },\n      onComplete: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number,\n      ) => {\n        this.setCoords();\n        onComplete &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onComplete(value, valueProgress, durationProgress);\n      },\n    } as AnimationOptions<T>;\n\n    return (\n      propIsColor\n        ? animateColor(animationOptions as ColorAnimationOptions)\n        : animate(\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions,\n          )\n    ) as TAnimation<T>;\n  }\n\n  // #region Object stacking methods\n\n  /**\n   * A reference to the parent of the object\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\n   */\n  declare parent?: Group;\n\n  /**\n   * Checks if object is descendant of target\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\n   * @param {TAncestor} target\n   * @returns {boolean}\n   */\n  isDescendantOf(target: TAncestor): boolean {\n    const { parent, group } = this;\n    return (\n      parent === target ||\n      group === target ||\n      // walk up\n      (!!parent && parent.isDescendantOf(target)) ||\n      (!!group && group !== parent && group.isDescendantOf(target))\n    );\n  }\n\n  /**\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\n   */\n  getAncestors(): Ancestors {\n    const ancestors: TAncestor[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: TAncestor | undefined = this;\n    do {\n      parent = parent.parent;\n      parent && ancestors.push(parent);\n    } while (parent);\n    return ancestors as Ancestors;\n  }\n\n  /**\n   * Compare ancestors\n   *\n   * @param {StackedObject} other\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\n   */\n  findCommonAncestors<T extends this>(other: T): AncestryComparison {\n    if (this === other) {\n      return {\n        fork: [],\n        otherFork: [],\n        common: [this, ...this.getAncestors()],\n      } as AncestryComparison;\n    }\n    const ancestors = this.getAncestors();\n    const otherAncestors = other.getAncestors();\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\n    if (\n      ancestors.length === 0 &&\n      otherAncestors.length > 0 &&\n      this === otherAncestors[otherAncestors.length - 1]\n    ) {\n      return {\n        fork: [],\n        otherFork: [\n          other,\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\n        ],\n        common: [this],\n      } as AncestryComparison;\n    }\n    //  compare ancestors\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\n      ancestor = ancestors[i];\n      if (ancestor === other) {\n        return {\n          fork: [this, ...ancestors.slice(0, i)],\n          otherFork: [],\n          common: ancestors.slice(i),\n        } as AncestryComparison;\n      }\n      for (let j = 0; j < otherAncestors.length; j++) {\n        if (this === otherAncestors[j]) {\n          return {\n            fork: [],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: [this, ...ancestors],\n          } as AncestryComparison;\n        }\n        if (ancestor === otherAncestors[j]) {\n          return {\n            fork: [this, ...ancestors.slice(0, i)],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: ancestors.slice(i),\n          } as AncestryComparison;\n        }\n      }\n    }\n    // nothing shared\n    return {\n      fork: [this, ...ancestors],\n      otherFork: [other, ...otherAncestors],\n      common: [],\n    } as AncestryComparison;\n  }\n\n  /**\n   *\n   * @param {StackedObject} other\n   * @returns {boolean}\n   */\n  hasCommonAncestors<T extends this>(other: T): boolean {\n    const commonAncestors = this.findCommonAncestors(other);\n    return commonAncestors && !!commonAncestors.common.length;\n  }\n\n  /**\n   *\n   * @param {FabricObject} other object to compare against\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\n   */\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\n    if (this === other) {\n      return undefined;\n    }\n    const ancestorData = this.findCommonAncestors(other);\n\n    if (ancestorData.fork.includes(other as any)) {\n      return true;\n    }\n    if (ancestorData.otherFork.includes(this as any)) {\n      return false;\n    }\n    // if there isn't a common ancestor, we take the canvas.\n    // if there is no canvas, there is nothing to compare\n    const firstCommonAncestor = ancestorData.common[0] || this.canvas;\n    if (!firstCommonAncestor) {\n      return undefined;\n    }\n    const headOfFork = ancestorData.fork.pop(),\n      headOfOtherFork = ancestorData.otherFork.pop(),\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfFork as any,\n      ),\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfOtherFork as any,\n      );\n    return thisIndex > -1 && thisIndex > otherIndex;\n  }\n\n  // #region Serialization\n  /**\n   * Define a list of custom properties that will be serialized when\n   * instance.toObject() gets called\n   */\n  static customProperties: string[] = [];\n\n  /**\n   * Returns an object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject(propertiesToInclude: any[] = []): any {\n    const propertiesToSerialize = propertiesToInclude.concat(\n      FabricObject.customProperties,\n      (this.constructor as typeof FabricObject).customProperties || [],\n    );\n    let clipPathData: Partial<SerializedObjectProps> | undefined;\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n    const {\n      clipPath,\n      fill,\n      stroke,\n      shadow,\n      strokeDashArray,\n      left,\n      top,\n      originX,\n      originY,\n      width,\n      height,\n      strokeWidth,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit,\n      scaleX,\n      scaleY,\n      angle,\n      flipX,\n      flipY,\n      opacity,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX,\n      skewY,\n    } = this;\n    if (clipPath && !clipPath.excludeFromExport) {\n      clipPathData = clipPath.toObject(\n        propertiesToSerialize.concat('inverted', 'absolutePositioned'),\n      );\n    }\n    const toFixedBound = (val: number) => toFixed(val, NUM_FRACTION_DIGITS);\n    const object = {\n      ...pick(this, propertiesToSerialize as (keyof this)[]),\n      type: (this.constructor as typeof FabricObject).type,\n      version: VERSION,\n      originX,\n      originY,\n      left: toFixedBound(left),\n      top: toFixedBound(top),\n      width: toFixedBound(width),\n      height: toFixedBound(height),\n      fill: isSerializableFiller(fill) ? fill.toObject() : fill,\n      stroke: isSerializableFiller(stroke) ? stroke.toObject() : stroke,\n      strokeWidth: toFixedBound(strokeWidth),\n      strokeDashArray: strokeDashArray\n        ? strokeDashArray.concat()\n        : strokeDashArray,\n      strokeLineCap,\n      strokeDashOffset,\n      strokeLineJoin,\n      strokeUniform,\n      strokeMiterLimit: toFixedBound(strokeMiterLimit),\n      scaleX: toFixedBound(scaleX),\n      scaleY: toFixedBound(scaleY),\n      angle: toFixedBound(angle),\n      flipX,\n      flipY,\n      opacity: toFixedBound(opacity),\n      shadow: shadow ? shadow.toObject() : shadow,\n      visible,\n      backgroundColor,\n      fillRule,\n      paintFirst,\n      globalCompositeOperation,\n      skewX: toFixedBound(skewX),\n      skewY: toFixedBound(skewY),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n\n    return !this.includeDefaultValues\n      ? this._removeDefaultValues(object)\n      : object;\n  }\n\n  /**\n   * Returns (dataless) object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: any[]): any {\n    // will be overwritten by subclasses\n    return this.toObject(propertiesToInclude);\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\n    const baseValues = hasStaticDefaultValues\n      ? defaults\n      : Object.getPrototypeOf(this);\n\n    return pickBy(object, (value, key) => {\n      if (key === LEFT || key === TOP || key === 'type') {\n        return true;\n      }\n      const baseValue = baseValues[key];\n      return (\n        value !== baseValue &&\n        // basically a check for [] === []\n        !(\n          Array.isArray(value) &&\n          Array.isArray(baseValue) &&\n          value.length === 0 &&\n          baseValue.length === 0\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String}\n   */\n  toString() {\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\n  }\n\n  /**\n   *\n   * @param {Function} klass\n   * @param {object} object\n   * @param {object} [options]\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static _fromObject<S extends FabricObject>(\n    { type, ...serializedObjectOptions }: Record<string, unknown>,\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {},\n  ): Promise<S> {\n    return enlivenObjectEnlivables<any>(serializedObjectOptions, options).then(\n      (enlivedObjectOptions) => {\n        // from the resulting enlived options, extract options.extraParam to arg0\n        // to avoid accidental overrides later\n        if (extraParam) {\n          delete enlivedObjectOptions[extraParam];\n          return new this(\n            serializedObjectOptions[extraParam],\n            // @ts-expect-error different signature\n            enlivedObjectOptions,\n          );\n        } else {\n          return new this(enlivedObjectOptions);\n        }\n      },\n    ) as Promise<S>;\n  }\n\n  /**\n   *\n   * @param {object} object\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\n    object: T,\n    options?: Abortable,\n  ) {\n    return this._fromObject(object, options);\n  }\n}\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n","import type {\n  TModificationEvents,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\n/**\n * Wrap an action handler with firing an event if the action is performed\n * @param {TModificationEvents} eventName the event we want to fire\n * @param {TransformActionHandler<T>} actionHandler the function to wrap\n * @param {object} extraEventInfo extra information to pas to the event handler\n * @return {TransformActionHandler<T>} a function with an action handler signature\n */\nexport const wrapWithFireEvent = <\n  T extends Transform,\n  P extends object = Record<string, never>,\n>(\n  eventName: TModificationEvents,\n  actionHandler: TransformActionHandler<T>,\n  extraEventInfo?: P,\n) => {\n  return ((eventData, transform, x, y) => {\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    if (actionPerformed) {\n      fireEvent(eventName, {\n        ...commonEventInfo(eventData, transform, x, y),\n        ...extraEventInfo,\n      });\n    }\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n};\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>,\n) {\n  return ((eventData, transform, x, y) => {\n    const { target, originX, originY } = transform,\n      centerPoint = target.getRelativeCenterPoint(),\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\n      actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY,\n    );\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { CENTER, LEFT, RESIZING, RIGHT } from '../constants';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { getLocalPoint, isTransformCentered } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Action handler to change object's width\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const changeObjectWidth: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  const localPoint = getLocalPoint(\n    transform,\n    transform.originX,\n    transform.originY,\n    x,\n    y,\n  );\n  //  make sure the control changes width ONLY from it's side of target\n  if (\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(RIGHT) &&\n      localPoint.x < 0) ||\n    (resolveOrigin(transform.originX) === resolveOrigin(LEFT) &&\n      localPoint.x > 0)\n  ) {\n    const { target } = transform,\n      strokePadding =\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      multiplier = isTransformCentered(transform) ? 2 : 1,\n      oldWidth = target.width,\n      newWidth =\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding;\n    target.set('width', Math.max(newWidth, 1));\n    //  check against actual target width in case `newWidth` was rejected\n    return oldWidth !== target.width;\n  }\n  return false;\n};\n\nexport const changeWidth = wrapWithFireEvent(\n  RESIZING,\n  wrapWithFixedAnchor(changeObjectWidth),\n);\n","import { FILL, STROKE, twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners'\n  >\n>;\n\nexport type ControlRenderer<\n  O extends InteractiveFabricObject = InteractiveFabricObject,\n> = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: O,\n) => void;\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject,\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? STROKE : FILL,\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type {\n  ControlActionHandler,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { Intersection } from '../Intersection';\nimport { Point } from '../Point';\nimport { SCALE } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { renderCircleControl, renderSquareControl } from './controlRendering';\n\nexport class Control {\n  /**\n   * keep track of control visibility.\n   * mainly for backward compatibility.\n   * if you do not want to see a control, you can remove it\n   * from the control set.\n   * @type {Boolean}\n   * @default true\n   */\n  visible = true;\n\n  /**\n   * Name of the action that the control will likely execute.\n   * This is optional. FabricJS uses to identify what the user is doing for some\n   * extra optimizations. If you are writing a custom control and you want to know\n   * somewhere else in the code what is going on, you can use this string here.\n   * you can also provide a custom getActionName if your control run multiple actions\n   * depending on some external state.\n   * default to scale since is the most common, used on 4 corners by default\n   * @type {String}\n   * @default 'scale'\n   */\n  actionName = SCALE;\n\n  /**\n   * Drawing angle of the control.\n   * NOT used for now, but name marked as needed for internal logic\n   * example: to reuse the same drawing function for different rotated controls\n   * @type {Number}\n   * @default 0\n   */\n  angle = 0;\n\n  /**\n   * Relative position of the control. X\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  x = 0;\n\n  /**\n   * Relative position of the control. Y\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  y = 0;\n\n  /**\n   * Horizontal offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the right, negative to the left.\n   * It used when you want to have position of control that does not scale with\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\n   * stay 30 pixels no matter how the object is big. Another example is having 2\n   * controls in the corner, that stay in the same position when the object scale.\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  offsetX = 0;\n\n  /**\n   * Vertical offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the bottom, negative to the top.\n   * @type {Number}\n   * @default 0\n   */\n  offsetY = 0;\n\n  /**\n   * Sets the length of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeX = 0;\n\n  /**\n   * Sets the height of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeY = 0;\n\n  /**\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeX = 0;\n\n  /**\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeY = 0;\n\n  /**\n   * Css cursor style to display when the control is hovered.\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\n   * @type {String}\n   * @default 'crosshair'\n   */\n  cursorStyle = 'crosshair';\n\n  /**\n   * If controls has an offsetY or offsetX, draw a line that connects\n   * the control to the bounding box\n   * @type {Boolean}\n   * @default false\n   */\n  withConnection = false;\n\n  constructor(options?: Partial<Control>) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * The control actionHandler, provide one to handle action ( control being moved )\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare actionHandler: TransformActionHandler;\n\n  /**\n   * The control handler for mouse down, provide one to handle mouse down on control\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseDownHandler?: ControlActionHandler;\n\n  /**\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseUpHandler?: ControlActionHandler;\n\n  shouldActivate(\n    controlKey: string,\n    fabricObject: InteractiveFabricObject,\n    pointer: Point,\n    { tl, tr, br, bl }: TCornerPoint,\n  ) {\n    // TODO: locking logic can be handled here instead of in the control handler logic\n    return (\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\n      fabricObject.isControlVisible(controlKey) &&\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\n    );\n  }\n\n  /**\n   * Returns control actionHandler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getActionHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): TransformActionHandler | undefined {\n    return this.actionHandler;\n  }\n\n  /**\n   * Returns control mouseDown handler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseDownHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseDownHandler;\n  }\n\n  /**\n   * Returns control mouseUp handler.\n   * During actions the fabricObject or the control can be of different obj\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseUpHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control,\n  ): ControlActionHandler | undefined {\n    return this.mouseUpHandler;\n  }\n\n  /**\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n   * function you can pass one in the constructor\n   * the cursorStyle property\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  cursorStyleHandler(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.cursorStyle;\n  }\n\n  /**\n   * Returns the action name. The basic implementation just return the actionName property.\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  getActionName(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    return control.actionName;\n  }\n\n  /**\n   * Returns controls visibility\n   * @param {FabricObject} object on which the control is displayed\n   * @param {String} controlKey key where the control is memorized on the\n   * @return {Boolean}\n   */\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\n  }\n\n  /**\n   * Sets controls visibility\n   * @param {Boolean} visibility for the object\n   * @return {Void}\n   */\n  setVisibility(\n    visibility: boolean,\n    name: string,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    this.visible = visibility;\n  }\n\n  positionHandler(\n    dim: Point,\n    finalMatrix: TMat2D,\n    fabricObject: InteractiveFabricObject,\n    currentControl: Control,\n  ) {\n    return new Point(\n      this.x * dim.x + this.offsetX,\n      this.y * dim.y + this.offsetY,\n    ).transform(finalMatrix);\n  }\n\n  /**\n   * Returns the coords for this control based on object values.\n   * @param {Number} objectAngle angle from the fabric object holding the control\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n   *   isTouch is true)\n   * @param {Number} centerX x coordinate where the control center should be\n   * @param {Number} centerY y coordinate where the control center should be\n   * @param {boolean} isTouch true if touch corner, false if normal corner\n   */\n  calcCornerCoords(\n    angle: TDegree,\n    objectCornerSize: number,\n    centerX: number,\n    centerY: number,\n    isTouch: boolean,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    const t = multiplyTransformMatrixArray([\n      createTranslateMatrix(centerX, centerY),\n      createRotateMatrix({ angle }),\n      createScaleMatrix(\n        (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\n        (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize,\n      ),\n    ]);\n    return {\n      tl: new Point(-0.5, -0.5).transform(t),\n      tr: new Point(0.5, -0.5).transform(t),\n      br: new Point(0.5, 0.5).transform(t),\n      bl: new Point(-0.5, 0.5).transform(t),\n    };\n  }\n\n  /**\n   * Render function for the control.\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\n   * all the functions will have to translate to the point left,top before starting Drawing\n   * if they want to draw a control where the position is detected.\n   * left and top are the result of the positionHandler function\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\n   * @param {Number} left position of the canvas where we are about to render the control.\n   * @param {Number} top position of the canvas where we are about to render the control.\n   * @param {Object} styleOverride\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\n   */\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: InteractiveFabricObject,\n  ) {\n    styleOverride = styleOverride || {};\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n      case 'circle':\n        renderCircleControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n        break;\n      default:\n        renderSquareControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject,\n        );\n    }\n  }\n}\n","import type {\n  ControlCursorCallback,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { ROTATING } from '../constants';\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Find the correct style for the control that is used for rotation.\n * this function is very simple and it just take care of not-allowed or standard cursor\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const rotationStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (fabricObject.lockRotation) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  return control.cursorStyle;\n};\n\n/**\n * Action handler for rotation and snapping, without anchor point.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n * @private\n */\nconst rotateObjectWithSnapping: TransformActionHandler = (\n  eventData,\n  { target, ex, ey, theta, originX, originY },\n  x,\n  y,\n) => {\n  const pivotPoint = target.translateToOriginPoint(\n    target.getRelativeCenterPoint(),\n    originX,\n    originY,\n  );\n\n  if (isLocked(target, 'lockRotation')) {\n    return false;\n  }\n\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x);\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\n\n  if (target.snapAngle && target.snapAngle > 0) {\n    const snapAngle = target.snapAngle,\n      snapThreshold = target.snapThreshold || snapAngle,\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n      angle = leftAngleLocked;\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n      angle = rightAngleLocked;\n    }\n  }\n\n  // normalize angle to positive value\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n  angle %= 360;\n\n  const hasRotated = target.angle !== angle;\n  // TODO: why aren't we using set?\n  target.angle = angle;\n  return hasRotated;\n};\n\nexport const rotationWithSnapping = wrapWithFireEvent(\n  ROTATING,\n  wrapWithFixedAnchor(rotateObjectWithSnapping),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxis } from '../typedefs';\nimport type { Canvas } from '../canvas/Canvas';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  invertOrigin,\n  isLocked,\n  isTransformCentered,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport { SCALE_X, SCALE_Y, SCALING } from '../constants';\n\ntype ScaleTransform = Transform & {\n  gestureScale?: number;\n  signX?: number;\n  signY?: number;\n};\n\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\n\n/**\n * Inspect event and fabricObject properties to understand if the scaling action\n * @param {Event} eventData from the user action\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @return {Boolean} true if scale is proportional\n */\nexport function scaleIsProportional(\n  eventData: TPointerEvent,\n  fabricObject: FabricObject,\n): boolean {\n  const canvas = fabricObject.canvas as Canvas,\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\n  return (\n    (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled)\n  );\n}\n\n/**\n * Inspect fabricObject to understand if the current scaling action is allowed\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @param {String} by 'x' or 'y' or ''\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n * @return {Boolean} true if scaling is not allowed at current conditions\n */\nexport function scalingIsForbidden(\n  fabricObject: FabricObject,\n  by: ScaleBy,\n  scaleProportionally: boolean,\n) {\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\n    lockY = isLocked(fabricObject, 'lockScalingY');\n  if (lockX && lockY) {\n    return true;\n  }\n  if (!by && (lockX || lockY) && scaleProportionally) {\n    return true;\n  }\n  if (lockX && by === 'x') {\n    return true;\n  }\n  if (lockY && by === 'y') {\n    return true;\n  }\n  // code crashes because of a division by 0 if a 0 sized object is scaled\n  // forbid to prevent scaling to happen. ISSUE-9475\n  const { width, height, strokeWidth } = fabricObject;\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\n    return true;\n  }\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\n    return true;\n  }\n  return false;\n}\n\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n\n/**\n * return the correct cursor style for the scale action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\n    by =\n      control.x !== 0 && control.y === 0\n        ? 'x'\n        : control.x === 0 && control.y !== 0\n          ? 'y'\n          : '';\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control);\n  return `${scaleMap[n]}-resize`;\n};\n\n/**\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @param {Object} options additional information for scaling\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n * @return {Boolean} true if some change happened\n * @private\n */\nfunction scaleObject(\n  eventData: TPointerEvent,\n  transform: ScaleTransform,\n  x: number,\n  y: number,\n  options: { by?: ScaleBy } = {},\n) {\n  const target = transform.target,\n    by = options.by,\n    scaleProportionally = scaleIsProportional(eventData, target),\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\n  let newPoint, scaleX, scaleY, dim, signX, signY;\n\n  if (forbidScaling) {\n    return false;\n  }\n  if (transform.gestureScale) {\n    scaleX = transform.scaleX * transform.gestureScale;\n    scaleY = transform.scaleY * transform.gestureScale;\n  } else {\n    newPoint = getLocalPoint(\n      transform,\n      transform.originX,\n      transform.originY,\n      x,\n      y,\n    );\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\n    if (!transform.signX) {\n      transform.signX = signX;\n    }\n    if (!transform.signY) {\n      transform.signY = signY;\n    }\n\n    if (\n      isLocked(target, 'lockScalingFlip') &&\n      (transform.signX !== signX || transform.signY !== signY)\n    ) {\n      return false;\n    }\n\n    dim = target._getTransformedDimensions();\n    // missing detection of flip and logic to switch the origin\n    if (scaleProportionally && !by) {\n      // uniform scaling\n      const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n        { original } = transform,\n        originalDistance =\n          Math.abs((dim.x * original.scaleX) / target.scaleX) +\n          Math.abs((dim.y * original.scaleY) / target.scaleY),\n        scale = distance / originalDistance;\n      scaleX = original.scaleX * scale;\n      scaleY = original.scaleY * scale;\n    } else {\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\n    }\n    // if we are scaling by center, we need to double the scale\n    if (isTransformCentered(transform)) {\n      scaleX *= 2;\n      scaleY *= 2;\n    }\n    if (transform.signX !== signX && by !== 'y') {\n      transform.originX = invertOrigin(transform.originX);\n      scaleX *= -1;\n      transform.signX = signX;\n    }\n    if (transform.signY !== signY && by !== 'x') {\n      transform.originY = invertOrigin(transform.originY);\n      scaleY *= -1;\n      transform.signY = signY;\n    }\n  }\n  // minScale is taken care of in the setter.\n  const oldScaleX = target.scaleX,\n    oldScaleY = target.scaleY;\n  if (!by) {\n    !isLocked(target, 'lockScalingX') && target.set(SCALE_X, scaleX);\n    !isLocked(target, 'lockScalingY') && target.set(SCALE_Y, scaleY);\n  } else {\n    // forbidden cases already handled on top here.\n    by === 'x' && target.set(SCALE_X, scaleX);\n    by === 'y' && target.set(SCALE_Y, scaleY);\n  }\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n}\n\n/**\n * Generic scaling logic, to scale from corners either equally or freely.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y);\n};\n\n/**\n * Scaling logic for the X axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\n};\n\n/**\n * Scaling logic for the Y axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\n};\n\nexport const scalingEqually = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectFromCorner),\n);\n\nexport const scalingX = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectX),\n);\n\nexport const scalingY = wrapWithFireEvent(\n  SCALING,\n  wrapWithFixedAnchor(scaleObjectY),\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { TAxis, TAxisKey } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  isLocked,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport {\n  CENTER,\n  SCALE_X,\n  SCALE_Y,\n  SKEWING,\n  SKEW_X,\n  SKEW_Y,\n} from '../constants';\n\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\n\nconst AXIS_KEYS: Record<\n  TAxis,\n  {\n    counterAxis: TAxis;\n    scale: TAxisKey<'scale'>;\n    skew: TAxisKey<'skew'>;\n    lockSkewing: TAxisKey<'lockSkewing'>;\n    origin: TAxisKey<'origin'>;\n    flip: TAxisKey<'flip'>;\n  }\n> = {\n  x: {\n    counterAxis: 'y',\n    scale: SCALE_X,\n    skew: SKEW_X,\n    lockSkewing: 'lockSkewingX',\n    origin: 'originX',\n    flip: 'flipX',\n  },\n  y: {\n    counterAxis: 'x',\n    scale: SCALE_Y,\n    skew: SKEW_Y,\n    lockSkewing: 'lockSkewingY',\n    origin: 'originY',\n    flip: 'flipY',\n  },\n};\n\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\n\n/**\n * return the correct cursor style for the skew action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const skewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control) % 4;\n  return `${skewMap[n]}-resize`;\n};\n\n/**\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\n * @see https://github.com/fabricjs/fabric.js/pull/8380\n */\nfunction skewObject(\n  axis: TAxis,\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\n  pointer: Point,\n) {\n  const { skew: skewKey } = AXIS_KEYS[axis],\n    offset = pointer\n      .subtract(new Point(ex, ey))\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\n    skewingBefore = target[skewKey],\n    skewingStart = transform[skewKey],\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\n    // let a, b be the size of target\n    // let a' be the value of a after applying skewing\n    // then:\n    // a' = a + b * skewA => skewA = (a' - a) / b\n    // the value b is tricky since skewY is applied before skewX\n    b =\n      axis === 'y'\n        ? target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\n            skewX: 0,\n          }).x\n        : target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n          }).y;\n\n  const shearing =\n    (2 * offset * skewingSide) /\n      // we max out fractions to safeguard from asymptotic behavior\n      Math.max(b, 1) +\n    // add starting state\n    shearingStart;\n\n  const skewing = radiansToDegrees(Math.atan(shearing));\n\n  target.set(skewKey, skewing);\n  const changed = skewingBefore !== target[skewKey];\n\n  if (changed && axis === 'y') {\n    // we don't want skewing to affect scaleX\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\n    const { skewX, scaleX } = target,\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\n      dimAfter = target._getTransformedDimensions(),\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\n    compensationFactor !== 1 &&\n      target.set(SCALE_X, compensationFactor * scaleX);\n  }\n\n  return changed;\n}\n\n/**\n * Wrapped Action handler for skewing on a given axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nfunction skewHandler(\n  axis: TAxis,\n  eventData: TPointerEvent,\n  transform: Transform,\n  x: number,\n  y: number,\n) {\n  const { target } = transform,\n    {\n      counterAxis,\n      origin: originKey,\n      lockSkewing: lockSkewingKey,\n      skew: skewKey,\n      flip: flipKey,\n    } = AXIS_KEYS[axis];\n  if (isLocked(target, lockSkewingKey)) {\n    return false;\n  }\n\n  const { origin: counterOriginKey, flip: counterFlipKey } =\n      AXIS_KEYS[counterAxis],\n    counterOriginFactor =\n      resolveOrigin(transform[counterOriginKey]) *\n      (target[counterFlipKey] ? -1 : 1),\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\n    // so we factor skewing direction by this value.\n    skewingSide = (-Math.sign(counterOriginFactor) *\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\n    skewingDirection =\n      ((target[skewKey] === 0 &&\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\n      // in case target has skewing we use that as the direction\n      target[skewKey] > 0\n        ? 1\n        : -1) * skewingSide,\n    // anchor to the opposite side of the skewing direction\n    // normalize value from [-1, 1] to origin value [0, 1]\n    origin = -skewingDirection * 0.5 + 0.5;\n\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\n    SKEWING,\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\n      skewObject(axis, transform, new Point(x, y)),\n    ),\n  );\n\n  return finalHandler(\n    eventData,\n    {\n      ...transform,\n      [originKey]: origin,\n      skewingSide,\n    },\n    x,\n    y,\n  );\n}\n\n/**\n * Wrapped Action handler for skewing on the X axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('x', eventData, transform, x, y);\n};\n\n/**\n * Wrapped Action handler for skewing on the Y axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return skewHandler('y', eventData, transform, x, y);\n};\n","import type {\n  ControlCallback,\n  ControlCursorCallback,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { SCALE_X, SCALE_Y, SKEW_X, SKEW_Y } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxisKey } from '../typedefs';\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\n\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\n  return eventData[target.canvas!.altActionKey!];\n}\n\n/**\n * Inspect event, control and fabricObject to return the correct action name\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} an action name\n */\nexport const scaleOrSkewActionName: ControlCallback<\n  TAxisKey<'skew' | 'scale'> | ''\n> = (eventData, control, fabricObject) => {\n  const isAlternative = isAltAction(eventData, fabricObject);\n  if (control.x === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_X : SCALE_Y;\n  }\n  if (control.y === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? SKEW_Y : SCALE_X;\n  }\n  return '';\n};\n\n/**\n * Combine skew and scale style handlers to cover fabric standard use case\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject,\n) => {\n  return isAltAction(eventData, fabricObject)\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\n};\n/**\n * Composed action handler to either scale X or skew Y\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingXOrSkewingY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerY(eventData, transform, x, y)\n    : scalingX(eventData, transform, x, y);\n};\n\n/**\n * Composed action handler to either scale Y or skew X\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingYOrSkewingX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y,\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerX(eventData, transform, x, y)\n    : scalingY(eventData, transform, x, y);\n};\n","import { RESIZING, ROTATE } from '../constants';\nimport { changeWidth } from './changeWidth';\nimport { Control } from './Control';\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\nimport {\n  scaleOrSkewActionName,\n  scaleSkewCursorStyleHandler,\n  scalingXOrSkewingY,\n  scalingYOrSkewingX,\n} from './scaleSkew';\n\n// use this function if you want to generate new controls for every instance\nexport const createObjectDefaultControls = () => ({\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mb: new Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mt: new Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  tl: new Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  tr: new Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  bl: new Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  br: new Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  mtr: new Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: ROTATE,\n  }),\n});\n\nexport const createResizeControls = () => ({\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: RESIZING,\n  }),\n});\n\nexport const createTextboxDefaultControls = () => ({\n  ...createObjectDefaultControls(),\n  ...createResizeControls(),\n});\n","import { Point, ZERO } from '../../Point';\nimport type { TCornerPoint, TDegree } from '../../typedefs';\nimport { FabricObject } from './Object';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\nimport {\n  calcDimensionsMatrix,\n  createRotateMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../../util/misc/matrix';\nimport type { Control } from '../../controls/Control';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { createObjectDefaultControls } from '../../controls/commonControls';\nimport { interactiveObjectDefaultValues } from './defaultValues';\nimport { SCALE } from '../../constants';\n\nexport type TOCoord = Point & {\n  corner: TCornerPoint;\n  touchCorner: TCornerPoint;\n};\n\nexport type TControlSet = Record<string, Control>;\n\nexport type TBorderRenderingStyleOverride = Partial<\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\n>;\n\nexport type TStyleOverride = ControlRenderingStyleOverride &\n  TBorderRenderingStyleOverride &\n  Partial<\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\n      forActiveSelection: boolean;\n    }\n  >;\n\nexport class InteractiveFabricObject<\n    Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  declare noScaleCache: boolean;\n\n  declare snapAngle?: TDegree;\n  declare snapThreshold?: TDegree;\n\n  declare lockMovementX: boolean;\n  declare lockMovementY: boolean;\n  declare lockRotation: boolean;\n  declare lockScalingX: boolean;\n  declare lockScalingY: boolean;\n  declare lockSkewingX: boolean;\n  declare lockSkewingY: boolean;\n  declare lockScalingFlip: boolean;\n\n  declare cornerSize: number;\n  declare touchCornerSize: number;\n  declare transparentCorners: boolean;\n  declare cornerColor: string;\n  declare cornerStrokeColor: string;\n  declare cornerStyle: 'rect' | 'circle';\n  declare cornerDashArray: number[] | null;\n  declare hasControls: boolean;\n\n  declare borderColor: string;\n  declare borderDashArray: number[] | null;\n  declare borderOpacityWhenMoving: number;\n  declare borderScaleFactor: number;\n  declare hasBorders: boolean;\n  declare selectionBackgroundColor: string;\n\n  declare selectable: boolean;\n  declare evented: boolean;\n  declare perPixelTargetFind: boolean;\n  declare activeOn: 'down' | 'up';\n\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\n\n  /**\n   * The object's controls' position in viewport coordinates\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\n   * Used to draw and locate controls.\n   */\n  declare oCoords: Record<string, TOCoord>;\n\n  /**\n   * keeps the value of the last hovered corner during mouse move.\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n   * It should be private, but there is no harm in using it as\n   * a read-only property.\n   * this isn't cleaned automatically. Non selected objects may have wrong values\n   * @type [string]\n   */\n  declare __corner?: string;\n\n  /**\n   * a map of control visibility for this object.\n   * this was left when controls were introduced to not break the api too much\n   * this takes priority over the generic control visibility\n   */\n  declare _controlsVisibility: Record<string, boolean>;\n\n  /**\n   * holds the controls for the object.\n   * controls are added by default_controls.js\n   */\n  declare controls: TControlSet;\n\n  /**\n   * internal boolean to signal the code that the object is\n   * part of the move action.\n   */\n  declare isMoving?: boolean;\n\n  /**\n   * A boolean used from the gesture module to keep tracking of a scaling\n   * action when there is no scaling transform in place.\n   * This is an edge case and is used twice in all codebase.\n   * Probably added to keep track of some performance issues\n   * @TODO use git blame to investigate why it was added\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\n   */\n  declare _scaling?: boolean;\n\n  declare canvas?: Canvas;\n\n  static ownDefaults = interactiveObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...InteractiveFabricObject.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof InteractiveFabricObject).createControls(),\n      InteractiveFabricObject.ownDefaults,\n    );\n    this.setOptions(options);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults\n   * @param {Object} [options] Options object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createObjectDefaultControls() };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const targetCanvas = this.canvas;\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n      const transform = targetCanvas._currentTransform,\n        target = transform.target,\n        action = transform.action;\n      if (\n        this === (target as unknown as this) &&\n        action &&\n        action.startsWith(SCALE)\n      ) {\n        return false;\n      }\n    }\n    return super._updateCacheCanvas();\n  }\n\n  getActiveControl() {\n    const key = this.__corner;\n    return key\n      ? {\n          key,\n          control: this.controls[key],\n          coord: this.oCoords[key],\n        }\n      : undefined;\n  }\n\n  /**\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\n   * This function is return a corner only if the object is the active one.\n   * This is done to avoid selecting corner of non active object and activating transformations\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\n   * an object, first you select it to show the control set\n   * @private\n   * @param {Object} pointer The pointer indicating the mouse position\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\n   */\n  findControl(\n    pointer: Point,\n    forTouch = false,\n  ): { key: string; control: Control; coord: TOCoord } | undefined {\n    if (!this.hasControls || !this.canvas) {\n      return undefined;\n    }\n\n    this.__corner = undefined;\n    const cornerEntries = Object.entries(this.oCoords);\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\n      const [key, corner] = cornerEntries[i];\n      const control = this.controls[key];\n\n      if (\n        control.shouldActivate(\n          key,\n          this,\n          pointer,\n          forTouch ? corner.touchCorner : corner.corner,\n        )\n      ) {\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\n        this.__corner = key;\n\n        return { key, control, coord: this.oCoords[key] };\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\n   * This basically just delegates to each control positionHandler\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\n   * is a public api and should be done just if extremely necessary\n   * @return {Record<string, TOCoord>}\n   */\n  calcOCoords(): Record<string, TOCoord> {\n    const vpt = this.getViewportTransform(),\n      center = this.getCenterPoint(),\n      tMatrix = createTranslateMatrix(center.x, center.y),\n      rMatrix = createRotateMatrix({\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\n      }),\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\n        1 / vpt[0],\n        0,\n        0,\n        1 / vpt[3],\n        0,\n        0,\n      ]),\n      transformOptions = this.group\n        ? qrDecompose(this.calcTransformMatrix())\n        : undefined;\n    // decomposing could bring negative scaling and `_calculateCurrentDimensions` can't take it\n    if (transformOptions) {\n      transformOptions.scaleX = Math.abs(transformOptions.scaleX);\n      transformOptions.scaleY = Math.abs(transformOptions.scaleY);\n    }\n    const dim = this._calculateCurrentDimensions(transformOptions),\n      coords: Record<string, TOCoord> = {};\n\n    this.forEachControl((control, key) => {\n      const position = control.positionHandler(dim, finalMatrix, this, control);\n      // coords[key] are sometimes used as points. Those are points to which we add\n      // the property corner and touchCorner from `_calcCornerCoords`.\n      // don't remove this assign for an object spread.\n      coords[key] = Object.assign(\n        position,\n        this._calcCornerCoords(control, position),\n      );\n    });\n\n    // debug code\n    /*\n      const canvas = this.canvas;\n      setTimeout(function () {\n      if (!canvas) return;\n        canvas.contextTop.clearRect(0, 0, 700, 700);\n        canvas.contextTop.fillStyle = 'green';\n        Object.keys(coords).forEach(function(key) {\n          const control = coords[key];\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n        });\n      } 50);\n    */\n    return coords;\n  }\n\n  /**\n   * Sets the coordinates that determine the interaction area of each control\n   * note: if we would switch to ROUND corner area, all of this would disappear.\n   * everything would resolve to a single point and a pythagorean theorem for the distance\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\n   * @private\n   */\n  private _calcCornerCoords(control: Control, position: Point) {\n    const angle = this.getTotalAngle();\n    const corner = control.calcCornerCoords(\n      angle,\n      this.cornerSize,\n      position.x,\n      position.y,\n      false,\n      this,\n    );\n    const touchCorner = control.calcCornerCoords(\n      angle,\n      this.touchCornerSize,\n      position.x,\n      position.y,\n      true,\n      this,\n    );\n    return { corner, touchCorner };\n  }\n\n  /**\n   * @override set controls' coordinates as well\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   * @return {void}\n   */\n  setCoords(): void {\n    super.setCoords();\n    this.canvas && (this.oCoords = this.calcOCoords());\n  }\n\n  /**\n   * Calls a function for each control. The function gets called,\n   * with the control, the control's key and the object that is calling the iterator\n   * @param {Function} fn function to iterate over the controls over\n   */\n  forEachControl(\n    fn: (\n      control: Control,\n      key: string,\n      fabricObject: InteractiveFabricObject,\n    ) => any,\n  ) {\n    for (const i in this.controls) {\n      fn(this.controls[i], i, this);\n    }\n  }\n\n  /**\n   * Draws a colored layer behind the object, inside its selection borders.\n   * Requires public options: padding, selectionBackgroundColor\n   * this function is called when the context is transformed\n   * has checks to be skipped when the object is on a staticCanvas\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\n   * it seemed a good option, now is an edge case\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   */\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\n    if (\n      !this.selectionBackgroundColor ||\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\n    ) {\n      return;\n    }\n    ctx.save();\n    const center = this.getRelativeCenterPoint(),\n      wh = this._calculateCurrentDimensions(),\n      vpt = this.getViewportTransform();\n    ctx.translate(center.x, center.y);\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\n    ctx.rotate(degreesToRadians(this.angle));\n    ctx.fillStyle = this.selectionBackgroundColor;\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n    ctx.restore();\n  }\n\n  /**\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\n   * @param {Point} size the control box size used\n   */\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size\n   * @param {TStyleOverride} styleOverride object to override the object style\n   */\n  _drawBorders(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n    styleOverride: TStyleOverride = {},\n  ): void {\n    const options = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      borderDashArray: this.borderDashArray,\n      ...styleOverride,\n    };\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    this._setLineDash(ctx, options.borderDashArray);\n    this.strokeBorders(ctx, size);\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\n    ctx.restore();\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * the context here is not transformed\n   * @todo move to interactivity\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: TStyleOverride = {},\n  ) {\n    const { hasBorders, hasControls } = this;\n    const styleOptions = {\n      hasBorders,\n      hasControls,\n      ...styleOverride,\n    };\n    const vpt = this.getViewportTransform(),\n      shouldDrawBorders = styleOptions.hasBorders,\n      shouldDrawControls = styleOptions.hasControls;\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\n    const options = qrDecompose(matrix);\n    ctx.save();\n    ctx.translate(options.translateX, options.translateY);\n    ctx.lineWidth = this.borderScaleFactor; // 1 * this.borderScaleFactor;\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\n    // the following equality check `this.group === this.parent` covers:\n    // object without a group ( undefined === undefined )\n    // object inside a group\n    // excludes object inside a group but multi selected since group and parent will differ in value\n    if (this.group === this.parent) {\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    }\n    if (this.flipX) {\n      options.angle -= 180;\n    }\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\n    ctx.restore();\n  }\n\n  /**\n   * Draws borders of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {object} options object representing current object parameters\n   * @param {TStyleOverride} [styleOverride] object to override the object style\n   */\n  drawBorders(\n    ctx: CanvasRenderingContext2D,\n    options: TQrDecomposeOut,\n    styleOverride: TStyleOverride,\n  ): void {\n    let size;\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\n      const bbox = sizeAfterTransform(\n          this.width,\n          this.height,\n          calcDimensionsMatrix(options),\n        ),\n        stroke = !this.isStrokeAccountedForInDimensions()\n          ? (this.strokeUniform\n              ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\n              : // this is extremely confusing. options comes from the upper function\n                // and is the qrDecompose of a matrix that takes in account zoom too\n                new Point(options.scaleX, options.scaleY)\n            ).scalarMultiply(this.strokeWidth)\n          : ZERO;\n      size = bbox\n        .add(stroke)\n        .scalarAdd(this.borderScaleFactor)\n        .scalarAdd(this.padding * 2);\n    } else {\n      size = this._calculateCurrentDimensions().scalarAdd(\n        this.borderScaleFactor,\n      );\n    }\n    this._drawBorders(ctx, size, styleOverride);\n  }\n\n  /**\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size object size x = width, y = height\n   */\n  drawControlsConnectingLines(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n  ): void {\n    let shouldStroke = false;\n\n    ctx.beginPath();\n    this.forEachControl((control, key) => {\n      // in this moment, the ctx is centered on the object.\n      // width and height of the above function are the size of the bbox.\n      if (control.withConnection && control.getVisibility(this, key)) {\n        // reset movement for each control\n        shouldStroke = true;\n        ctx.moveTo(control.x * size.x, control.y * size.y);\n        ctx.lineTo(\n          control.x * size.x + control.offsetX,\n          control.y * size.y + control.offsetY,\n        );\n      }\n    });\n    shouldStroke && ctx.stroke();\n  }\n\n  /**\n   * Draws corners of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: cornerSize, padding\n   * Be aware that since fabric 6.0 this function does not call setCoords anymore.\n   * setCoords needs to be called manually if the object of which we are rendering controls\n   * is outside the standard selection and transform process.\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\n   */\n  drawControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: ControlRenderingStyleOverride = {},\n  ) {\n    ctx.save();\n    const retinaScaling = this.getCanvasRetinaScaling();\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\n    const options = {\n      cornerStrokeColor,\n      cornerDashArray,\n      cornerColor,\n      ...styleOverride,\n    };\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\n    if (!this.transparentCorners) {\n      ctx.strokeStyle = options.cornerStrokeColor;\n    }\n    this._setLineDash(ctx, options.cornerDashArray);\n    this.forEachControl((control, key) => {\n      if (control.getVisibility(this, key)) {\n        const p = this.oCoords[key];\n        control.render(ctx, p.x, p.y, options, this);\n      }\n    });\n    ctx.restore();\n  }\n\n  /**\n   * Returns true if the specified control is visible, false otherwise.\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\n   * but since the control api allow for any control name, can be any string.\n   * @returns {boolean} true if the specified control is visible, false otherwise\n   */\n  isControlVisible(controlKey: string): boolean {\n    return (\n      this.controls[controlKey] &&\n      this.controls[controlKey].getVisibility(this, controlKey)\n    );\n  }\n\n  /**\n   * Sets the visibility of the specified control.\n   * please do not use.\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n   * but since the control api allow for any control name, can be any string.\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\n   */\n  setControlVisible(controlKey: string, visible: boolean) {\n    if (!this._controlsVisibility) {\n      this._controlsVisibility = {};\n    }\n    this._controlsVisibility[controlKey] = visible;\n  }\n\n  /**\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\n   * @param {Record<string, boolean>} [options] with an optional key per control\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n   */\n  setControlsVisibility(options: Record<string, boolean> = {}) {\n    Object.entries(options).forEach(([controlKey, visibility]) =>\n      this.setControlVisible(controlKey, visibility),\n    );\n  }\n\n  /**\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\n   * that is in the canvas.contextContainer.\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\n   * Example: blinking cursor text selection, drag effects.\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\n   * with the object transformMatrix, or restored to neutral transform\n   */\n  clearContextTop(\n    restoreManually?: boolean,\n  ): CanvasRenderingContext2D | undefined {\n    if (!this.canvas) {\n      return;\n    }\n    const ctx = this.canvas.contextTop;\n    if (!ctx) {\n      return;\n    }\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this.transform(ctx);\n    // we add 4 pixel, to be sure to do not leave any pixel out\n    const width = this.width + 4,\n      height = this.height + 4;\n    ctx.clearRect(-width / 2, -height / 2, width, height);\n\n    restoreManually || ctx.restore();\n    return ctx;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to deselect this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\n   * this is being deselected\n   */\n  onDeselect(_options?: {\n    e?: TPointerEvent;\n    object?: InteractiveFabricObject;\n  }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to select this object. If the function returns true, the process is cancelled\n   * @param {Object} [_options] options sent from the upper functions\n   * @param {Event} [_options.e] event if the process is generated by an event\n   */\n  onSelect(_options?: { e?: TPointerEvent }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\n   * Fired from {@link Canvas#_onMouseMove}\n   * @returns true in order for the window to start a drag session\n   */\n  shouldStartDragging(_e: TPointerEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\\\n   * Fired once a drag session has started\n   * @returns true to handle the drag event\n   */\n  onDragStart(_e: DragEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * @public\n   * @param {DragEvent} _e\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\n   */\n  canDrop(_e: DragEvent): boolean {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the source of a drag event\n   * example: render the selection status for the part of text that is being dragged from a text object\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDragSourceEffect(_e: DragEvent) {\n    // for subclasses\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the target of a drag event\n   * used to show that the underly object can receive a drop, or to show how the\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\n   * @public\n   * @param {DragEvent} _e\n   */\n  renderDropTargetEffect(_e: DragEvent) {\n    // for subclasses\n  }\n}\n","import type { Constructor } from '../typedefs';\n\n/***\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\n */\nexport function applyMixins<T extends Constructor, S extends Constructor>(\n  derivedCtor: T,\n  constructors: S[],\n) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      name !== 'constructor' &&\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n            Object.create(null),\n        );\n    });\n  });\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\nimport { InteractiveFabricObject } from './InteractiveObject';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { classRegistry } from '../../ClassRegistry';\n\n// TODO somehow we have to make a tree-shakeable import\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface FabricObject<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObjectSVGExportMixin {}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\n\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n\nexport { cacheProperties } from './defaultValues';\n","/**\n * Returns true if context has transparent pixel\n * at specified location (taking tolerance into account)\n * @param {CanvasRenderingContext2D} ctx context\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\n * @return {boolean} true if transparent\n */\nexport const isTransparent = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  tolerance: number,\n): boolean => {\n  tolerance = Math.round(tolerance);\n  const size = tolerance * 2 + 1;\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\n\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\n  for (let i = 3; i < data.length; i += 4) {\n    const alphaChannel = data[i];\n    if (alphaChannel > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import type { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n/**\n * Rotates `point` around `origin` with `radians`\n * @deprecated use the Point.rotate\n * @param {Point} origin The origin of the rotation\n * @param {Point} origin The origin of the rotation\n * @param {TRadian} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotatePoint = (\n  point: Point,\n  origin: Point,\n  radians: TRadian,\n): Point => point.rotate(radians, origin);\n","export const findIndexRight = <T>(\n  array: T[],\n  predicate: (value: T, index: number, array: T[]) => boolean,\n) => {\n  for (let index = array.length - 1; index >= 0; index--) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport { createVector } from '../vectors';\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\n\n/**\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n * @todo consider removing skewing from points before calculating stroke projection,\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\n */\nexport abstract class StrokeProjectionsBase {\n  declare options: TProjectStrokeOnPointsOptions;\n  declare scale: Point;\n  declare strokeUniformScalar: Point;\n  declare strokeProjectionMagnitude: number;\n\n  constructor(options: TProjectStrokeOnPointsOptions) {\n    this.options = options;\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\n    this.strokeUniformScalar = this.options.strokeUniform\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\n      : new Point(1, 1);\n  }\n\n  /**\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\n   */\n  protected createSideVector(from: XY, to: XY) {\n    const v = createVector(from, to);\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\n  }\n\n  protected abstract calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude?: number,\n  ): Point;\n\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\n    return this.applySkew(\n      from.add(this.calcOrthogonalProjection(from, to, magnitude)),\n    );\n  }\n\n  protected isSkewed() {\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\n  }\n\n  protected applySkew(point: Point) {\n    const p = new Point(point);\n    // skewY must be applied before skewX as this distortion affects skewX calculation\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\n    return p;\n  }\n\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\n  }\n\n  protected abstract projectPoints(): Point[];\n\n  public abstract project(): TProjection[];\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { halfPI, twoMathPi } from '../../../constants';\nimport type { TRadian } from '../../../typedefs';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport {\n  calcAngleBetweenVectors,\n  calcVectorRotation,\n  crossProduct,\n  getOrthonormalVector,\n  getUnitVector,\n  isBetweenVectors,\n  magnitude,\n  rotateVector,\n} from '../vectors';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nconst zeroVector = new Point();\n\n/**\n * class in charge of finding projections for each type of line join\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\n *\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n *\n */\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\n  /**\n   * The point being projected (the angle ∠BAC)\n   */\n  declare A: Point;\n  /**\n   * The point before A\n   */\n  declare B: Point;\n  /**\n   * The point after A\n   */\n  declare C: Point;\n  /**\n   * The AB vector\n   */\n  AB: Point;\n  /**\n   * The AC vector\n   */\n  AC: Point;\n  /**\n   * The angle of A (∠BAC)\n   */\n  alpha: TRadian;\n  /**\n   * The bisector of A (∠BAC)\n   */\n  bisector: Point;\n\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\n    const angle = vector2\n      ? calcAngleBetweenVectors(vector1, vector2)\n      : calcVectorRotation(vector1);\n    return Math.abs(angle) < halfPI ? -1 : 1;\n  }\n\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.B = new Point(B);\n    this.C = new Point(C);\n    this.AB = this.createSideVector(this.A, this.B);\n    this.AC = this.createSideVector(this.A, this.C);\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\n    this.bisector = getUnitVector(\n      // if AC is also the zero vector nothing will be projected\n      // in that case the next point will handle the projection\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2),\n    );\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    const orthogonalProjection = getOrthonormalVector(vector);\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\n      orthogonalProjection,\n      this.bisector,\n    );\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\n  }\n\n  /**\n   * BEVEL\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\n   */\n  projectBevel() {\n    const projections: Point[] = [];\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\n      (to) => {\n        projections.push(this.projectOrthogonally(this.A, to));\n        projections.push(\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude),\n        );\n      },\n    );\n    return projections;\n  }\n\n  /**\n   * MITER\n   * Calculation: the corner is formed by extending the outer edges of the stroke\n   * at the tangents of the path segments until they intersect.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\n   */\n  projectMiter() {\n    const projections: Point[] = [],\n      alpha = Math.abs(this.alpha),\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\n      miterVector = this.scaleUnitVector(\n        this.bisector,\n        -this.strokeProjectionMagnitude * hypotUnitScalar,\n      );\n\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\n    // a limit on the extent of the line join.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\n    const strokeMiterLimit = this.options.strokeUniform\n      ? magnitude(\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit),\n        )\n      : this.options.strokeMiterLimit;\n\n    if (\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\n      strokeMiterLimit\n    ) {\n      projections.push(this.applySkew(this.A.add(miterVector)));\n    }\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\n      We always need two orthogonal projections which are basically bevel-type projections,\n      so regardless of whether the miter-limit was reached or not, we include these projections.\n    */\n    projections.push(...this.projectBevel());\n\n    return projections;\n  }\n\n  /**\n   * ROUND (without skew)\n   * Calculation: the projections are the two vectors parallel to X and Y axes\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\n   */\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [],\n      // correctSide is used to only consider projecting for the outer side\n      correctSide = new Point(\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\n          new Point(this.bisector.y, this.bisector.x),\n        ),\n      ),\n      radiusOnAxisX = new Point(1, 0)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide),\n      radiusOnAxisY = new Point(0, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide);\n\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\n        projections.push(this.A.add(vector));\n      }\n    });\n    return projections;\n  }\n\n  /**\n   * ROUND (with skew)\n   * Calculation: the projections are the points furthest from the vertex in\n   * the direction of the X and Y axes after distortion.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\n   */\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [];\n\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\n      shearing = new Point(\n        Math.tan(degreesToRadians(skewX)),\n        Math.tan(degreesToRadians(skewY)),\n      );\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\n    const circleRadius = this.strokeProjectionMagnitude,\n      newY = strokeUniform\n        ? circleRadius /\n          scaleY /\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\n      furthestY = new Point(\n        // Safe guard due to floating point precision. In some situations the square root\n        // was returning NaN because of a negative number close to zero.\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\n        newY,\n      ),\n      newX = strokeUniform\n        ? circleRadius /\n          Math.sqrt(\n            1 +\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2,\n          )\n        : circleRadius /\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\n      furthestX = new Point(\n        newX,\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0)),\n      );\n\n    [\n      furthestX,\n      furthestX.scalarMultiply(-1),\n      furthestY,\n      furthestY.scalarMultiply(-1),\n    ]\n      // We need to skew the vector here as this information is used to check if\n      // it is between the start and end of the circle segment\n      .map((vector) =>\n        this.applySkew(\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector,\n        ),\n      )\n      .forEach((vector) => {\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\n          projections.push(this.applySkew(this.A).add(vector));\n        }\n      });\n\n    return projections;\n  }\n\n  projectRound() {\n    const projections: Point[] = [];\n    /* Include the start and end points of the circle segment, so that only\n      the projections contained within it are included */\n    // add the orthogonal projections (start and end points of circle segment)\n    projections.push(...this.projectBevel());\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\n    const isStraightLine = this.alpha % twoMathPi === 0,\n      // change the origin of the projections to point A\n      // so that the cross product calculation is correct\n      newOrigin = this.applySkew(this.A),\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\n      comparisonVector = isStraightLine\n        ? this.applySkew(this.AB.scalarMultiply(-1))\n        : this.applySkew(\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1),\n          ),\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\n      startCircle = isProj0Start ? proj0 : proj1,\n      endCircle = isProj0Start ? proj1 : proj0;\n    if (!this.isSkewed()) {\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\n    } else {\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\n    }\n    return projections;\n  }\n\n  /**\n   * Project stroke width on points returning projections for each point as follows:\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\n   */\n  protected projectPoints() {\n    switch (this.options.strokeLineJoin) {\n      case 'miter':\n        return this.projectMiter();\n      case 'round':\n        return this.projectRound();\n      default:\n        return this.projectBevel();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n      angle: this.alpha,\n      bisector: this.bisector,\n    }));\n  }\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\n/**\n * class in charge of finding projections for each type of line cap for start/end of an open path\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\n *\n * Reference:\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n */\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\n  /**\n   * edge point\n   */\n  declare A: Point;\n  /**\n   * point next to edge point\n   */\n  declare T: Point;\n\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.T = new Point(T);\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude,\n  ) {\n    const vector = this.createSideVector(from, to);\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Butt\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\n   */\n  projectButt() {\n    return [\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\n    ];\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Round\n   * Calculation: same as stroke line join `round`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\n   */\n  projectRound() {\n    const projections: Point[] = [];\n\n    if (!this.isSkewed() && this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(\n        this.applySkew(this.A.add(projection)),\n        this.applySkew(this.A.subtract(projection)),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(\n          this.A,\n          this.T,\n          this.T,\n          this.options,\n        ).projectRound(),\n      );\n    }\n\n    return projections;\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Square\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\n   */\n  projectSquare() {\n    const projections: Point[] = [];\n\n    if (this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(this.A.add(projection), this.A.subtract(projection));\n    } else {\n      const orthogonalProjection = this.calcOrthogonalProjection(\n        this.A,\n        this.T,\n        this.strokeProjectionMagnitude,\n      );\n      const strokePointingOut = this.scaleUnitVector(\n        getUnitVector(this.createSideVector(this.A, this.T)),\n        -this.strokeProjectionMagnitude,\n      );\n      const projectedA = this.A.add(strokePointingOut);\n      projections.push(\n        projectedA.add(orthogonalProjection),\n        projectedA.subtract(orthogonalProjection),\n      );\n    }\n\n    return projections.map((p) => this.applySkew(p));\n  }\n\n  protected projectPoints() {\n    switch (this.options.strokeLineCap) {\n      case 'round':\n        return this.projectRound();\n      case 'square':\n        return this.projectSquare();\n      default:\n        return this.projectButt();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n    }));\n  }\n}\n","import { Point, type XY } from '../../../Point';\nimport { findIndexRight } from '../../internals/findRight';\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nexport * from './types';\n\n/**\n *\n * Used to calculate object's bounding box\n *\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n *\n */\nexport const projectStrokeOnPoints = (\n  points: XY[],\n  options: TProjectStrokeOnPointsOptions,\n  openPath = false,\n): TProjection[] => {\n  const projections: TProjection[] = [];\n\n  if (points.length === 0) {\n    return projections;\n  }\n\n  // first we remove duplicate neighboring points\n  const reduced = points.reduce(\n    (reduced, point) => {\n      if (!reduced[reduced.length - 1].eq(point)) {\n        reduced.push(new Point(point));\n      }\n      return reduced;\n    },\n    [new Point(points[0])],\n  );\n\n  if (reduced.length === 1) {\n    openPath = true;\n  } else if (!openPath) {\n    // remove points from end in case they equal the first point\n    // in order to correctly project the first point\n    const start = reduced[0];\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\n    reduced.splice(index + 1);\n  }\n\n  reduced.forEach((A, index, points) => {\n    let B: XY, C: XY;\n    if (index === 0) {\n      C = points[1];\n      B = openPath ? A : points[points.length - 1];\n    } else if (index === points.length - 1) {\n      B = points[index - 1];\n      C = openPath ? A : points[0];\n    } else {\n      B = points[index - 1];\n      C = points[index + 1];\n    }\n\n    if (openPath && points.length === 1) {\n      projections.push(\n        ...new StrokeLineCapProjections(A, A, options).project(),\n      );\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\n      projections.push(\n        ...new StrokeLineCapProjections(\n          A,\n          index === 0 ? C : B,\n          options,\n        ).project(),\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(A, B, C, options).project(),\n      );\n    }\n  });\n\n  return projections;\n};\n","import type { TextStyle } from '../../shapes/Text/StyledText';\n\nexport const cloneStyles = (style: TextStyle): TextStyle => {\n  const newObj: TextStyle = {};\n  Object.keys(style).forEach((key) => {\n    newObj[key] = {};\n    Object.keys(style[key]).forEach((keyInner) => {\n      newObj[key][keyInner] = { ...style[key][keyInner] };\n    });\n  });\n  return newObj;\n};\n","/**\n * Capitalizes a string\n * @param {String} string String to capitalize\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n * and other letters stay untouched, if false first letter is capitalized\n * and other letters are converted to lowercase.\n * @return {String} Capitalized version of a string\n */\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\n  `${string.charAt(0).toUpperCase()}${\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\n  }`;\n\n/**\n * Escapes XML in a string\n * @param {String} string String to escape\n * @return {String} Escaped version of a string\n */\nexport const escapeXml = (string: string): string =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n/**\n * Divide a string in the user perceived single units\n * @param {String} textstring String to escape\n * @return {Array} array containing the graphemes\n */\nexport const graphemeSplit = (textstring: string): string[] => {\n  const graphemes = [];\n  for (let i = 0, chr; i < textstring.length; i++) {\n    if ((chr = getWholeChar(textstring, i)) === false) {\n      continue;\n    }\n    graphemes.push(chr as string);\n  }\n  return graphemes;\n};\n\n// taken from mdn in the charAt doc page.\nconst getWholeChar = (str: string, i: number): string | boolean => {\n  const code = str.charCodeAt(i);\n  if (isNaN(code)) {\n    return ''; // Position not found\n  }\n  if (code < 0xd800 || code > 0xdfff) {\n    return str.charAt(i);\n  }\n\n  // High surrogate (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 <= code && code <= 0xdbff) {\n    if (str.length <= i + 1) {\n      throw 'High surrogate without following low surrogate';\n    }\n    const next = str.charCodeAt(i + 1);\n    if (0xdc00 > next || next > 0xdfff) {\n      throw 'High surrogate without following low surrogate';\n    }\n    return str.charAt(i) + str.charAt(i + 1);\n  }\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n  if (i === 0) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  const prev = str.charCodeAt(i - 1);\n\n  // (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 > prev || prev > 0xdbff) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  // We can pass over low surrogates now as the second component\n  // in a pair which we have already processed\n  return false;\n};\n","import { reNewline } from '../../constants';\nimport type {\n  TextStyle,\n  TextStyleDeclaration,\n} from '../../shapes/Text/StyledText';\nimport { cloneStyles } from '../internals/cloneStyles';\nimport { graphemeSplit } from '../lang_string';\n\nexport type TextStyleArray = {\n  start: number;\n  end: number;\n  style: TextStyleDeclaration;\n}[];\n\n/**\n * @param {Object} prevStyle first style to compare\n * @param {Object} thisStyle second style to compare\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n * @return {boolean} true if the style changed\n */\nexport const hasStyleChanged = (\n  prevStyle: TextStyleDeclaration,\n  thisStyle: TextStyleDeclaration,\n  forTextSpans = false,\n) =>\n  prevStyle.fill !== thisStyle.fill ||\n  prevStyle.stroke !== thisStyle.stroke ||\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n  prevStyle.fontSize !== thisStyle.fontSize ||\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n  prevStyle.deltaY !== thisStyle.deltaY ||\n  (forTextSpans &&\n    (prevStyle.overline !== thisStyle.overline ||\n      prevStyle.underline !== thisStyle.underline ||\n      prevStyle.linethrough !== thisStyle.linethrough));\n\n/**\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\n * rather than per character. This format is less verbose, and is better suited for storage\n * so it is used in serialization (not during runtime).\n * @param {object} styles per character styles for a text object\n * @param {String} text the text string that the styles are applied to\n * @return {{start: number, end: number, style: object}[]}\n */\nexport const stylesToArray = (\n  styles: TextStyle,\n  text: string,\n): TextStyleArray => {\n  const textLines = text.split('\\n'),\n    stylesArray = [];\n  let charIndex = -1,\n    prevStyle = {};\n  // clone style structure to prevent mutation\n  styles = cloneStyles(styles);\n\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n    if (!styles[i]) {\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\n      charIndex += chars.length;\n      prevStyle = {};\n      continue;\n    }\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      const thisStyle = styles[i][c];\n      //check if style exists for this character\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\n          stylesArray.push({\n            start: charIndex,\n            end: charIndex + 1,\n            style: thisStyle,\n          });\n        } else {\n          //if style is the same as previous character, increase end index\n          stylesArray[stylesArray.length - 1].end++;\n        }\n      }\n      prevStyle = thisStyle || {};\n    }\n  }\n  return stylesArray;\n};\n\n/**\n * Returns the object form of the styles property with styles that are assigned per\n * character rather than grouped by range. This format is more verbose, and is\n * only used during runtime (not for serialization/storage)\n * @param {Array} styles the serialized form of a text object's styles\n * @param {String} text the text string that the styles are applied to\n * @return {Object}\n */\nexport const stylesFromArray = (\n  styles: TextStyleArray | TextStyle,\n  text: string,\n): TextStyle => {\n  if (!Array.isArray(styles)) {\n    // clone to prevent mutation\n    return cloneStyles(styles);\n  }\n  const textLines = text.split(reNewline),\n    stylesObject: TextStyle = {};\n  let charIndex = -1,\n    styleIndex = 0;\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      //check if there's a style collection that includes the current character\n      if (\n        styles[styleIndex] &&\n        styles[styleIndex].start <= charIndex &&\n        charIndex < styles[styleIndex].end\n      ) {\n        //create object for line index if it doesn't exist\n        stylesObject[i] = stylesObject[i] || {};\n        //assign a style at this character's index\n        stylesObject[i][c] = { ...styles[styleIndex].style };\n        //if character is at the end of the current style collection, move to the next\n        if (charIndex === styles[styleIndex].end - 1) {\n          styleIndex++;\n        }\n      }\n    }\n  }\n  return stylesObject;\n};\n","import { FILL, STROKE } from '../constants';\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nexport const SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  FILL,\n  'fill-opacity',\n  'fill-rule',\n  'opacity',\n  STROKE,\n  'stroke-dasharray',\n  'stroke-linecap',\n  'stroke-dashoffset',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'id',\n  'paint-order',\n  'vector-effect',\n  'instantiated_by_use',\n  'clip-path',\n];\n","export function selectorMatches(element: HTMLElement, selector: string) {\n  const nodeName = element.nodeName;\n  const classNames = element.getAttribute('class');\n  const id = element.getAttribute('id');\n  const azAz = '(?![a-zA-Z\\\\-]+)';\n  let matcher;\n  // i check if a selector matches slicing away part from it.\n  // if i get empty string i should match\n  matcher = new RegExp('^' + nodeName, 'i');\n  selector = selector.replace(matcher, '');\n  if (id && selector.length) {\n    matcher = new RegExp('#' + id + azAz, 'i');\n    selector = selector.replace(matcher, '');\n  }\n  if (classNames && selector.length) {\n    const splitClassNames = classNames.split(' ');\n    for (let i = splitClassNames.length; i--; ) {\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\n      selector = selector.replace(matcher, '');\n    }\n  }\n  return selector.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\n\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\n  let selector: string,\n    parentMatching = true;\n  while (\n    element.parentElement &&\n    element.parentElement.nodeType === 1 &&\n    selectors.length\n  ) {\n    if (parentMatching) {\n      selector = selectors.pop()!;\n    }\n    element = element.parentElement;\n    parentMatching = selectorMatches(element, selector!);\n  }\n  return selectors.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\n\n/**\n * @private\n */\n\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\n  let parentMatching = true;\n  // start from rightmost selector.\n  const firstMatching = selectorMatches(element, selectors.pop()!);\n  if (firstMatching && selectors.length) {\n    parentMatching = doesSomeParentMatch(element, selectors);\n  }\n  return firstMatching && parentMatching && selectors.length === 0;\n}\n","import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {},\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n","import { attributesMap } from './constants';\n\nexport const normalizeAttr = (\n  attr: keyof typeof attributesMap | string,\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\n","import { reNum } from '../../parser/constants';\n\nconst regex = new RegExp(`(${reNum})`, 'gi');\n\nexport const cleanupSvgAttribute = (attributeValue: string) =>\n  attributeValue\n    .replace(regex, ' $1 ')\n    // replace annoying commas and arbitrary whitespace with single spaces\n    .replace(/,/gi, ' ')\n    .replace(/\\s+/gi, ' ');\n","import { ROTATE, SCALE, SKEW_X, SKEW_Y, iMatrix } from '../constants';\nimport { reNum } from './constants';\nimport type { TMat2D } from '../typedefs';\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createSkewXMatrix,\n  createSkewYMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\n\n// == begin transform regexp\nconst p = `(${reNum})`;\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\nconst transforms = `(?:${transform}*)`;\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\nconst reTransformList = new RegExp(transformList);\nconst reTransform = new RegExp(transform);\nconst reTransformAll = new RegExp(transform, 'g');\n// == end transform regexp\n\n/**\n * Parses \"transform\" attribute, returning an array of values\n * @static\n * @function\n * @memberOf fabric\n * @param {String} attributeValue String containing attribute value\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\n */\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\n  // first we clean the string\n  attributeValue = cleanupSvgAttribute(attributeValue)\n    // remove spaces around front parentheses\n    .replace(/\\s*([()])\\s*/gi, '$1');\n\n  // start with identity matrix\n  const matrices: TMat2D[] = [];\n\n  // return if no argument was given or\n  // an argument does not match transform attribute regexp\n  if (\n    !attributeValue ||\n    (attributeValue && !reTransformList.test(attributeValue))\n  ) {\n    return [...iMatrix];\n  }\n\n  for (const match of attributeValue.matchAll(reTransformAll)) {\n    const transformMatch = reTransform.exec(match[0]);\n    if (!transformMatch) {\n      continue;\n    }\n    let matrix: TMat2D = iMatrix;\n    const matchedParams = transformMatch.filter((m) => !!m);\n    const [, operation, ...rawArgs] = matchedParams;\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\n      parseFloat(arg),\n    );\n\n    switch (operation) {\n      case 'translate':\n        matrix = createTranslateMatrix(arg0, arg1);\n        break;\n      case ROTATE:\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\n        break;\n      case SCALE:\n        matrix = createScaleMatrix(arg0, arg1);\n        break;\n      case SKEW_X:\n        matrix = createSkewXMatrix(arg0);\n        break;\n      case SKEW_Y:\n        matrix = createSkewYMatrix(arg0);\n        break;\n      case 'matrix':\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\n        break;\n    }\n\n    // snapshot current matrix into matrices array\n    matrices.push(matrix);\n  }\n\n  return multiplyTransformMatrixArray(matrices);\n}\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { parseTransformAttribute } from './parseTransformAttribute';\nimport { CENTER, LEFT, RIGHT, NONE, FILL, STROKE } from '../constants';\n\nexport function normalizeValue(\n  attr: string,\n  value: any,\n  parentAttributes: Record<string, any>,\n  fontSize: number,\n): string | null | boolean | number[] | number {\n  const isArray = Array.isArray(value);\n  let parsed: number | number[];\n  let ouputValue: string | null | boolean | number[] | number = value;\n  if ((attr === FILL || attr === STROKE) && value === NONE) {\n    ouputValue = '';\n  } else if (attr === 'strokeUniform') {\n    return value === 'non-scaling-stroke';\n  } else if (attr === 'strokeDashArray') {\n    if (value === NONE) {\n      ouputValue = null;\n    } else {\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n    }\n  } else if (attr === 'transformMatrix') {\n    if (parentAttributes && parentAttributes.transformMatrix) {\n      ouputValue = multiplyTransformMatrices(\n        parentAttributes.transformMatrix,\n        parseTransformAttribute(value),\n      );\n    } else {\n      ouputValue = parseTransformAttribute(value);\n    }\n  } else if (attr === 'visible') {\n    ouputValue = value !== NONE && value !== 'hidden';\n    // display=none on parent element always takes precedence over child element\n    if (parentAttributes && parentAttributes.visible === false) {\n      ouputValue = false;\n    }\n  } else if (attr === 'opacity') {\n    ouputValue = parseFloat(value);\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n      ouputValue *= parentAttributes.opacity as number;\n    }\n  } else if (attr === 'textAnchor' /* text-anchor */) {\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\n  } else if (attr === 'charSpacing') {\n    // parseUnit returns px and we convert it to em\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\n  } else if (attr === 'paintFirst') {\n    const fillIndex = value.indexOf(FILL);\n    const strokeIndex = value.indexOf(STROKE);\n    ouputValue = FILL;\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n      ouputValue = STROKE;\n    } else if (fillIndex === -1 && strokeIndex > -1) {\n      ouputValue = STROKE;\n    }\n  } else if (\n    attr === 'href' ||\n    attr === 'xlink:href' ||\n    attr === 'font' ||\n    attr === 'id'\n  ) {\n    return value;\n  } else if (attr === 'imageSmoothing') {\n    return value === 'optimizeQuality';\n  } else {\n    parsed = isArray\n      ? (value as string[]).map(parseUnit)\n      : parseUnit(value, fontSize);\n  }\n\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\n}\n","import { parseUnit } from '../util/misc/svgParsing';\nimport { reFontDeclaration } from './constants';\n\n/**\n * Parses a short font declaration, building adding its properties to a style object\n * @static\n * @function\n * @memberOf fabric\n * @param {String} value font declaration\n * @param {Object} oStyle definition\n */\nexport function parseFontDeclaration(\n  value: string,\n  oStyle: Record<string, any>,\n): void {\n  const match = value.match(reFontDeclaration);\n\n  if (!match) {\n    return;\n  }\n  const fontStyle = match[1],\n    // font variant is not used\n    // fontVariant = match[2],\n    fontWeight = match[3],\n    fontSize = match[4],\n    lineHeight = match[5],\n    fontFamily = match[6];\n\n  if (fontStyle) {\n    oStyle.fontStyle = fontStyle;\n  }\n  if (fontWeight) {\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\n      ? fontWeight\n      : parseFloat(fontWeight);\n  }\n  if (fontSize) {\n    oStyle.fontSize = parseUnit(fontSize);\n  }\n  if (fontFamily) {\n    oStyle.fontFamily = fontFamily;\n  }\n  if (lineHeight) {\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n  }\n}\n","/**\n * Takes a style object and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleObject(\n  style: Record<string, any>,\n  oStyle: Record<string, any>,\n): void {\n  Object.entries(style).forEach(([prop, value]) => {\n    if (value === undefined) {\n      return;\n    }\n    oStyle[prop.toLowerCase()] = value;\n  });\n}\n","/**\n * Takes a style string and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleString(\n  style: string,\n  oStyle: Record<string, any>,\n): void {\n  style\n    .replace(/;\\s*$/, '')\n    .split(';')\n    .forEach((chunk) => {\n      if (!chunk) return;\n      const [attr, value] = chunk.split(':');\n      oStyle[attr.trim().toLowerCase()] = value.trim();\n    });\n}\n","import { parseStyleObject } from './parseStyleObject';\nimport { parseStyleString } from './parseStyleString';\n\n/**\n * Parses \"style\" attribute, retuning an object with values\n * @static\n * @memberOf fabric\n * @param {SVGElement} element Element to parse\n * @return {Object} Objects with values parsed from style attribute of an element\n */\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\n  const oStyle: Record<string, any> = {},\n    style = element.getAttribute('style');\n\n  if (!style) {\n    return oStyle;\n  }\n\n  if (typeof style === 'string') {\n    parseStyleString(style, oStyle);\n  } else {\n    parseStyleObject(style, oStyle);\n  }\n\n  return oStyle;\n}\n","import { Color } from '../color/Color';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject } from '../shapes/Object/FabricObject';\n\nconst colorAttributesMap = {\n  stroke: 'strokeOpacity',\n  fill: 'fillOpacity',\n};\n\n/**\n * @private\n * @param {Object} attributes Array of attributes to parse\n */\n\nexport function setStrokeFillOpacity(\n  attributes: Record<string, any>,\n): Record<string, any> {\n  const defaults = FabricObject.getDefaults();\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\n    if (\n      typeof attributes[colorAttr] === 'undefined' ||\n      attributes[attr] === ''\n    ) {\n      return;\n    }\n    if (typeof attributes[attr] === 'undefined') {\n      if (!defaults[attr]) {\n        return;\n      }\n      attributes[attr] = defaults[attr];\n    }\n    if (attributes[attr].indexOf('url(') === 0) {\n      return;\n    }\n    const color = new Color(attributes[attr]);\n    attributes[attr] = color\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\n      .toRgba();\n  });\n  return attributes;\n}\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\nimport { normalizeAttr } from './normalizeAttr';\nimport { normalizeValue } from './normalizeValue';\nimport { parseFontDeclaration } from './parseFontDeclaration';\nimport { parseStyleAttribute } from './parseStyleAttribute';\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\nimport type { CSSRules } from './typedefs';\n\n/**\n * Returns an object of attributes' name/value, given element and an array of attribute names;\n * Parses parent \"g\" nodes recursively upwards.\n * @param {SVGElement | HTMLElement} element Element to parse\n * @param {Array} attributes Array of attributes to parse\n * @return {Object} object containing parsed attributes' names/values\n */\nexport function parseAttributes(\n  element: HTMLElement | null,\n  attributes: string[],\n  cssRules?: CSSRules,\n): Record<string, any> {\n  if (!element) {\n    return {};\n  }\n\n  let parentAttributes: Record<string, string> = {},\n    fontSize: number,\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\n\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n  if (\n    element.parentNode &&\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\n  ) {\n    parentAttributes = parseAttributes(\n      element.parentElement,\n      attributes,\n      cssRules,\n    );\n    if (parentAttributes.fontSize) {\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\n    }\n  }\n\n  const ownAttributes: Record<string, string> = {\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\n      const value = element.getAttribute(attr);\n      if (value) {\n        memo[attr] = value;\n      }\n      return memo;\n    }, {}),\n    // add values parsed from style, which take precedence over attributes\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n    ...getGlobalStylesForElement(element, cssRules),\n    ...parseStyleAttribute(element),\n  };\n\n  if (ownAttributes[cPath]) {\n    element.setAttribute(cPath, ownAttributes[cPath]);\n  }\n  if (ownAttributes[fSize]) {\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n    ownAttributes[fSize] = `${fontSize}`;\n  }\n\n  // this should have its own complex type\n  const normalizedStyle: Record<\n    string,\n    string | boolean | number | number[] | null\n  > = {};\n  for (const attr in ownAttributes) {\n    const normalizedAttr = normalizeAttr(attr);\n    const normalizedValue = normalizeValue(\n      normalizedAttr,\n      ownAttributes[attr],\n      parentAttributes,\n      fontSize!,\n    );\n    normalizedStyle[normalizedAttr] = normalizedValue;\n  }\n  if (normalizedStyle && normalizedStyle.font) {\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\n  }\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\n  return svgValidParentsRegEx.test(element.nodeName)\n    ? mergedAttrs\n    : setStrokeFillOpacity(mergedAttrs);\n}\n","import { kRect } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueRectProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedRectProps\n  extends SerializedObjectProps,\n    UniqueRectProps {}\n\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\n\nconst RECT_PROPS = ['rx', 'ry'] as const;\n\nexport class Rect<\n    Props extends TOptions<RectProps> = Partial<RectProps>,\n    SProps extends SerializedRectProps = SerializedRectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements RectProps\n{\n  /**\n   * Horizontal border radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical border radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Rect';\n\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\n\n  static ownDefaults = rectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Rect.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Rect.ownDefaults);\n    this.setOptions(options);\n    this._initRxRy();\n  }\n  /**\n   * Initializes rx/ry attributes\n   * @private\n   */\n  _initRxRy() {\n    const { rx, ry } = this;\n    if (rx && !ry) {\n      this.ry = rx;\n    } else if (ry && !rx) {\n      this.rx = ry;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const { width: w, height: h } = this;\n    const x = -w / 2;\n    const y = -h / 2;\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\n    const isRounded = rx !== 0 || ry !== 0;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x + rx, y);\n\n    ctx.lineTo(x + w - rx, y);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w - kRect * rx,\n        y,\n        x + w,\n        y + kRect * ry,\n        x + w,\n        y + ry,\n      );\n\n    ctx.lineTo(x + w, y + h - ry);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w,\n        y + h - kRect * ry,\n        x + w - kRect * rx,\n        y + h,\n        x + w - rx,\n        y + h,\n      );\n\n    ctx.lineTo(x + rx, y + h);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + kRect * rx,\n        y + h,\n        x,\n        y + h - kRect * ry,\n        x,\n        y + h - ry,\n      );\n\n    ctx.lineTo(x, y + ry);\n    isRounded &&\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\n\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { width, height, rx, ry } = this;\n    return [\n      '<rect ',\n      'COMMON_PARTS',\n      `x=\"${-width / 2}\" y=\"${\n        -height / 2\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\n   * @static\n   * @memberOf Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'rx',\n    'ry',\n    'width',\n    'height',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns {@link Rect} instance from an SVG element\n   * @static\n   * @memberOf Rect\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      left = 0,\n      top = 0,\n      width = 0,\n      height = 0,\n      visible = true,\n      ...restOfparsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n\n    return new this({\n      ...options,\n      ...restOfparsedAttributes,\n      left,\n      top,\n      width,\n      height,\n      visible: Boolean(visible && width && height),\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Rect);\nclassRegistry.setSVGClass(Rect);\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\nexport const LAYOUT_TYPE_ADDED = 'added';\nexport const LAYOUT_TYPE_REMOVED = 'removed';\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\n","import { Point, ZERO } from '../../Point';\nimport type { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport {\n  calcPlaneChangeMatrix,\n  sendVectorToPlane,\n} from '../../util/misc/planeChange';\n\n/**\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\n * but also belong to the active selection.\n */\nexport const getObjectBounds = (\n  destinationGroup: Group,\n  object: FabricObject,\n): Point[] => {\n  const {\n    strokeUniform,\n    strokeWidth,\n    width,\n    height,\n    group: currentGroup,\n  } = object;\n  const t =\n    currentGroup && currentGroup !== destinationGroup\n      ? calcPlaneChangeMatrix(\n          currentGroup.calcTransformMatrix(),\n          destinationGroup.calcTransformMatrix(),\n        )\n      : null;\n  const objectCenter = t\n    ? object.getRelativeCenterPoint().transform(t)\n    : object.getRelativeCenterPoint();\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\n  const strokeUniformVector =\n    strokeUniform && accountForStroke\n      ? sendVectorToPlane(\n          new Point(strokeWidth, strokeWidth),\n          undefined,\n          destinationGroup.calcTransformMatrix(),\n        )\n      : ZERO;\n  const scalingStrokeWidth =\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\n  const sizeVector = sizeAfterTransform(\n    width + scalingStrokeWidth,\n    height + scalingStrokeWidth,\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true),\n  )\n    .add(strokeUniformVector)\n    .scalarDivide(2);\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\n};\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @TODO/fix: if this method is calcResult, should calc unconditionally.\n   * the condition to not calc should be evaluated by the layoutManager.\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout({ type, prevStrategy, strategy }: StrictLayoutContext) {\n    return (\n      type === LAYOUT_TYPE_INITIALIZATION ||\n      type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!prevStrategy && strategy !== prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext,\n  ): LayoutStrategyResult | undefined {\n    const { type, target } = context;\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), []),\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n","import type { StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to fit target's objects.\n */\nexport class FitContentLayout extends LayoutStrategy {\n  static readonly type = 'fit-content';\n\n  /**\n   * @override layout on all triggers\n   * Override at will\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return true;\n  }\n}\n\nclassRegistry.setClass(FitContentLayout);\n","import { Point } from '../Point';\nimport {\n  CENTER,\n  CHANGED,\n  MODIFIED,\n  MODIFY_PATH,\n  MODIFY_POLY,\n  MOVING,\n  RESIZING,\n  ROTATING,\n  SCALING,\n  SKEWING,\n  iMatrix,\n} from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TModificationEvents } from '../EventTypeDefs';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  protected declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    if (layoutResult) {\n      this.commitLayout(strictContext, layoutResult);\n    }\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * Attach handlers for events that we know will invalidate the layout when\n   * performed on child objects ( general transforms ).\n   * Returns the disposers for later unsubscribing and cleanup\n   * @param {FabricObject} object\n   * @param {RegistrationContext & Partial<StrictLayoutContext>} context\n   * @returns {VoidFunction[]} disposers remove the handlers\n   */\n  protected attachHandlers(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): VoidFunction[] {\n    const { target } = context;\n    return (\n      [\n        MODIFIED,\n        MOVING,\n        RESIZING,\n        ROTATING,\n        SCALING,\n        SKEWING,\n        CHANGED,\n        MODIFY_POLY,\n        MODIFY_PATH,\n      ] as (TModificationEvents & 'modified')[]\n    ).map((key) =>\n      object.on(key, (e) =>\n        this.performLayout(\n          key === MODIFIED\n            ? {\n                type: LAYOUT_TYPE_OBJECT_MODIFIED,\n                trigger: key,\n                e,\n                target,\n              }\n            : {\n                type: LAYOUT_TYPE_OBJECT_MODIFYING,\n                trigger: key,\n                e,\n                target,\n              },\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Subscribe an object to transform events that will trigger a layout change on the parent\n   * This is important only for interactive groups.\n   * @param object\n   * @param context\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    this.unsubscribe(object, context);\n    const disposers = this.attachHandlers(object, context);\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    _context?: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target, type } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    // @TODO: gate the registration when the group is interactive\n    if (type === LAYOUT_TYPE_INITIALIZATION || type === LAYOUT_TYPE_ADDED) {\n      this.subscribeTargets(context);\n    } else if (type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject(\n        (object) =>\n          (object as Group).layoutManager &&\n          (object as Group).layoutManager.performLayout({\n            ...tricklingContext,\n            bubbles: false,\n            target: object as Group,\n          }),\n      );\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext,\n  ): Required<LayoutResult> | undefined {\n    const { target, strategy, type } = context;\n\n    const result = strategy.calcLayoutResult(context, target.getObjects());\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true,\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set('dirty', true);\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>,\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject,\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult,\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.parent;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n    target.set('dirty', true);\n  }\n\n  dispose() {\n    const { _subscriptions } = this;\n    _subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    _subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\nimport { createCollectionMixin } from '../Collection';\nimport type {\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n  Abortable,\n} from '../typedefs';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n} from '../util/misc/matrix';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\nimport { FabricObject } from './Object/FabricObject';\nimport { Rect } from './Rect';\nimport { classRegistry } from '../ClassRegistry';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport { log } from '../util/internals/console';\nimport type {\n  ImperativeLayoutOptions,\n  LayoutBeforeEvent,\n  LayoutAfterEvent,\n} from '../LayoutManager/types';\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\nimport type { FitContentLayout } from '../LayoutManager';\nimport type { DrawContext } from './Object/Object';\n\n/**\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\n */\nclass NoopLayoutManager extends LayoutManager {\n  performLayout() {}\n}\n\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\n  'layout:before': LayoutBeforeEvent;\n  'layout:after': LayoutAfterEvent;\n}\n\nexport interface GroupOwnProps {\n  subTargetCheck: boolean;\n  interactive: boolean;\n}\n\nexport interface SerializedGroupProps\n  extends SerializedObjectProps,\n    GroupOwnProps {\n  objects: SerializedObjectProps[];\n  layoutManager: SerializedLayoutManager;\n}\n\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\n  layoutManager: LayoutManager;\n}\n\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\n  strokeWidth: 0,\n  subTargetCheck: false,\n  interactive: false,\n};\n\n/**\n * @fires object:added\n * @fires object:removed\n * @fires layout:before\n * @fires layout:after\n */\nexport class Group\n  extends createCollectionMixin(\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>,\n  )\n  implements GroupProps\n{\n  /**\n   * Used to optimize performance\n   * set to `false` if you don't need contained objects to be targets of events\n   * @default\n   * @type boolean\n   */\n  declare subTargetCheck: boolean;\n\n  /**\n   * Used to allow targeting of object inside groups.\n   * set to true if you want to select an object inside a group.\\\n   * **REQUIRES** `subTargetCheck` set to true\n   * This will be not removed but slowly replaced with a method setInteractive\n   * that will take care of enabling subTargetCheck and necessary object events.\n   * There is too much attached to group interactivity to just be evaluated by a\n   * boolean in the code\n   * @default\n   * @deprecated\n   * @type boolean\n   */\n  declare interactive: boolean;\n\n  declare layoutManager: LayoutManager;\n\n  /**\n   * Used internally to optimize performance\n   * Once an object is selected, instance is rendered without the selected object.\n   * This way instance is cached only once for the entire interaction with the selected object.\n   * @private\n   */\n  protected _activeObjects: FabricObject[] = [];\n\n  static type = 'Group';\n\n  static ownDefaults: Record<string, any> = groupDefaultValues;\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Group.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {FabricObject[]} [objects] instance objects\n   * @param {Object} [options] Options object\n   */\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\n    super();\n    Object.assign(this, Group.ownDefaults);\n    this.setOptions(options);\n    this.groupInit(objects, options);\n  }\n\n  /**\n   * Shared code between group and active selection\n   * Meant to be used by the constructor.\n   */\n  protected groupInit(\n    objects: FabricObject[],\n    options: {\n      layoutManager?: LayoutManager;\n      top?: number;\n      left?: number;\n    },\n  ) {\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\n\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\n      this,\n      true,\n    );\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\n      this,\n      false,\n    );\n\n    this.forEachObject((object) => {\n      this.enterGroup(object, false);\n    });\n\n    // perform initial layout\n    this.layoutManager = options.layoutManager ?? new LayoutManager();\n    this.layoutManager.performLayout({\n      type: LAYOUT_TYPE_INITIALIZATION,\n      target: this,\n      targets: [...objects],\n      // @TODO remove this concept from the layout manager.\n      // Layout manager will calculate the correct position,\n      // group options can override it later.\n      x: options.left,\n      y: options.top,\n    });\n  }\n\n  /**\n   * Checks if object can enter group and logs relevant warnings\n   * @private\n   * @param {FabricObject} object\n   * @returns\n   */\n  canEnterGroup(object: FabricObject) {\n    if (object === this || this.isDescendantOf(object)) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'Group: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    } else if (this._objects.indexOf(object) !== -1) {\n      // is already in the objects array\n      log(\n        'error',\n        'Group: duplicate objects are not supported inside group, this call has no effect',\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Override this method to enhance performance (for groups with a lot of objects).\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\n   * @private\n   */\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\n    return objects.filter((object, index, array) => {\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\n    });\n  }\n\n  /**\n   * Add objects\n   * @param {...FabricObject[]} objects\n   */\n  add(...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.add(...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Inserts an object into collection at specified index\n   * @param {FabricObject[]} objects Object to insert\n   * @param {Number} index Index to insert object at\n   */\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.insertAt(index, ...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Remove objects\n   * @param {...FabricObject[]} objects\n   * @returns {FabricObject[]} removed objects\n   */\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\n    return removed;\n  }\n\n  _onObjectAdded(object: FabricObject) {\n    this.enterGroup(object, true);\n    this.fire('object:added', { target: object });\n    object.fire('added', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\n    this.exitGroup(object, removeParentTransform);\n    this.fire('object:removed', { target: object });\n    object.fire('removed', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    this.layoutManager.performLayout({\n      type,\n      targets,\n      target: this,\n    });\n  }\n\n  _onStackOrderChanged() {\n    this._set('dirty', true);\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const prev = this[key as keyof this];\n    super._set(key, value);\n    if (key === 'canvas' && prev !== value) {\n      (this._objects || []).forEach((object) => {\n        object._set(key, value);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return this.subTargetCheck;\n  }\n\n  /**\n   * Remove all objects\n   * @returns {FabricObject[]} removed objects\n   */\n  removeAll() {\n    this._activeObjects = [];\n    return this.remove(...this._objects);\n  }\n\n  /**\n   * keeps track of the selected objects\n   * @private\n   */\n  __objectSelectionMonitor<T extends boolean>(\n    selected: T,\n    {\n      target: object,\n    }: ObjectEvents[T extends true ? 'selected' : 'deselected'],\n  ) {\n    const activeObjects = this._activeObjects;\n    if (selected) {\n      activeObjects.push(object);\n      this._set('dirty', true);\n    } else if (activeObjects.length > 0) {\n      const index = activeObjects.indexOf(object);\n      if (index > -1) {\n        activeObjects.splice(index, 1);\n        this._set('dirty', true);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} watch\n   * @param {FabricObject} object\n   */\n  _watchObject(watch: boolean, object: FabricObject) {\n    //  make sure we listen only once\n    watch && this._watchObject(false, object);\n    if (watch) {\n      object.on('selected', this.__objectSelectionTracker);\n      object.on('deselected', this.__objectSelectionDisposer);\n    } else {\n      object.off('selected', this.__objectSelectionTracker);\n      object.off('deselected', this.__objectSelectionDisposer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object.group && object.group.remove(object);\n    object._set('parent', this);\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    if (removeParentTransform) {\n      // can this be converted to utils (sendObjectToPlane)?\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          invertTransform(this.calcTransformMatrix()),\n          object.calcTransformMatrix(),\n        ),\n      );\n    }\n    this._shouldSetNestedCoords() && object.setCoords();\n    object._set('group', this);\n    object._set('canvas', this.canvas);\n    this._watchObject(true, object);\n    const activeObject =\n      this.canvas &&\n      this.canvas.getActiveObject &&\n      this.canvas.getActiveObject();\n    // if we are adding the activeObject in a group\n    if (\n      activeObject &&\n      (activeObject === object || object.isDescendantOf(activeObject))\n    ) {\n      this._activeObjects.push(object);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    object._set('parent', undefined);\n    object._set('canvas', undefined);\n  }\n\n  /**\n   * Executes the inner fabric logic of exiting a group.\n   * - Stop watching the object\n   * - Remove the object from the optimization map this._activeObjects\n   * - unset the group property of the object\n   * @protected\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object._set('group', undefined);\n    if (!removeParentTransform) {\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          this.calcTransformMatrix(),\n          object.calcTransformMatrix(),\n        ),\n      );\n      object.setCoords();\n    }\n    this._watchObject(false, object);\n    const index =\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\n    if (index > -1) {\n      this._activeObjects.splice(index, 1);\n    }\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group is already cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\n    if (ownCache) {\n      for (let i = 0; i < this._objects.length; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          this.ownCaching = false;\n          return false;\n        }\n      }\n    }\n    return ownCache;\n  }\n\n  /**\n   * Check if this object or a child object will cast a shadow\n   * @return {Boolean}\n   */\n  willDrawShadow() {\n    if (super.willDrawShadow()) {\n      return true;\n    }\n    for (let i = 0; i < this._objects.length; i++) {\n      if (this._objects[i].willDrawShadow()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if instance or its group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache(): boolean {\n    return this.ownCaching || (!!this.parent && this.parent.isOnACache());\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawObject(\n    ctx: CanvasRenderingContext2D,\n    forClipping: boolean | undefined,\n    context: DrawContext,\n  ) {\n    this._renderBackground(ctx);\n    for (let i = 0; i < this._objects.length; i++) {\n      const obj = this._objects[i];\n      // TODO: handle rendering edge case somehow\n      if (this.canvas?.preserveObjectStacking && obj.group !== this) {\n        ctx.save();\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\n        obj.render(ctx);\n        ctx.restore();\n      } else if (obj.group === this) {\n        obj.render(ctx);\n      }\n    }\n    this._drawClipPath(ctx, this.clipPath, context);\n  }\n\n  /**\n   * @override\n   * @return {Boolean}\n   */\n  setCoords() {\n    super.setCoords();\n    this._shouldSetNestedCoords() &&\n      this.forEachObject((object) => object.setCoords());\n  }\n\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\n    this.layoutManager.performLayout({\n      target: this,\n      type: LAYOUT_TYPE_IMPERATIVE,\n      ...options,\n    });\n  }\n\n  /**\n   * Renders instance on a given context\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    this._transformDone = true;\n    super.render(ctx);\n    this._transformDone = false;\n  }\n\n  /**\n   *\n   * @private\n   * @param {'toObject'|'toDatalessObject'} [method]\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {FabricObject[]} serialized objects\n   */\n  __serializeObjects(\n    method: 'toObject' | 'toDatalessObject',\n    propertiesToInclude?: string[],\n  ) {\n    const _includeDefaultValues = this.includeDefaultValues;\n    return this._objects\n      .filter(function (obj) {\n        return !obj.excludeFromExport;\n      })\n      .map(function (obj) {\n        const originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        const data = obj[method || 'toObject'](propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        // delete data.version;\n        return data;\n      });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<\n      GroupProps & TClassProperties<this>,\n      keyof SerializedGroupProps\n    >,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\n    const layoutManager = this.layoutManager.toObject();\n\n    return {\n      ...super.toObject([\n        'subTargetCheck',\n        'interactive',\n        ...propertiesToInclude,\n      ]),\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\n        ? { layoutManager }\n        : {}),\n      objects: this.__serializeObjects(\n        'toObject',\n        propertiesToInclude as string[],\n      ),\n    };\n  }\n\n  toString() {\n    return `#<Group: (${this.complexity()})>`;\n  }\n\n  dispose() {\n    this.layoutManager.unsubscribeTargets({\n      targets: this.getObjects(),\n      target: this,\n    });\n    this._activeObjects = [];\n    this.forEachObject((object) => {\n      this._watchObject(false, object);\n      object.dispose();\n    });\n    super.dispose();\n  }\n\n  /**\n   * @private\n   */\n  _createSVGBgRect(reviver?: TSVGReviver) {\n    if (!this.backgroundColor) {\n      return '';\n    }\n    const fillStroke = Rect.prototype._toSVG.call(this);\n    const commons = fillStroke.indexOf('COMMON_PARTS');\n    fillStroke[commons] = 'for=\"group\" ';\n    const markup = fillStroke.join('');\n    return reviver ? reviver(markup) : markup;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  _toSVG(reviver?: TSVGReviver) {\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n    }\n    svgString.push('</g>\\n');\n    return svgString;\n  }\n\n  /**\n   * Returns styles-string for svg-export, specific version for group\n   * @return {String}\n   */\n  getSvgStyles(): string {\n    const opacity =\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\n          ? `opacity: ${this.opacity};`\n          : '',\n      visibility = this.visible ? '' : ' visibility: hidden;';\n    return [opacity, this.getSvgFilter(), visibility].join('');\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const svgString = [];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n    }\n    return this._createBaseClipPathSVGMarkup(svgString, {\n      reviver,\n    });\n  }\n\n  /**\n   * @todo support loading from svg\n   * @private\n   * @static\n   * @memberOf Group\n   * @param {Object} object Object to create a group from\n   * @returns {Promise<Group>}\n   */\n  static fromObject<T extends TOptions<SerializedGroupProps>>(\n    { type, objects = [], layoutManager, ...options }: T,\n    abortable?: Abortable,\n  ) {\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, abortable),\n      enlivenObjectEnlivables(options, abortable),\n    ]).then(([objects, hydratedOptions]) => {\n      const group = new this(objects, {\n        ...options,\n        ...hydratedOptions,\n        layoutManager: new NoopLayoutManager(),\n      });\n      if (layoutManager) {\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\n          layoutManager.type,\n        );\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\n          layoutManager.strategy,\n        );\n        group.layoutManager = new layoutClass(new strategyClass());\n      } else {\n        group.layoutManager = new LayoutManager();\n      }\n      group.layoutManager.subscribeTargets({\n        type: LAYOUT_TYPE_INITIALIZATION,\n        target: group,\n        targets: group.getObjects(),\n      });\n      group.setCoords();\n      return group;\n    });\n  }\n}\n\nclassRegistry.setClass(Group);\n","import type { GroupProps } from '../../shapes/Group';\nimport { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\n\n/**\n * TODO experiment with different layout manager and svg results ( fixed fit content )\n * Groups SVG elements (usually those retrieved from SVG document)\n * @static\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\n * @return {FabricObject | Group}\n */\nexport const groupSVGElements = (\n  elements: FabricObject[],\n  options?: Partial<GroupProps>,\n) => {\n  if (elements && elements.length === 1) {\n    return elements[0];\n  }\n  return new Group(elements, options);\n};\n","import type { TSize } from '../../typedefs';\n\n/**\n * Finds the scale for the object source to fit inside the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to fit into destination\n */\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\n  Math.min(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n\n/**\n * Finds the scale for the object source to cover entirely the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to cover destination\n */\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\n  Math.max(\n    destination.width / source.width,\n    destination.height / source.height,\n  );\n","import { reNum } from '../../parser/constants';\n\nconst commaWsp = `\\\\s*,?\\\\s*`;\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n * p is a number that is preceded by an arbitary number of spaces, maybe 0,\n * a comma or not, and then possibly more spaces or not.\n */\nconst p = `${commaWsp}(${reNum})`;\n\n// const reMoveToCommand = `(M) ?(?:${p}${p} ?)+`;\n\n// const reLineCommand = `(L) ?(?:${p}${p} ?)+`;\n\n// const reHorizontalLineCommand = `(H) ?(?:${p} ?)+`;\n\n// const reVerticalLineCommand = `(V) ?(?:${p} ?)+`;\n\n// const reClosePathCommand = String.raw`(Z)\\s*`;\n\n// const reCubicCurveCommand = `(C) ?(?:${p}${p}${p}${p}${p}${p} ?)+`;\n\n// const reCubicCurveShortcutCommand = `(S) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveCommand = `(Q) ?(?:${p}${p}${p}${p} ?)+`;\n\n// const reQuadraticCurveShortcutCommand = `(T) ?(?:${p}${p} ?)+`;\n\nexport const reArcCommandPoints = `${p}${p}${p}${commaWsp}([01])${commaWsp}([01])${p}${p}`;\n// const reArcCommand = `(A) ?(?:${reArcCommandPoints} ?)+`;\n\n// export const rePathCommandGroups =\n//   `(?:(?:${reMoveToCommand})` +\n//   `|(?:${reLineCommand})` +\n//   `|(?:${reHorizontalLineCommand})` +\n//   `|(?:${reVerticalLineCommand})` +\n//   `|(?:${reClosePathCommand})` +\n//   `|(?:${reCubicCurveCommand})` +\n//   `|(?:${reCubicCurveShortcutCommand})` +\n//   `|(?:${reQuadraticCurveCommand})` +\n//   `|(?:${reQuadraticCurveShortcutCommand})` +\n//   `|(?:${reArcCommand}))`;\n\nexport const rePathCommand = '[mzlhvcsqta][^mzlhvcsqta]*';\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport { halfPI, PiBy180 } from '../../constants';\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\nimport { cos } from '../misc/cos';\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\nimport { sin } from '../misc/sin';\nimport { toFixed } from '../misc/toFixed';\nimport type {\n  TCurveInfo,\n  TComplexPathData,\n  TParsedAbsoluteCubicCurveCommand,\n  TPathSegmentInfo,\n  TPointAngle,\n  TSimpleParsedCommand,\n  TSimplePathData,\n  TPathSegmentCommandInfo,\n  TComplexParsedCommand,\n  TPathSegmentInfoCommon,\n  TEndPathInfo,\n  TParsedArcCommand,\n  TComplexParsedCommandType,\n} from './typedefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { reArcCommandPoints, rePathCommand } from './regex';\nimport { reNum } from '../../parser/constants';\n\n/**\n * Commands that may be repeated\n */\nconst repeatedCommands: Record<string, 'l' | 'L'> = {\n  m: 'l',\n  M: 'L',\n};\n\n/**\n * Convert an arc of a rotated ellipse to a Bezier Curve\n * @param {TRadian} theta1 start of the arc\n * @param {TRadian} theta2 end of the arc\n * @param cosTh cosine of the angle of rotation\n * @param sinTh sine of the angle of rotation\n * @param rx x-axis radius (before rotation)\n * @param ry y-axis radius (before rotation)\n * @param cx1 center x of the ellipse\n * @param cy1 center y of the ellipse\n * @param mT\n * @param fromX starting point of arc x\n * @param fromY starting point of arc y\n */\nconst segmentToBezier = (\n  theta1: TRadian,\n  theta2: TRadian,\n  cosTh: number,\n  sinTh: number,\n  rx: number,\n  ry: number,\n  cx1: number,\n  cy1: number,\n  mT: number,\n  fromX: number,\n  fromY: number,\n): TParsedAbsoluteCubicCurveCommand => {\n  const costh1 = cos(theta1),\n    sinth1 = sin(theta1),\n    costh2 = cos(theta2),\n    sinth2 = sin(theta2),\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\n\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n};\n\n/**\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n * http://mozilla.org/MPL/2.0/\n * @param toX\n * @param toY\n * @param rx\n * @param ry\n * @param {number} large 0 or 1 flag\n * @param {number} sweep 0 or 1 flag\n * @param rotateX\n */\nconst arcToSegments = (\n  toX: number,\n  toY: number,\n  rx: number,\n  ry: number,\n  large: number,\n  sweep: number,\n  rotateX: TRadian,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  let fromX = 0,\n    fromY = 0,\n    root = 0;\n  const PI = Math.PI,\n    theta = rotateX * PiBy180,\n    sinTheta = sin(theta),\n    cosTh = cos(theta),\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\n    rx2 = rx ** 2,\n    ry2 = ry ** 2,\n    py2 = py ** 2,\n    px2 = px ** 2,\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\n  let _rx = Math.abs(rx);\n  let _ry = Math.abs(ry);\n\n  if (pl < 0) {\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\n    _rx *= s;\n    _ry *= s;\n  } else {\n    root =\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n  }\n\n  const cx = (root * _rx * py) / _ry,\n    cy = (-root * _ry * px) / _rx,\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\n  let dtheta = calcVectorAngle(\n    (px - cx) / _rx,\n    (py - cy) / _ry,\n    (-px - cx) / _rx,\n    (-py - cy) / _ry,\n  );\n\n  if (sweep === 0 && dtheta > 0) {\n    dtheta -= 2 * PI;\n  } else if (sweep === 1 && dtheta < 0) {\n    dtheta += 2 * PI;\n  }\n\n  // Convert into cubic bezier segments <= 90deg\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\n    result = [],\n    mDelta = dtheta / segments,\n    mT =\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\n      Math.sin(mDelta / 2);\n  let th3 = mTheta + mDelta;\n\n  for (let i = 0; i < segments; i++) {\n    result[i] = segmentToBezier(\n      mTheta,\n      th3,\n      cosTh,\n      sinTheta,\n      _rx,\n      _ry,\n      cx1,\n      cy1,\n      mT,\n      fromX,\n      fromY,\n    );\n    fromX = result[i][5];\n    fromY = result[i][6];\n    mTheta = th3;\n    th3 += mDelta;\n  }\n  return result;\n};\n\n/**\n * @private\n * Calculate the angle between two vectors\n * @param ux u endpoint x\n * @param uy u endpoint y\n * @param vx v endpoint x\n * @param vy v endpoint y\n */\nconst calcVectorAngle = (\n  ux: number,\n  uy: number,\n  vx: number,\n  vy: number,\n): TRadian => {\n  const ta = Math.atan2(uy, ux),\n    tb = Math.atan2(vy, vx);\n  if (tb >= ta) {\n    return tb - ta;\n  } else {\n    return 2 * Math.PI - (ta - tb);\n  }\n};\n\n// functions for the Cubic beizer\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\nconst CB1 = (t: number) => t ** 3;\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\nconst CB4 = (t: number) => (1 - t) ** 3;\n\n/**\n * Calculate bounding box of a cubic Bezier curve\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n * @param {number} begx starting point\n * @param {number} begy\n * @param {number} cp1x first control point\n * @param {number} cp1y\n * @param {number} cp2x second control point\n * @param {number} cp2y\n * @param {number} endx end of bezier\n * @param {number} endy\n * @return {TRectBounds} the rectangular bounds\n */\nexport function getBoundsOfCurve(\n  begx: number,\n  begy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  endx: number,\n  endy: number,\n): TRectBounds {\n  let argsString: string;\n  if (config.cachesBoundsOfCurve) {\n    // eslint-disable-next-line\n    argsString = [...arguments].join();\n    if (cache.boundsOfCurveCache[argsString]) {\n      return cache.boundsOfCurveCache[argsString];\n    }\n  }\n\n  const sqrt = Math.sqrt,\n    abs = Math.abs,\n    tvalues = [],\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\n      [0, 0],\n      [0, 0],\n    ];\n\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\n  let c = 3 * cp1x - 3 * begx;\n\n  for (let i = 0; i < 2; ++i) {\n    if (i > 0) {\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\n      c = 3 * cp1y - 3 * begy;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      const t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    const b2ac = b * b - 4 * c * a;\n    if (b2ac < 0) {\n      continue;\n    }\n    const sqrtb2ac = sqrt(b2ac);\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n  const iterator = getPointOnCubicBezierIterator(\n    begx,\n    begy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    endx,\n    endy,\n  );\n  while (j--) {\n    const { x, y } = iterator(tvalues[j]);\n    bounds[0][j] = x;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = begx;\n  bounds[1][jlen] = begy;\n  bounds[0][jlen + 1] = endx;\n  bounds[1][jlen + 1] = endy;\n  const result: TRectBounds = [\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\n  ];\n  if (config.cachesBoundsOfCurve) {\n    cache.boundsOfCurveCache[argsString!] = result;\n  }\n  return result;\n}\n\n/**\n * Converts arc to a bunch of cubic Bezier curves\n * @param {number} fx starting point x\n * @param {number} fy starting point y\n * @param {TParsedArcCommand} coords Arc command\n */\nexport const fromArcToBeziers = (\n  fx: number,\n  fy: number,\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand,\n): TParsedAbsoluteCubicCurveCommand[] => {\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\n    segsNorm[i][1] += fx;\n    segsNorm[i][2] += fy;\n    segsNorm[i][3] += fx;\n    segsNorm[i][4] += fy;\n    segsNorm[i][5] += fx;\n    segsNorm[i][6] += fy;\n  }\n  return segsNorm;\n};\n\n/**\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\n * Simplification consist of:\n * - All commands converted to absolute (lowercase to uppercase)\n * - S converted to C\n * - T converted to Q\n * - A converted to C\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\n * TODO: figure out how to remove the type assertions in a nice way\n */\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\n  // x and y represent the last point of the path, AKA the previous command point.\n  // we add them to each relative command to make it an absolute comment.\n  // we also swap the v V h H with L, because are easier to transform.\n  let x = 0,\n    y = 0;\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n  // the last x1 and y1.\n  let x1 = 0,\n    y1 = 0;\n  // previous will host the letter of the previous command, to handle S and T.\n  // controlX and controlY will host the previous reflected control point\n  const destinationPath: TSimplePathData = [];\n  let previous,\n    // placeholders\n    controlX = 0,\n    controlY = 0;\n  for (const parsedCommand of path) {\n    const current: TComplexParsedCommand = [...parsedCommand];\n    let converted: TSimpleParsedCommand | undefined;\n    switch (\n      current[0] // first letter\n    ) {\n      case 'l': // lineto, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'L':\n        x = current[1];\n        y = current[2];\n        converted = ['L', x, y];\n        break;\n      case 'h': // horizontal lineto, relative\n        current[1] += x;\n      // falls through\n      case 'H':\n        x = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'v': // vertical lineto, relative\n        current[1] += y;\n      // falls through\n      case 'V':\n        y = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'm': // moveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'M':\n        x = current[1];\n        y = current[2];\n        x1 = current[1];\n        y1 = current[2];\n        converted = ['M', x, y];\n        break;\n      case 'c': // bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n        current[5] += x;\n        current[6] += y;\n      // falls through\n      case 'C':\n        controlX = current[3];\n        controlY = current[4];\n        x = current[5];\n        y = current[6];\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\n        break;\n      case 's': // shorthand cubic bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'S':\n        // would be sScC but since we are swapping sSc for C, we check just that.\n        if (previous === 'C') {\n          // calculate reflection of previous control points\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\n          // the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[3];\n        y = current[4];\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\n        // converted[3] and converted[4] are NOW the second control point.\n        // we keep it for the next reflection.\n        controlX = converted[3];\n        controlY = converted[4];\n        break;\n      case 'q': // quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'Q':\n        controlX = current[1];\n        controlY = current[2];\n        x = current[3];\n        y = current[4];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 't': // shorthand quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'T':\n        if (previous === 'Q') {\n          // calculate reflection of previous control point\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[1];\n        y = current[2];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 'a':\n        current[6] += x;\n        current[7] += y;\n      // falls through\n      case 'A':\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\n        x = current[6];\n        y = current[7];\n        break;\n      case 'z':\n      case 'Z':\n        x = x1;\n        y = y1;\n        converted = ['Z'];\n        break;\n      default:\n    }\n    if (converted) {\n      destinationPath.push(converted);\n      previous = converted[0];\n    } else {\n      previous = '';\n    }\n  }\n  return destinationPath;\n};\n\n// todo verify if we can just use the point class here\n/**\n * Calc length from point x1,y1 to x2,y2\n * @param {number} x1 starting point x\n * @param {number} y1 starting point y\n * @param {number} x2 starting point x\n * @param {number} y2 starting point y\n * @return {number} length of segment\n */\nconst calcLineLength = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n/**\n * Get an iterator that takes a percentage and returns a point\n * @param {number} begx\n * @param {number} begy\n * @param {number} cp1x\n * @param {number} cp1y\n * @param {number} cp2x\n * @param {number} cp2y\n * @param {number} endx\n * @param {number} endy\n */\nconst getPointOnCubicBezierIterator =\n  (\n    begx: number,\n    begy: number,\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    endx: number,\n    endy: number,\n  ) =>\n  (pct: number) => {\n    const c1 = CB1(pct),\n      c2 = CB2(pct),\n      c3 = CB3(pct),\n      c4 = CB4(pct);\n    return new Point(\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4,\n    );\n  };\n\nconst QB1 = (t: number) => t ** 2;\nconst QB2 = (t: number) => 2 * t * (1 - t);\nconst QB3 = (t: number) => (1 - t) ** 2;\n\nconst getTangentCubicIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number,\n  ) =>\n  (pct: number) => {\n    const qb1 = QB1(pct),\n      qb2 = QB2(pct),\n      qb3 = QB3(pct),\n      tangentX =\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\n      tangentY =\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\nconst getPointOnQuadraticBezierIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const c1 = QB1(pct),\n      c2 = QB2(pct),\n      c3 = QB3(pct);\n    return new Point(\n      p3x * c1 + p2x * c2 + p1x * c3,\n      p3y * c1 + p2y * c2 + p1y * c3,\n    );\n  };\n\nconst getTangentQuadraticIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n  ) =>\n  (pct: number) => {\n    const invT = 1 - pct,\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\n// with 100 segments. This will good enough to calculate the length of the curve\nconst pathIterator = (\n  iterator: (pct: number) => Point,\n  x1: number,\n  y1: number,\n) => {\n  let tempP = new Point(x1, y1),\n    tmpLen = 0;\n  for (let perc = 1; perc <= 100; perc += 1) {\n    const p = iterator(perc / 100);\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    tempP = p;\n  }\n  return tmpLen;\n};\n\n/**\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n * that correspond to that pixels run over the path.\n * The percentage will be then used to find the correct point on the canvas for the path.\n * @param {Array} segInfo fabricJS collection of information on a parsed path\n * @param {number} distance from starting point, in pixels.\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n */\nconst findPercentageForDistance = (\n  segInfo: TCurveInfo<'Q' | 'C'>,\n  distance: number,\n): TPointAngle => {\n  let perc = 0,\n    tmpLen = 0,\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\n    p: XY = { ...tempP },\n    nextLen: number,\n    nextStep = 0.01,\n    lastPerc = 0;\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n  // the path\n  const iterator = segInfo.iterator,\n    angleFinder = segInfo.angleFinder;\n  while (tmpLen < distance && nextStep > 0.0001) {\n    p = iterator(perc);\n    lastPerc = perc;\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    // compare tmpLen each cycle with distance, decide next perc to test.\n    if (nextLen + tmpLen > distance) {\n      // we discard this step and we make smaller steps.\n      perc -= nextStep;\n      nextStep /= 2;\n    } else {\n      tempP = p;\n      perc += nextStep;\n      tmpLen += nextLen;\n    }\n  }\n  return { ...p, angle: angleFinder(lastPerc) };\n};\n\n/**\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\n * @param {TSimplePathData} path parsed path commands\n * @return {TPathSegmentInfo[]} path commands information\n */\nexport const getPathSegmentsInfo = (\n  path: TSimplePathData,\n): TPathSegmentInfo[] => {\n  let totalLength = 0,\n    //x2 and y2 are the coords of segment start\n    //x1 and y1 are the coords of the current point\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    iterator,\n    tempInfo: TPathSegmentInfo;\n  const info: TPathSegmentInfo[] = [];\n  for (const current of path) {\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\n      x: x1,\n      y: y1,\n      command: current[0],\n      length: 0,\n    };\n    switch (\n      current[0] //first letter\n    ) {\n      case 'M':\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\n        tempInfo.x = x2 = x1 = current[1];\n        tempInfo.y = y2 = y1 = current[2];\n        break;\n      case 'L':\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n        x1 = current[1];\n        y1 = current[2];\n        break;\n      case 'C':\n        iterator = getPointOnCubicBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentCubicIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n\n        x1 = current[5];\n        y1 = current[6];\n        break;\n      case 'Q':\n        iterator = getPointOnQuadraticBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentQuadraticIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n        x1 = current[3];\n        y1 = current[4];\n        break;\n      case 'Z':\n        // we add those in order to ease calculations later\n        tempInfo = <TEndPathInfo>basicInfo;\n        tempInfo.destX = x2;\n        tempInfo.destY = y2;\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\n        x1 = x2;\n        y1 = y2;\n        break;\n    }\n    totalLength += tempInfo.length;\n    info.push(tempInfo);\n  }\n  info.push({ length: totalLength, x: x1, y: y1 });\n  return info;\n};\n\n/**\n * Get the point on the path that is distance along the path\n * @param path\n * @param distance\n * @param infos\n */\nexport const getPointOnPath = (\n  path: TSimplePathData,\n  distance: number,\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path),\n): TPointAngle | undefined => {\n  let i = 0;\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\n    distance -= infos[i].length;\n    i++;\n  }\n  const segInfo = infos[i],\n    segPercent = distance / segInfo.length,\n    segment = path[i];\n\n  switch (segInfo.command) {\n    case 'M':\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\n    case 'Z':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segInfo.destX, segInfo.destY),\n          segPercent,\n        ),\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\n      };\n    case 'L':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segment[1]!, segment[2]!),\n          segPercent,\n        ),\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\n      };\n    case 'C':\n      return findPercentageForDistance(segInfo, distance);\n    case 'Q':\n      return findPercentageForDistance(segInfo, distance);\n    default:\n    // throw Error('Invalid command');\n  }\n};\n\nconst rePathCmdAll = new RegExp(rePathCommand, 'gi');\nconst regExpArcCommandPoints = new RegExp(reArcCommandPoints, 'g');\nconst reMyNum = new RegExp(reNum, 'gi');\nconst commandLengths = {\n  m: 2,\n  l: 2,\n  h: 1,\n  v: 1,\n  c: 6,\n  s: 4,\n  q: 4,\n  t: 2,\n  a: 7,\n} as const;\n/**\n *\n * @param {string} pathString\n * @return {TComplexPathData} An array of SVG path commands\n * @example <caption>Usage</caption>\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n *   ['M', 3, 4],\n *   ['Q', 3, 5, 2, 1, 4, 0],\n *   ['Q', 9, 12, 2, 1, 4, 0],\n * ];\n */\nexport const parsePath = (pathString: string): TComplexPathData => {\n  const chain: TComplexPathData = [];\n  const all = pathString.match(rePathCmdAll) ?? [];\n  for (const matchStr of all) {\n    // take match string and save the first letter as the command\n    const commandLetter = matchStr[0] as TComplexParsedCommandType;\n    // in case of Z we have very little to do\n    if (commandLetter === 'z' || commandLetter === 'Z') {\n      chain.push([commandLetter]);\n      continue;\n    }\n    const commandLength =\n      commandLengths[\n        commandLetter.toLowerCase() as keyof typeof commandLengths\n      ];\n\n    let paramArr = [];\n    if (commandLetter === 'a' || commandLetter === 'A') {\n      // the arc command ha some peculariaties that requires a special regex other than numbers\n      // it is possible to avoid using a space between the sweep and large arc flags, making them either\n      // 00, 01, 10 or 11, making them identical to a plain number for the regex reMyNum\n      // reset the regexp\n      regExpArcCommandPoints.lastIndex = 0;\n      for (let out = null; (out = regExpArcCommandPoints.exec(matchStr)); ) {\n        paramArr.push(...out.slice(1));\n      }\n    } else {\n      paramArr = matchStr.match(reMyNum) || [];\n    }\n\n    // inspect the length of paramArr, if is longer than commandLength\n    // we are dealing with repeated commands\n    for (let i = 0; i < paramArr.length; i += commandLength) {\n      const newCommand = new Array(commandLength) as TComplexParsedCommand;\n      const transformedCommand = repeatedCommands[commandLetter];\n      newCommand[0] =\n        i > 0 && transformedCommand ? transformedCommand : commandLetter;\n      for (let j = 0; j < commandLength; j++) {\n        newCommand[j + 1] = parseFloat(paramArr[i + j]);\n      }\n      chain.push(newCommand);\n    }\n  }\n  return chain;\n};\n\n/**\n *\n * Converts points to a smooth SVG path\n * @param {XY[]} points Array of points\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n * @return {(string|number)[][]} An array of SVG path commands\n */\nexport const getSmoothPathFromPoints = (\n  points: Point[],\n  correction = 0,\n): TSimplePathData => {\n  let p1 = new Point(points[0]),\n    p2 = new Point(points[1]),\n    multSignX = 1,\n    multSignY = 0;\n  const path: TSimplePathData = [],\n    len = points.length,\n    manyPoints = len > 2;\n\n  if (manyPoints) {\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n  }\n  path.push([\n    'M',\n    p1.x - multSignX * correction,\n    p1.y - multSignY * correction,\n  ]);\n  let i;\n  for (i = 1; i < len; i++) {\n    if (!p1.eq(p2)) {\n      const midPoint = p1.midPointFrom(p2);\n      // p1 is our bezier control point\n      // midpoint is our endpoint\n      // start point is p(i-1) value.\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n    }\n    p1 = points[i];\n    if (i + 1 < points.length) {\n      p2 = points[i + 1];\n    }\n  }\n  if (manyPoints) {\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n  }\n  path.push([\n    'L',\n    p1.x + multSignX * correction,\n    p1.y + multSignY * correction,\n  ]);\n  return path;\n};\n\n/**\n * Transform a path by transforming each segment.\n * it has to be a simplified path or it won't work.\n * WARNING: this depends from pathOffset for correct operation\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\n * @param {TMat2D} transform matrix that represent the transformation\n * @param {Point} [pathOffset] `Path.pathOffset`\n * @returns {TSimplePathData} the transformed path\n */\nexport const transformPath = (\n  path: TSimplePathData,\n  transform: TMat2D,\n  pathOffset: Point,\n): TSimplePathData => {\n  if (pathOffset) {\n    transform = multiplyTransformMatrices(transform, [\n      1,\n      0,\n      0,\n      1,\n      -pathOffset.x,\n      -pathOffset.y,\n    ]);\n  }\n  return path.map((pathSegment) => {\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\n      // TODO: is there a way to get around casting to any?\n      const { x, y } = transformPoint(\n        {\n          x: pathSegment[i] as number,\n          y: pathSegment[i + 1] as number,\n        },\n        transform,\n      );\n      newSegment[i] = x;\n      newSegment[i + 1] = y;\n    }\n    return newSegment;\n  });\n};\n\n/**\n * Returns an array of path commands to create a regular polygon\n * @param {number} numVertexes\n * @param {number} radius\n * @returns {TSimplePathData} An array of SVG path commands\n */\nexport const getRegularPolygonPath = (\n  numVertexes: number,\n  radius: number,\n): TSimplePathData => {\n  const interiorAngle = (Math.PI * 2) / numVertexes;\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\n  let rotationAdjustment = -halfPI;\n  if (numVertexes % 2 === 0) {\n    rotationAdjustment += interiorAngle / 2;\n  }\n  const d = new Array(numVertexes + 1);\n  for (let i = 0; i < numVertexes; i++) {\n    const rad = i * interiorAngle + rotationAdjustment;\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\n  }\n  d[numVertexes] = ['Z'];\n  return d;\n};\n\n/**\n * Join path commands to go back to svg format\n * @param {TSimplePathData} pathData fabricJS parsed path commands\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {String} joined path 'M 0 0 L 20 30'\n */\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\n  pathData\n    .map((segment) => {\n      return segment\n        .map((arg, i) => {\n          if (i === 0) return arg;\n          return fractionDigits === undefined\n            ? arg\n            : toFixed(arg, fractionDigits);\n        })\n        .join(' ');\n    })\n    .join(' ');\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\n\n/**\n * wrapper for setting element's style\n * @param {HTMLElement} element\n * @param {Object | string} styles\n */\nexport function setStyle(\n  element: HTMLElement,\n  styles: string | Record<string, string>,\n) {\n  const elementStyle = element.style;\n  if (!elementStyle || !styles) {\n    return;\n  } else if (typeof styles === 'string') {\n    elementStyle.cssText += ';' + styles;\n  } else {\n    Object.entries(styles).forEach(([property, value]) =>\n      elementStyle.setProperty(property, value),\n    );\n  }\n}\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { sendObjectToPlane } from './planeChange';\nimport { Group } from '../../shapes/Group';\n/**\n * Merges 2 clip paths into one visually equal clip path\n *\n * **IMPORTANT**:\\\n * Does **NOT** clone the arguments, clone them proir if necessary.\n *\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n *\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n *\n * @memberOf fabric.util\n * @param {fabric.Object} c1\n * @param {fabric.Object} c2\n * @returns {fabric.Object} merged clip path\n */\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\n  let a = c1,\n    b = c2;\n  if (a.inverted && !b.inverted) {\n    //  case (2)\n    a = c2;\n    b = c1;\n  }\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\n  //  assign the `inverted` prop to the wrapping group\n  const inverted = a.inverted && b.inverted;\n  if (inverted) {\n    //  case (1)\n    a.inverted = b.inverted = false;\n  }\n  return new Group([a], { clipPath: b, inverted });\n};\n","/**\n * Returns random number between 2 specified ones.\n * @param {Number} min lower limit\n * @param {Number} max upper limit\n * @return {Number} random value (between min and max)\n */\nexport const getRandomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","import { getFabricWindow } from '../../env';\nimport { noop } from '../../constants';\nimport type { Abortable } from '../../typedefs';\nimport { SignalAbortedError } from './console';\n\ntype requestOptions = Abortable & {\n  onComplete?: (xhr: XMLHttpRequest) => void;\n};\n\n/**\n * Cross-browser abstraction for sending XMLHttpRequest\n * @deprecated this has to go away, we can use a modern browser method to do the same.\n * @param {String} url URL to send XMLHttpRequest to\n * @param {Object} [options] Options object\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {Function} options.onComplete Callback to invoke when request is completed\n * @return {XMLHttpRequest} request\n */\n\nexport function request(url: string, options: requestOptions = {}) {\n  const onComplete = options.onComplete || noop,\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\n    signal = options.signal,\n    abort = function () {\n      xhr.abort();\n    },\n    removeListener = function () {\n      signal && signal.removeEventListener('abort', abort);\n      xhr.onerror = xhr.ontimeout = noop;\n    };\n\n  if (signal && signal.aborted) {\n    throw new SignalAbortedError('request');\n  } else if (signal) {\n    signal.addEventListener('abort', abort, { once: true });\n  }\n\n  /** @ignore */\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      removeListener();\n      onComplete(xhr);\n      xhr.onreadystatechange = noop;\n    }\n  };\n\n  xhr.onerror = xhr.ontimeout = removeListener;\n\n  xhr.open('get', url, true);\n\n  xhr.send();\n  return xhr;\n}\n","import { CENTER, SCALE_X, SCALE_Y } from '../constants';\nimport type { FabricImage } from '../shapes/Image';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { qrDecompose } from './misc/matrix';\n\ntype FabricObjectWithTransformMatrix = FabricObject & {\n  transformMatrix?: TMat2D;\n};\n\n/**\n * This function is an helper for svg import. it decompose the transformMatrix\n * and assign properties to object.\n * untransformed coordinates\n * @private\n */\nconst _assignTransformMatrixProps = (\n  object: FabricObjectWithTransformMatrix,\n) => {\n  if (object.transformMatrix) {\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\n      object.transformMatrix,\n    );\n    object.flipX = false;\n    object.flipY = false;\n    object.set(SCALE_X, scaleX);\n    object.set(SCALE_Y, scaleY);\n    object.angle = angle;\n    object.skewX = skewX;\n    object.skewY = 0;\n  }\n};\n\n/**\n * This function is an helper for svg import. it removes the transform matrix\n * and set to object properties that fabricjs can handle\n * @private\n * @param {Object} preserveAspectRatioOptions\n */\nexport const removeTransformMatrixForSvgParsing = (\n  object: FabricObjectWithTransformMatrix,\n  preserveAspectRatioOptions?: any,\n) => {\n  let center = object._findCenterFromElement();\n  if (object.transformMatrix) {\n    _assignTransformMatrixProps(object);\n    center = center.transform(object.transformMatrix);\n  }\n  delete object.transformMatrix;\n  if (preserveAspectRatioOptions) {\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\n    center.x += preserveAspectRatioOptions.offsetLeft;\n    center.y += preserveAspectRatioOptions.offsetTop;\n    object.width = preserveAspectRatioOptions.width;\n    object.height = preserveAspectRatioOptions.height;\n  }\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport { createCanvasElement, setStyle } from '../../util';\nimport type { CSSDimensions } from './util';\nimport { makeElementUnselectable, setCSSDimensions } from './util';\nimport type { CanvasItem } from './StaticCanvasDOMManager';\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\nimport { setCanvasDimensions } from './util';\nimport { NONE } from '../../constants';\n\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\n  upper: CanvasItem;\n  container: HTMLDivElement;\n\n  constructor(\n    arg0?: string | HTMLCanvasElement,\n    {\n      allowTouchScrolling = false,\n      containerClass = '',\n    }: {\n      allowTouchScrolling?: boolean;\n      /**\n       * @deprecated here only for backward compatibility\n       */\n      containerClass?: string;\n    } = {},\n  ) {\n    super(arg0);\n    const { el: lowerCanvasEl } = this.lower;\n    const upperCanvasEl = this.createUpperCanvas();\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\n    this.applyCanvasStyle(lowerCanvasEl, {\n      allowTouchScrolling,\n    });\n    this.applyCanvasStyle(upperCanvasEl, {\n      allowTouchScrolling,\n      styles: {\n        position: 'absolute',\n        left: '0',\n        top: '0',\n      },\n    });\n    const container = this.createContainerElement();\n    container.classList.add(containerClass);\n    if (lowerCanvasEl.parentNode) {\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\n    }\n    container.append(lowerCanvasEl, upperCanvasEl);\n    this.container = container;\n  }\n\n  protected createUpperCanvas() {\n    const { el: lowerCanvasEl } = this.lower;\n    const el = createCanvasElement();\n    // we assign the same classname of the lowerCanvas\n    el.className = lowerCanvasEl.className;\n    // but then we remove the lower-canvas specific className\n    el.classList.remove('lower-canvas');\n    // we add the specific upper-canvas class\n    el.classList.add('upper-canvas');\n    el.setAttribute('data-fabric', 'top');\n    el.style.cssText = lowerCanvasEl.style.cssText;\n    el.setAttribute('draggable', 'true');\n    return el;\n  }\n\n  protected createContainerElement() {\n    const container = getFabricDocument().createElement('div');\n    container.setAttribute('data-fabric', 'wrapper');\n    setStyle(container, {\n      position: 'relative',\n    });\n    makeElementUnselectable(container);\n    return container;\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\n   */\n  protected applyCanvasStyle(\n    element: HTMLCanvasElement,\n    options: {\n      allowTouchScrolling?: boolean;\n      styles?: Record<string, string>;\n    },\n  ) {\n    const { styles, allowTouchScrolling } = options;\n    setStyle(element, {\n      ...styles,\n      'touch-action': allowTouchScrolling ? 'manipulation' : NONE,\n    });\n    makeElementUnselectable(element);\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    super.setDimensions(size, retinaScaling);\n    const { el, ctx } = this.upper;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\n    super.setCSSDimensions(size);\n    setCSSDimensions(this.upper.el, size);\n    setCSSDimensions(this.container, size);\n  }\n\n  cleanupDOM(size: TSize) {\n    const container = this.container,\n      { el: lowerCanvasEl } = this.lower,\n      { el: upperCanvasEl } = this.upper;\n    super.cleanupDOM(size);\n    container.removeChild(upperCanvasEl);\n    container.removeChild(lowerCanvasEl);\n    if (container.parentNode) {\n      container.parentNode.replaceChild(lowerCanvasEl, container);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    getEnv().dispose(this.upper.el);\n    // @ts-expect-error disposing\n    delete this.upper;\n    // @ts-expect-error disposing\n    delete this.container;\n  }\n}\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\nimport type { TOptions } from '../typedefs';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\n\nexport interface CanvasTransformOptions {\n  /**\n   * When true, objects can be transformed by one side (unproportionately)\n   * when dragged on the corners that normally would not do that.\n   * @type Boolean\n   * @default\n   * @since fabric 4.0 // changed name and default value\n   */\n  uniformScaling: boolean;\n\n  /**\n   * Indicates which key switches uniform scaling.\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * totally wrong named. this sounds like `uniform scaling`\n   * if Canvas.uniformScaling is true, pressing this will set it to false\n   * and viceversa.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  uniScaleKey: TOptionalModifierKey;\n\n  /**\n   * When true, objects use center point as the origin of scale transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredScaling: boolean;\n\n  /**\n   * When true, objects use center point as the origin of rotate transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredRotation: boolean;\n\n  /**\n   * Indicates which key enable centered Transform\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  centeredKey: TOptionalModifierKey;\n\n  /**\n   * Indicates which key enable alternate action on corner\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  altActionKey: TOptionalModifierKey;\n}\n\nexport interface CanvasSelectionOptions {\n  /**\n   * Indicates whether group selection should be enabled\n   * @type Boolean\n   * @default\n   */\n  selection: boolean;\n\n  /**\n   * Indicates which key or keys enable multiple click selection\n   * Pass value as a string or array of strings\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or empty or containing any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.2\n   * @type ModifierKey|ModifierKey[]\n   * @default\n   */\n  selectionKey: TOptionalModifierKey | ModifierKey[];\n\n  /**\n   * Indicates which key enable alternative selection\n   * in case of target overlapping with active object\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * For a series of reason that come from the general expectations on how\n   * things should work, this feature works only for preserveObjectStacking true.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.5\n   * @type null|ModifierKey\n   * @default\n   */\n  altSelectionKey: TOptionalModifierKey;\n\n  /**\n   * Color of selection\n   * @type String\n   * @default\n   */\n  selectionColor: string;\n\n  /**\n   * Default dash array pattern\n   * If not empty the selection border is dashed\n   * @type Array\n   */\n  selectionDashArray: number[];\n\n  /**\n   * Color of the border of selection (usually slightly darker than color of selection itself)\n   * @type String\n   * @default\n   */\n  selectionBorderColor: string;\n\n  /**\n   * Width of a line used in object/group selection\n   * @type Number\n   * @default\n   */\n  selectionLineWidth: number;\n\n  /**\n   * Select only shapes that are fully contained in the dragged selection rectangle.\n   * @type Boolean\n   * @default\n   */\n  selectionFullyContained: boolean;\n}\n\nexport interface CanvasCursorOptions {\n  /**\n   * Default cursor value used when hovering over an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  hoverCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used when moving an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  moveCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used for the entire canvas\n   * @type String\n   * @default default\n   */\n  defaultCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used during free drawing\n   * @type String\n   * @default crosshair\n   */\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used for disabled elements ( corners with disabled action )\n   * @type String\n   * @since 2.0.0\n   * @default not-allowed\n   */\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\n}\n\nexport interface TargetFindOptions {\n  /**\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n   * @type Boolean\n   * @default\n   */\n  perPixelTargetFind: boolean;\n\n  /**\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\n   * @type Number\n   * @default\n   */\n  targetFindTolerance: number;\n\n  /**\n   * When true, target detection is skipped. Target detection will return always undefined.\n   * click selection won't work anymore, events will fire with no targets.\n   * if something is selected before setting it to true, it will be deselected at the first click.\n   * area selection will still work. check the `selection` property too.\n   * if you deactivate both, you should look into staticCanvas.\n   * @type Boolean\n   * @default\n   */\n  skipTargetFind: boolean;\n}\n\nexport interface CanvasEventsOptions {\n  /**\n   * Indicates if the right click on canvas can output the context menu or not\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  stopContextMenu: boolean;\n\n  /**\n   * Indicates if the canvas can fire right click events\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  fireRightClick: boolean;\n\n  /**\n   * Indicates if the canvas can fire middle click events\n   * @type Boolean\n   * @since 1.7.8\n   * @default\n   */\n  fireMiddleClick: boolean;\n\n  /**\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\n   * @type Boolean\n   * @default\n   */\n  enablePointerEvents: boolean;\n}\n\nexport interface CanvasOptions\n  extends StaticCanvasOptions,\n    CanvasTransformOptions,\n    CanvasSelectionOptions,\n    CanvasCursorOptions,\n    TargetFindOptions,\n    CanvasEventsOptions {\n  /**\n   * Default element class that's given to wrapper (div) element of canvas\n   * @type String\n   * @default\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\n   */\n  containerClass: string;\n\n  /**\n   * Indicates whether objects should remain in current stack position when selected.\n   * When false objects are brought to top and rendered as part of the selection group\n   * @type Boolean\n   * @default\n   */\n  preserveObjectStacking: boolean;\n}\n\nexport type TCanvasOptions = TOptions<CanvasOptions>;\n\nexport const canvasDefaults: TOptions<CanvasOptions> = {\n  uniformScaling: true,\n  uniScaleKey: 'shiftKey',\n  centeredScaling: false,\n  centeredRotation: false,\n  centeredKey: 'altKey',\n  altActionKey: 'shiftKey',\n\n  selection: true,\n  selectionKey: 'shiftKey',\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\n  selectionDashArray: [],\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n  selectionLineWidth: 1,\n  selectionFullyContained: false,\n\n  hoverCursor: 'move',\n  moveCursor: 'move',\n  defaultCursor: 'default',\n  freeDrawingCursor: 'crosshair',\n  notAllowedCursor: 'not-allowed',\n\n  perPixelTargetFind: false,\n  targetFindTolerance: 0,\n  skipTargetFind: false,\n\n  stopContextMenu: false,\n  fireRightClick: false,\n  fireMiddleClick: false,\n  enablePointerEvents: false,\n\n  containerClass: 'canvas-container',\n\n  preserveObjectStacking: false,\n};\n","import { dragHandler } from '../controls/drag';\nimport { getActionFromCorner } from '../controls/util';\nimport { Point } from '../Point';\nimport { FabricObject } from '../shapes/Object/FabricObject';\nimport type {\n  CanvasEvents,\n  ModifierKey,\n  TOptionalModifierKey,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport {\n  addTransformToObject,\n  saveObjectTransform,\n} from '../util/misc/objectTransforms';\nimport type { TCanvasSizeOptions } from './StaticCanvas';\nimport { StaticCanvas } from './StaticCanvas';\nimport { isCollection } from '../Collection';\nimport { isTransparent } from '../util/misc/isTransparent';\nimport type {\n  TMat2D,\n  TOriginX,\n  TOriginY,\n  TSize,\n  TSVGReviver,\n} from '../typedefs';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { getPointer, isTouchEvent } from '../util/dom_event';\nimport type { IText } from '../shapes/IText/IText';\nimport type { BaseBrush } from '../brushes/BaseBrush';\nimport { pick } from '../util/misc/pick';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { cos, createCanvasElement, sin } from '../util';\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\nimport {\n  BOTTOM,\n  CENTER,\n  LEFT,\n  MODIFIED,\n  RESIZING,\n  RIGHT,\n  ROTATE,\n  SCALE,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CanvasOptions } from './CanvasOptions';\nimport { canvasDefaults } from './CanvasOptions';\nimport { Intersection } from '../Intersection';\nimport { isActiveSelection } from '../util/typeAssertions';\n\n/**\n * Canvas class\n * @class Canvas\n * @extends StaticCanvas\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n *\n * @fires object:modified at the end of a transform\n * @fires object:rotating while an object is being rotated from the control\n * @fires object:scaling while an object is being scaled by controls\n * @fires object:moving while an object is being dragged\n * @fires object:skewing while an object is being skewed from the controls\n *\n * @fires before:transform before a transform is is started\n * @fires before:selection:cleared\n * @fires selection:cleared\n * @fires selection:updated\n * @fires selection:created\n *\n * @fires path:created after a drawing operation ends and the path is added\n * @fires mouse:down\n * @fires mouse:move\n * @fires mouse:up\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n * @fires mouse:over\n * @fires mouse:out\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drag:enter object drag enter\n * @fires drag:leave object drag leave\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\n * @fires drop\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\n * @example\n * let a: fabric.Object, b: fabric.Object;\n * let flag = false;\n * canvas.add(a, b);\n * a.on('drop:before', opt => {\n *  //  we want a to accept the drop even though it's below b in the stack\n *  flag = this.canDrop(opt.e);\n * });\n * b.canDrop = function(e) {\n *  !flag && this.draggableTextDelegate.canDrop(e);\n * }\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\n * a.on('drop', opt => {\n *  opt.e.defaultPrevented  //  drop occurred\n *  opt.didDrop             //  drop occurred on canvas\n *  opt.target              //  drop target\n *  opt.target !== a && a.set('text', 'I lost');\n * });\n * canvas.on('drop:after', opt => {\n *  //  inform user who won\n *  if(!opt.e.defaultPrevented) {\n *    // no winners\n *  }\n *  else if(!opt.didDrop) {\n *    //  my objects didn't win, some other lucky object\n *  }\n *  else {\n *    //  we have a winner it's opt.target!!\n *  }\n * })\n *\n * @fires after:render at the end of the render process, receives the context in the callback\n * @fires before:render at start the render process, receives the context in the callback\n *\n * @fires contextmenu:before\n * @fires contextmenu\n * @example\n * let handler;\n * targets.forEach(target => {\n *   target.on('contextmenu:before', opt => {\n *     //  decide which target should handle the event before canvas hijacks it\n *     if (someCaseHappens && opt.targets.includes(target)) {\n *       handler = target;\n *     }\n *   });\n *   target.on('contextmenu', opt => {\n *     //  do something fantastic\n *   });\n * });\n * canvas.on('contextmenu', opt => {\n *   if (!handler) {\n *     //  no one takes responsibility, it's always left to me\n *     //  let's show them how it's done!\n *   }\n * });\n *\n */\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\n  extends StaticCanvas<EventSpec>\n  implements Omit<CanvasOptions, 'enablePointerEvents'>\n{\n  declare _objects: FabricObject[];\n\n  // transform config\n  declare uniformScaling: boolean;\n  declare uniScaleKey: TOptionalModifierKey;\n  declare centeredScaling: boolean;\n  declare centeredRotation: boolean;\n  declare centeredKey: TOptionalModifierKey;\n  declare altActionKey: TOptionalModifierKey;\n\n  // selection config\n  declare selection: boolean;\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\n  declare altSelectionKey: TOptionalModifierKey;\n  declare selectionColor: string;\n  declare selectionDashArray: number[];\n  declare selectionBorderColor: string;\n  declare selectionLineWidth: number;\n  declare selectionFullyContained: boolean;\n\n  // cursors\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\n  declare moveCursor: CSSStyleDeclaration['cursor'];\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\n\n  declare containerClass: string;\n\n  // target find config\n  declare perPixelTargetFind: boolean;\n  declare targetFindTolerance: number;\n  declare skipTargetFind: boolean;\n\n  /**\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n   * After mousedown, mousemove creates a shape,\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n   * @type Boolean\n   * @default\n   */\n  declare isDrawingMode: boolean;\n\n  declare preserveObjectStacking: boolean;\n\n  // event config\n  declare stopContextMenu: boolean;\n  declare fireRightClick: boolean;\n  declare fireMiddleClick: boolean;\n\n  /**\n   * Keep track of the subTargets for Mouse Events, ordered bottom up from innermost nested subTarget\n   * @type FabricObject[]\n   */\n  targets: FabricObject[] = [];\n\n  /**\n   * Keep track of the hovered target\n   * @type FabricObject | null\n   * @private\n   */\n  declare _hoveredTarget?: FabricObject;\n\n  /**\n   * hold the list of nested targets hovered\n   * @type FabricObject[]\n   * @private\n   */\n  _hoveredTargets: FabricObject[] = [];\n\n  /**\n   * hold the list of objects to render\n   * @type FabricObject[]\n   * @private\n   */\n  _objectsToRender?: FabricObject[];\n\n  /**\n   * hold a reference to a data structure that contains information\n   * on the current on going transform\n   * @type\n   * @private\n   */\n  _currentTransform: Transform | null = null;\n\n  /**\n   * hold a reference to a data structure used to track the selection\n   * box on canvas drag\n   * on the current on going transform\n   * x, y, deltaX and deltaY are in scene plane\n   * @type\n   * @private\n   */\n  protected _groupSelector: {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n  } | null = null;\n\n  /**\n   * internal flag used to understand if the context top requires a cleanup\n   * in case this is true, the contextTop will be cleared at the next render\n   * @type boolean\n   * @private\n   */\n  contextTopDirty = false;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _absolutePointer?: Point;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _pointer?: Point;\n\n  /**\n   * During a mouse event we may need the target multiple times in multiple functions.\n   * _target holds a reference to the target that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * @type {FabricObject}\n   */\n  protected declare _target?: FabricObject;\n\n  static ownDefaults = canvasDefaults;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\n  }\n\n  declare elements: CanvasDOMManager;\n  get upperCanvasEl() {\n    return this.elements.upper?.el;\n  }\n  get contextTop() {\n    return this.elements.upper?.ctx;\n  }\n  get wrapperEl() {\n    return this.elements.container;\n  }\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\n  private declare pixelFindContext: CanvasRenderingContext2D;\n\n  protected declare _isCurrentlyDrawing: boolean;\n  declare freeDrawingBrush?: BaseBrush;\n  declare _activeObject?: FabricObject;\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new CanvasDOMManager(el, {\n      allowTouchScrolling: this.allowTouchScrolling,\n      containerClass: this.containerClass,\n    });\n    this._createCacheCanvas();\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was added\n   */\n  _onObjectAdded(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    super._onObjectAdded(obj);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was removed\n   */\n  _onObjectRemoved(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    // removing active object should fire \"selection:cleared\" events\n    if (obj === this._activeObject) {\n      this.fire('before:selection:cleared', { deselected: [obj] });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { deselected: [obj] });\n      obj.fire('deselected', {\n        target: obj,\n      });\n    }\n    if (obj === this._hoveredTarget) {\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n    super._onObjectRemoved(obj);\n  }\n\n  _onStackOrderChanged() {\n    this._objectsToRender = undefined;\n    super._onStackOrderChanged();\n  }\n\n  /**\n   * Divides objects in two groups, one to render immediately\n   * and one to render as activeGroup.\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n   */\n  _chooseObjectsToRender(): FabricObject[] {\n    const activeObject = this._activeObject;\n    return !this.preserveObjectStacking && activeObject\n      ? this._objects\n          .filter((object) => !object.group && object !== activeObject)\n          .concat(activeObject)\n      : this._objects;\n  }\n\n  /**\n   * Renders both the top canvas and the secondary container canvas.\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n      this.clearContext(this.contextTop);\n      this.contextTopDirty = false;\n    }\n    if (this.hasLostContext) {\n      this.renderTopLayer(this.contextTop);\n      this.hasLostContext = false;\n    }\n    !this._objectsToRender &&\n      (this._objectsToRender = this._chooseObjectsToRender());\n    this.renderCanvas(this.getContext(), this._objectsToRender);\n  }\n\n  /**\n   * text selection is rendered by the active text instance during the rendering cycle\n   */\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\n      this.contextTopDirty = true;\n    }\n    // we render the top context - last object\n    if (this.selection && this._groupSelector) {\n      this._drawSelection(ctx);\n      this.contextTopDirty = true;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Method to render only the top canvas.\n   * Also used to render the group selection box.\n   * Does not render text selection.\n   */\n  renderTop() {\n    const ctx = this.contextTop;\n    this.clearContext(ctx);\n    this.renderTopLayer(ctx);\n    // todo: how do i know if the after:render is for the top or normal contex?\n    this.fire('after:render', { ctx });\n  }\n\n  /**\n   * Set the canvas tolerance value for pixel taret find.\n   * Use only integer numbers.\n   * @private\n   */\n  setTargetFindTolerance(value: number) {\n    value = Math.round(value);\n    this.targetFindTolerance = value;\n    const retina = this.getRetinaScaling();\n    const size = Math.ceil((value * 2 + 1) * retina);\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\n    this.pixelFindContext.scale(retina, retina);\n  }\n\n  /**\n   * Returns true if object is transparent at a certain location\n   * Clarification: this is `is target transparent at location X or are controls there`\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\n   * programmatically without painting them, the cache canvas optimization is always valid\n   * @param {FabricObject} target Object to check\n   * @param {Number} x Left coordinate in viewport space\n   * @param {Number} y Top coordinate in viewport space\n   * @return {Boolean}\n   */\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\n    const tolerance = this.targetFindTolerance;\n    const ctx = this.pixelFindContext;\n    this.clearContext(ctx);\n    ctx.save();\n    ctx.translate(-x + tolerance, -y + tolerance);\n    ctx.transform(...this.viewportTransform);\n    const selectionBgc = target.selectionBackgroundColor;\n    target.selectionBackgroundColor = '';\n    target.render(ctx);\n    target.selectionBackgroundColor = selectionBgc;\n    ctx.restore();\n    // our canvas is square, and made around tolerance.\n    // so tolerance in this case also represent the center of the canvas.\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\n    return isTransparent(\n      ctx,\n      enhancedTolerance,\n      enhancedTolerance,\n      enhancedTolerance,\n    );\n  }\n\n  /**\n   * takes an event and determines if selection key has been pressed\n   * @private\n   * @param {TPointerEvent} e Event object\n   */\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\n    const sKey = this.selectionKey;\n    if (!sKey) {\n      return false;\n    }\n    if (Array.isArray(sKey)) {\n      return !!sKey.find((key) => !!key && e[key] === true);\n    } else {\n      return e[sKey];\n    }\n  }\n\n  /**\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target\n   */\n  _shouldClearSelection(\n    e: TPointerEvent,\n    target?: FabricObject,\n  ): target is undefined {\n    const activeObjects = this.getActiveObjects(),\n      activeObject = this._activeObject;\n\n    return !!(\n      !target ||\n      (target &&\n        activeObject &&\n        activeObjects.length > 1 &&\n        activeObjects.indexOf(target) === -1 &&\n        activeObject !== target &&\n        !this._isSelectionKeyPressed(e)) ||\n      (target && !target.evented) ||\n      (target && !target.selectable && activeObject && activeObject !== target)\n    );\n  }\n\n  /**\n   * This method will take in consideration a modifier key pressed and the control we are\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\n   * This should be really in the realm of controls, and we should remove specific code for legacy\n   * embedded actions.\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\n   * @private\n   * @deprecated\n   * @param {FabricObject} target\n   * @param {string} action\n   * @param {boolean} altKey\n   * @returns {boolean} true if the transformation should be centered\n   */\n  private _shouldCenterTransform(\n    target: FabricObject,\n    action: string,\n    modifierKeyPressed: boolean,\n  ) {\n    if (!target) {\n      return;\n    }\n\n    let centerTransform;\n\n    if (\n      action === SCALE ||\n      action === SCALE_X ||\n      action === SCALE_Y ||\n      action === RESIZING\n    ) {\n      centerTransform = this.centeredScaling || target.centeredScaling;\n    } else if (action === ROTATE) {\n      centerTransform = this.centeredRotation || target.centeredRotation;\n    }\n\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\n  }\n\n  /**\n   * Given the control clicked, determine the origin of the transform.\n   * This is bad because controls can totally have custom names\n   * should disappear before release 4.0\n   * @private\n   * @deprecated\n   */\n  _getOriginFromCorner(\n    target: FabricObject,\n    controlName: string,\n  ): { x: TOriginX; y: TOriginY } {\n    const origin = {\n      x: target.originX,\n      y: target.originY,\n    };\n\n    if (!controlName) {\n      return origin;\n    }\n\n    // is a left control ?\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\n      origin.x = RIGHT;\n      // is a right control ?\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\n      origin.x = LEFT;\n    }\n    // is a top control ?\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\n      origin.y = BOTTOM;\n      // is a bottom control ?\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\n      origin.y = TOP;\n    }\n    return origin;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @param {FabricObject} target\n   * @param {boolean} [alreadySelected] pass true to setup the active control\n   */\n  _setupCurrentTransform(\n    e: TPointerEvent,\n    target: FabricObject,\n    alreadySelected: boolean,\n  ): void {\n    const pointer = target.group\n      ? // transform pointer to target's containing coordinate plane\n        sendPointToPlane(\n          this.getScenePoint(e),\n          undefined,\n          target.group.calcTransformMatrix(),\n        )\n      : this.getScenePoint(e);\n    const { key: corner = '', control } = target.getActiveControl() || {},\n      actionHandler =\n        alreadySelected && control\n          ? control.getActionHandler(e, target, control)?.bind(control)\n          : dragHandler,\n      action = getActionFromCorner(alreadySelected, corner, e, target),\n      altKey = e[this.centeredKey as ModifierKey],\n      origin = this._shouldCenterTransform(target, action, altKey)\n        ? ({ x: CENTER, y: CENTER } as const)\n        : this._getOriginFromCorner(target, corner),\n      /**\n       * relative to target's containing coordinate plane\n       * both agree on every point\n       **/\n      transform: Transform = {\n        target: target,\n        action,\n        actionHandler,\n        actionPerformed: false,\n        corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        theta: degreesToRadians(target.angle),\n        width: target.width,\n        height: target.height,\n        shiftKey: e.shiftKey,\n        altKey,\n        original: {\n          ...saveObjectTransform(target),\n          originX: origin.x,\n          originY: origin.y,\n        },\n      };\n\n    this._currentTransform = transform;\n\n    this.fire('before:transform', {\n      e,\n      transform,\n    });\n  }\n\n  /**\n   * Set the cursor type of the canvas element\n   * @param {String} value Cursor type of the canvas element.\n   * @see http://www.w3.org/TR/css3-ui/#cursor\n   */\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\n    this.upperCanvasEl.style.cursor = value;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\n   */\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\n      start = new Point(x, y).transform(this.viewportTransform),\n      extent = new Point(x + deltaX, y + deltaY).transform(\n        this.viewportTransform,\n      ),\n      strokeOffset = this.selectionLineWidth / 2;\n    let minX = Math.min(start.x, extent.x),\n      minY = Math.min(start.y, extent.y),\n      maxX = Math.max(start.x, extent.x),\n      maxY = Math.max(start.y, extent.y);\n\n    if (this.selectionColor) {\n      ctx.fillStyle = this.selectionColor;\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\n      return;\n    }\n    ctx.lineWidth = this.selectionLineWidth;\n    ctx.strokeStyle = this.selectionBorderColor;\n\n    minX += strokeOffset;\n    minY += strokeOffset;\n    maxX -= strokeOffset;\n    maxY -= strokeOffset;\n    // selection border\n    // @TODO: is _setLineDash still necessary on modern canvas?\n    FabricObject.prototype._setLineDash.call(\n      this,\n      ctx,\n      this.selectionDashArray,\n    );\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  /**\n   * Method that determines what object we are clicking on\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n   * or the outside part of the corner.\n   * @param {Event} e mouse event\n   * @return {FabricObject | null} the target found\n   */\n  findTarget(e: TPointerEvent): FabricObject | undefined {\n    if (this.skipTargetFind) {\n      return undefined;\n    }\n\n    const pointer = this.getViewportPoint(e),\n      activeObject = this._activeObject,\n      aObjects = this.getActiveObjects();\n\n    this.targets = [];\n\n    if (activeObject && aObjects.length >= 1) {\n      if (activeObject.findControl(pointer, isTouchEvent(e))) {\n        // if we hit the corner of the active object, let's return that.\n        return activeObject;\n      } else if (\n        aObjects.length > 1 &&\n        // check pointer is over active selection and possibly perform `subTargetCheck`\n        this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active selection does not select sub targets like normal groups\n        return activeObject;\n      } else if (\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active object is not an active selection\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          const subTargets = this.targets;\n          this.targets = [];\n          const target = this.searchPossibleTargets(this._objects, pointer);\n          if (\n            e[this.altSelectionKey as ModifierKey] &&\n            target &&\n            target !== activeObject\n          ) {\n            // alt selection: select active object even though it is not the top most target\n            // restore targets\n            this.targets = subTargets;\n            return activeObject;\n          }\n          return target;\n        }\n      }\n    }\n\n    return this.searchPossibleTargets(this._objects, pointer);\n  }\n\n  /**\n   * Checks if the point is inside the object selection area including padding\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point in scene coordinates\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\n    // getCoords will already take care of group de-nesting\n    let coords = obj.getCoords();\n    const viewportZoom = this.getZoom();\n    const padding = obj.padding / viewportZoom;\n    if (padding) {\n      const [tl, tr, br, bl] = coords;\n      // what is the angle of the object?\n      // we could use getTotalAngle, but is way easier to look at it\n      // from how coords are oriented, since if something went wrong\n      // at least we are consistent.\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\n        cosP = cos(angleRadians) * padding,\n        sinP = sin(angleRadians) * padding,\n        cosPSinP = cosP + sinP,\n        cosPMinusSinP = cosP - sinP;\n\n      coords = [\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\n      ];\n      // in case of padding we calculate the new coords on the fly.\n      // otherwise we have to maintain 2 sets of coordinates for everything.\n      // we can reiterate on storing them.\n      // if this is slow, for now the semplification is large and doesn't impact\n      // rendering.\n      // the idea behind this is that outside target check we don't need ot know\n      // where those coords are\n    }\n    return Intersection.isPointInPolygon(point, coords);\n  }\n\n  /**\n   * Checks point is inside the object selection condition. Either area with padding\n   * or over pixels if perPixelTargetFind is enabled\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point from viewport.\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\n    if (\n      obj &&\n      obj.visible &&\n      obj.evented &&\n      this._pointIsInObjectSelectionArea(\n        obj,\n        sendPointToPlane(pointer, undefined, this.viewportTransform),\n      )\n    ) {\n      if (\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\n        !(obj as unknown as IText).isEditing\n      ) {\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @param {Array} [objects] objects array to look into\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\n   * @private\n   */\n  _searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    // Cache all targets where their bounding box contains point.\n    let i = objects.length;\n    // Do not check for currently grouped objects, since we check the parent group itself.\n    // until we call this function specifically to search inside the activeGroup\n    while (i--) {\n      const target = objects[i];\n      if (this._checkTarget(target, pointer)) {\n        if (isCollection(target) && target.subTargetCheck) {\n          const subTarget = this._searchPossibleTargets(\n            target._objects as FabricObject[],\n            pointer,\n          );\n          subTarget && this.targets.push(subTarget);\n        }\n        return target;\n      }\n    }\n  }\n\n  /**\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @see {@link _searchPossibleTargets}\n   * @param {FabricObject[]} [objects] objects array to look into\n   * @param {Point} [pointer] coordinates from viewport to check.\n   * @return {FabricObject} **top most object on screen** that contains pointer\n   */\n  searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point,\n  ): FabricObject | undefined {\n    const target = this._searchPossibleTargets(objects, pointer);\n\n    // if we found something in this.targets, and the group is interactive, return the innermost subTarget\n    // that is still interactive\n    // TODO: reverify why interactive. the target should be returned always, but selected only\n    // if interactive.\n    if (\n      target &&\n      isCollection(target) &&\n      target.interactive &&\n      this.targets[0]\n    ) {\n      /** targets[0] is the innermost nested target, but it could be inside non interactive groups and so not a selection target */\n      const targets = this.targets;\n      for (let i = targets.length - 1; i > 0; i--) {\n        const t = targets[i];\n        if (!(isCollection(t) && t.interactive)) {\n          // one of the subtargets was not interactive. that is the last subtarget we can return.\n          // we can't dig more deep;\n          return t;\n        }\n      }\n      return targets[0];\n    }\n\n    return target;\n  }\n\n  /**\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\n   * and it remains unchanged from the viewer's perspective.\n   *\n   * @example\n   * const scenePoint = sendPointToPlane(\n   *  this.getViewportPoint(e),\n   *  undefined,\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getViewportPoint(e: TPointerEvent) {\n    if (this._pointer) {\n      return this._pointer;\n    }\n    return this.getPointer(e, true);\n  }\n\n  /**\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\n   * however, from the viewer's perspective, the point is changed.\n   *\n   * @example\n   * const viewportPoint = sendPointToPlane(\n   *  this.getScenePoint(e),\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getScenePoint(e: TPointerEvent) {\n    if (this._absolutePointer) {\n      return this._absolutePointer;\n    }\n    return this.getPointer(e);\n  }\n\n  /**\n   * Returns pointer relative to canvas.\n   *\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\n   *\n   * @param {Event} e\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\n   * @return {Point}\n   */\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\n    const upperCanvasEl = this.upperCanvasEl,\n      bounds = upperCanvasEl.getBoundingClientRect();\n    let pointer = getPointer(e),\n      boundsWidth = bounds.width || 0,\n      boundsHeight = bounds.height || 0;\n\n    if (!boundsWidth || !boundsHeight) {\n      if (TOP in bounds && BOTTOM in bounds) {\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\n      }\n      if (RIGHT in bounds && LEFT in bounds) {\n        boundsWidth = Math.abs(bounds.right - bounds.left);\n      }\n    }\n\n    this.calcOffset();\n    pointer.x = pointer.x - this._offset.left;\n    pointer.y = pointer.y - this._offset.top;\n    if (!fromViewport) {\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\n    }\n\n    const retinaScaling = this.getRetinaScaling();\n    if (retinaScaling !== 1) {\n      pointer.x /= retinaScaling;\n      pointer.y /= retinaScaling;\n    }\n\n    // If bounds are not available (i.e. not visible), do not apply scale.\n    const cssScale =\n      boundsWidth === 0 || boundsHeight === 0\n        ? new Point(1, 1)\n        : new Point(\n            upperCanvasEl.width / boundsWidth,\n            upperCanvasEl.height / boundsHeight,\n          );\n\n    return pointer.multiply(cssScale);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: TSize,\n    options?: TCanvasSizeOptions,\n  ) {\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\n    this._resetTransformEventData();\n    super._setDimensionsImpl(dimensions, options);\n    if (this._isCurrentlyDrawing) {\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\n    }\n  }\n\n  protected _createCacheCanvas() {\n    this.pixelFindCanvasEl = createCanvasElement();\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\n      willReadFrequently: true,\n    })!;\n    this.setTargetFindTolerance(this.targetFindTolerance);\n  }\n\n  /**\n   * Returns context of top canvas where interactions are drawn\n   * @returns {CanvasRenderingContext2D}\n   */\n  getTopContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns context of canvas where object selection is drawn\n   * @alias\n   * @return {CanvasRenderingContext2D}\n   */\n  getSelectionContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns &lt;canvas> element on which object selection is drawn\n   * @return {HTMLCanvasElement}\n   */\n  getSelectionElement(): HTMLCanvasElement {\n    return this.elements.upper.el;\n  }\n\n  /**\n   * Returns currently active object\n   * @return {FabricObject | null} active object\n   */\n  getActiveObject(): FabricObject | undefined {\n    return this._activeObject;\n  }\n\n  /**\n   * Returns an array with the current selected objects\n   * @return {FabricObject[]} active objects array\n   */\n  getActiveObjects(): FabricObject[] {\n    const active = this._activeObject;\n    return isActiveSelection(active)\n      ? active.getObjects()\n      : active\n        ? [active]\n        : [];\n  }\n\n  /**\n   * @private\n   * Compares the old activeObject with the current one and fires correct events\n   * @param {FabricObject[]} oldObjects old activeObject\n   * @param {TPointerEvent} e mouse event triggering the selection events\n   */\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\n    let somethingChanged = false,\n      invalidate = false;\n    const objects = this.getActiveObjects(),\n      added: FabricObject[] = [],\n      removed: FabricObject[] = [];\n\n    oldObjects.forEach((target) => {\n      if (!objects.includes(target)) {\n        somethingChanged = true;\n        target.fire('deselected', {\n          e,\n          target,\n        });\n        removed.push(target);\n      }\n    });\n\n    objects.forEach((target) => {\n      if (!oldObjects.includes(target)) {\n        somethingChanged = true;\n        target.fire('selected', {\n          e,\n          target,\n        });\n        added.push(target);\n      }\n    });\n\n    if (oldObjects.length > 0 && objects.length > 0) {\n      invalidate = true;\n      somethingChanged &&\n        this.fire('selection:updated', {\n          e,\n          selected: added,\n          deselected: removed,\n        });\n    } else if (objects.length > 0) {\n      invalidate = true;\n      this.fire('selection:created', {\n        e,\n        selected: added,\n      });\n    } else if (oldObjects.length > 0) {\n      invalidate = true;\n      this.fire('selection:cleared', {\n        e,\n        deselected: removed,\n      });\n    }\n    invalidate && (this._objectsToRender = undefined);\n  }\n\n  /**\n   * Sets given object as the only active object on canvas\n   * @param {FabricObject} object Object to set as an active one\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\n    const currentActives = this.getActiveObjects();\n    const selected = this._setActiveObject(object, e);\n    this._fireSelectionEvents(currentActives, e);\n    return selected;\n  }\n\n  /**\n   * This is supposed to be equivalent to setActiveObject but without firing\n   * any event. There is commitment to have this stay this way.\n   * This is the functional part of setActiveObject.\n   * @param {Object} object to set as active\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    const prevActiveObject = this._activeObject;\n    if (prevActiveObject === object) {\n      return false;\n    }\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\n      // refused to deselect\n      return false;\n    }\n    if (object.onSelect({ e })) {\n      return false;\n    }\n\n    this._activeObject = object;\n\n    if (isActiveSelection(object) && prevActiveObject !== object) {\n      object.set('canvas', this);\n    }\n    object.setCoords();\n\n    return true;\n  }\n\n  /**\n   * This is supposed to be equivalent to discardActiveObject but without firing\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\n   * This is the functional part of discardActiveObject.\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n   * @param {Object} object the next object to set as active, reason why we are discarding this\n   * @return {Boolean} true if the active object has been discarded\n   */\n  _discardActiveObject(\n    e?: TPointerEvent,\n    object?: FabricObject,\n  ): this is { _activeObject: undefined } {\n    const obj = this._activeObject;\n    if (obj) {\n      // onDeselect return TRUE to cancel selection;\n      if (obj.onDeselect({ e, object })) {\n        return false;\n      }\n      if (this._currentTransform && this._currentTransform.target === obj) {\n        this.endCurrentTransform(e);\n      }\n      if (isActiveSelection(obj) && obj === this._hoveredTarget) {\n        this._hoveredTarget = undefined;\n      }\n      this._activeObject = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Discards currently active object and fire events. If the function is called by fabric\n   * as a consequence of a mouse event, the event is passed as a parameter and\n   * sent to the fire function for the custom events. When used as a method the\n   * e param does not have any application.\n   * @param {event} e\n   * @return {Boolean} true if the active object has been discarded\n   */\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\n    const currentActives = this.getActiveObjects(),\n      activeObject = this.getActiveObject();\n    if (currentActives.length) {\n      this.fire('before:selection:cleared', {\n        e,\n        deselected: [activeObject!],\n      });\n    }\n    const discarded = this._discardActiveObject(e);\n    this._fireSelectionEvents(currentActives, e);\n    return discarded;\n  }\n\n  /**\n   * End the current transform.\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\n   * because of some other event ( a press of key combination, or something that block the user UX )\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  endCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform;\n    this._finalizeCurrentTransform(e);\n    if (transform && transform.target) {\n      // this could probably go inside _finalizeCurrentTransform\n      transform.target.isMoving = false;\n    }\n    this._currentTransform = null;\n  }\n\n  /**\n   * @private\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  _finalizeCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform!,\n      target = transform.target,\n      options = {\n        e,\n        target,\n        transform,\n        action: transform.action,\n      };\n\n    if (target._scaling) {\n      target._scaling = false;\n    }\n\n    target.setCoords();\n\n    if (transform.actionPerformed) {\n      this.fire('object:modified', options);\n      target.fire(MODIFIED, options);\n    }\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    super.setViewportTransform(vpt);\n    const activeObject = this._activeObject;\n    if (activeObject) {\n      activeObject.setCoords();\n    }\n  }\n\n  /**\n   * @override clears active selection ref and interactive canvas elements and contexts\n   */\n  destroy() {\n    // dispose of active selection\n    const activeObject = this._activeObject;\n    if (isActiveSelection(activeObject)) {\n      activeObject.removeAll();\n      activeObject.dispose();\n    }\n\n    delete this._activeObject;\n\n    super.destroy();\n\n    // free resources\n\n    // pixel find canvas\n    // @ts-expect-error disposing\n    this.pixelFindContext = null;\n    // @ts-expect-error disposing\n    this.pixelFindCanvasEl = undefined;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    // discard active object and fire events\n    this.discardActiveObject();\n    // make sure we clear the active object in case it refused to be discarded\n    this._activeObject = undefined;\n    this.clearContext(this.contextTop);\n    super.clear();\n  }\n\n  /**\n   * Draws objects' controls (borders/controls)\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\n   */\n  drawControls(ctx: CanvasRenderingContext2D) {\n    const activeObject = this._activeObject;\n\n    if (activeObject) {\n      activeObject._renderControls(ctx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: 'toObject' | 'toDatalessObject',\n    propertiesToInclude: string[],\n  ): Record<string, any> {\n    // If the object is part of the current selection group, it should\n    // be transformed appropriately\n    // i.e. it should be serialised as it would appear if the selection group\n    // were to be destroyed.\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\n      object = super._toObject(instance, methodName, propertiesToInclude);\n    //Undo the damage we did by changing all of its properties\n    instance.set(originalProperties);\n    return object;\n  }\n\n  /**\n   * Realizes an object's group transformation on it\n   * @private\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\n   * @returns the original values of instance which were changed\n   */\n  private _realizeGroupTransformOnObject(\n    instance: FabricObject,\n  ): Partial<typeof instance> {\n    const { group } = instance;\n    if (group && isActiveSelection(group) && this._activeObject === group) {\n      const layoutProps = [\n        'angle',\n        'flipX',\n        'flipY',\n        LEFT,\n        SCALE_X,\n        SCALE_Y,\n        SKEW_X,\n        SKEW_Y,\n        TOP,\n      ] as (keyof typeof instance)[];\n      const originalValues = pick<typeof instance>(instance, layoutProps);\n      addTransformToObject(instance, group.calcOwnMatrix());\n      return originalValues;\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver?: TSVGReviver,\n  ) {\n    // If the object is in a selection group, simulate what would happen to that\n    // object when the group is deselected\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\n    super._setSVGObject(markup, instance, reviver);\n    instance.set(originalProperties);\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\nimport { removeFromArray } from '../util/internals/removeFromArray';\nimport type { Canvas } from './Canvas';\n\n/**\n * In charge of synchronizing all interactive text instances of a canvas\n */\nexport class TextEditingManager {\n  private targets: ITextBehavior[] = [];\n  private declare target?: ITextBehavior;\n  private __disposer: VoidFunction;\n\n  constructor(canvas: Canvas) {\n    const cb = () => {\n      const { hiddenTextarea } =\n        (canvas.getActiveObject() as ITextBehavior) || {};\n      hiddenTextarea && hiddenTextarea.focus();\n    };\n    const el = canvas.upperCanvasEl;\n    el.addEventListener('click', cb);\n    this.__disposer = () => el.removeEventListener('click', cb);\n  }\n\n  exitTextEditing() {\n    this.target = undefined;\n    this.targets.forEach((target) => {\n      if (target.isEditing) {\n        target.exitEditing();\n      }\n    });\n  }\n\n  add(target: ITextBehavior) {\n    this.targets.push(target);\n  }\n\n  remove(target: ITextBehavior) {\n    this.unregister(target);\n    removeFromArray(this.targets, target);\n  }\n\n  register(target: ITextBehavior) {\n    this.target = target;\n  }\n\n  unregister(target: ITextBehavior) {\n    if (target === this.target) {\n      this.target = undefined;\n    }\n  }\n\n  onMouseMove(e: TPointerEvent) {\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\n  }\n\n  clear() {\n    this.targets = [];\n    this.target = undefined;\n  }\n\n  dispose() {\n    this.clear();\n    this.__disposer();\n    // @ts-expect-error disposing\n    delete this.__disposer;\n  }\n}\n","import { classRegistry } from '../ClassRegistry';\nimport { NONE } from '../constants';\nimport type {\n  CanvasEvents,\n  DragEventData,\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventNames,\n  Transform,\n} from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\nimport type { Group } from '../shapes/Group';\nimport type { IText } from '../shapes/IText/IText';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { isActiveSelection } from '../util/typeAssertions';\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\nimport { SelectableCanvas } from './SelectableCanvas';\nimport { TextEditingManager } from './TextEditingManager';\n\nconst addEventOptions = { passive: false } as EventListenerOptions;\n\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\n  const viewportPoint = canvas.getViewportPoint(e);\n  const scenePoint = canvas.getScenePoint(e);\n  return {\n    viewportPoint,\n    scenePoint,\n    pointer: viewportPoint,\n    absolutePointer: scenePoint,\n  };\n};\n\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\n// few bytes but why give it away.\nconst addListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['addEventListener']>\n) => el.addEventListener(...args);\nconst removeListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['removeEventListener']>\n) => el.removeEventListener(...args);\n\nconst syntheticEventConfig = {\n  mouse: {\n    in: 'over',\n    out: 'out',\n    targetIn: 'mouseover',\n    targetOut: 'mouseout',\n    canvasIn: 'mouse:over',\n    canvasOut: 'mouse:out',\n  },\n  drag: {\n    in: 'enter',\n    out: 'leave',\n    targetIn: 'dragenter',\n    targetOut: 'dragleave',\n    canvasIn: 'drag:enter',\n    canvasOut: 'drag:leave',\n  },\n} as const;\n\ntype TSyntheticEventContext = {\n  mouse: { e: TPointerEvent };\n  drag: DragEventData;\n};\n\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\n  /**\n   * Contains the id of the touch event that owns the fabric transform\n   * @type Number\n   * @private\n   */\n  declare mainTouchId?: number;\n\n  declare enablePointerEvents: boolean;\n\n  /**\n   * Holds a reference to a setTimeout timer for event synchronization\n   * @type number\n   * @private\n   */\n  private declare _willAddMouseDown: number;\n\n  /**\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\n   * @type FabricObject\n   * @private\n   */\n  private declare _draggedoverTarget?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas from where the drag operation started\n   * @type FabricObject\n   * @private\n   */\n  private declare _dragSource?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas that is the current drop target\n   * May differ from {@link _draggedoverTarget}\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\n   * @type FabricObject\n   * @private\n   */\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\n\n  private _isClick: boolean;\n\n  textEditingManager = new TextEditingManager(this);\n\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\n    super(el, options);\n    // bind event handlers\n    (\n      [\n        '_onMouseDown',\n        '_onTouchStart',\n        '_onMouseMove',\n        '_onMouseUp',\n        '_onTouchEnd',\n        '_onResize',\n        // '_onGesture',\n        // '_onDrag',\n        // '_onShake',\n        // '_onLongPress',\n        // '_onOrientationChange',\n        '_onMouseWheel',\n        '_onMouseOut',\n        '_onMouseEnter',\n        '_onContextMenu',\n        '_onDoubleClick',\n        '_onDragStart',\n        '_onDragEnd',\n        '_onDragProgress',\n        '_onDragOver',\n        '_onDragEnter',\n        '_onDragLeave',\n        '_onDrop',\n      ] as (keyof this)[]\n    ).forEach((eventHandler) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\n    });\n    // register event handlers\n    this.addOrRemove(addListener, 'add');\n  }\n\n  /**\n   * return an event prefix pointer or mouse.\n   * @private\n   */\n  private _getEventPrefix() {\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\n  }\n\n  addOrRemove(functor: any, _eventjsFunctor: 'add' | 'remove') {\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    functor(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove,\n      addEventOptions,\n    );\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\n    functor(canvasElement, 'wheel', this._onMouseWheel);\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\n    functor(canvasElement, 'dblclick', this._onDoubleClick);\n    functor(canvasElement, 'dragstart', this._onDragStart);\n    functor(canvasElement, 'dragend', this._onDragEnd);\n    functor(canvasElement, 'dragover', this._onDragOver);\n    functor(canvasElement, 'dragenter', this._onDragEnter);\n    functor(canvasElement, 'dragleave', this._onDragLeave);\n    functor(canvasElement, 'drop', this._onDrop);\n    if (!this.enablePointerEvents) {\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n    }\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n    //   eventjs[eventjsFunctor](\n    //     canvasElement,\n    //     'orientation',\n    //     this._onOrientationChange\n    //   );\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n    // }\n  }\n\n  /**\n   * Removes all event listeners, used when disposing the instance\n   */\n  removeListeners() {\n    this.addOrRemove(removeListener, 'remove');\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      `${eventTypePrefix}up`,\n      this._onMouseUp as EventListener,\n    );\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    clearTimeout(this._willAddMouseDown);\n  }\n\n  /**\n   * @private\n   * @param {Event} [e] Event object fired on wheel event\n   */\n  private _onMouseWheel(e: MouseEvent) {\n    this.__onMouseWheel(e);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onMouseOut(e: TPointerEvent) {\n    const target = this._hoveredTarget;\n    const shared = {\n      e,\n      ...getEventPoints(this, e),\n    };\n    this.fire('mouse:out', { ...shared, target });\n    this._hoveredTarget = undefined;\n    target && target.fire('mouseout', { ...shared });\n    this._hoveredTargets.forEach((nestedTarget) => {\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\n    });\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseenter\n   */\n  private _onMouseEnter(e: TPointerEvent) {\n    // This find target and consequent 'mouse:over' is used to\n    // clear old instances on hovered target.\n    // calling findTarget has the side effect of killing target.__corner.\n    // as a short term fix we are not firing this if we are currently transforming.\n    // as a long term fix we need to separate the action of finding a target with the\n    // side effects we added to it.\n    if (!this._currentTransform && !this.findTarget(e)) {\n      this.fire('mouse:over', {\n        e,\n        ...getEventPoints(this, e),\n      });\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n  }\n\n  /**\n   * supports native like text dragging\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragStart(e: DragEvent) {\n    this._isClick = false;\n    const activeObject = this.getActiveObject();\n    if (activeObject && activeObject.onDragStart(e)) {\n      this._dragSource = activeObject;\n      const options = { e, target: activeObject };\n      this.fire('dragstart', options);\n      activeObject.fire('dragstart', options);\n      addListener(\n        this.upperCanvasEl,\n        'drag',\n        this._onDragProgress as EventListener,\n      );\n      return;\n    }\n    stopEvent(e);\n  }\n\n  /**\n   * First we clear top context where the effects are being rendered.\n   * Then we render the effects.\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\n   * @private\n   */\n  private _renderDragEffects(\n    e: DragEvent,\n    source?: FabricObject,\n    target?: FabricObject,\n  ) {\n    let dirty = false;\n    // clear top context\n    const dropTarget = this._dropTarget;\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\n      dropTarget.clearContextTop();\n      dirty = true;\n    }\n    source?.clearContextTop();\n    target !== source && target?.clearContextTop();\n    // render effects\n    const ctx = this.contextTop;\n    ctx.save();\n    ctx.transform(...this.viewportTransform);\n    if (source) {\n      ctx.save();\n      source.transform(ctx);\n      source.renderDragSourceEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    if (target) {\n      ctx.save();\n      target.transform(ctx);\n      target.renderDropTargetEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    ctx.restore();\n    dirty && (this.contextTopDirty = true);\n  }\n\n  /**\n   * supports native like text dragging\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragEnd(e: DragEvent) {\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\n      dropTarget = didDrop ? this._activeObject : undefined,\n      options = {\n        e,\n        target: this._dragSource as FabricObject,\n        subTargets: this.targets,\n        dragSource: this._dragSource as FabricObject,\n        didDrop,\n        dropTarget: dropTarget as FabricObject,\n      };\n    removeListener(\n      this.upperCanvasEl,\n      'drag',\n      this._onDragProgress as EventListener,\n    );\n    this.fire('dragend', options);\n    this._dragSource && this._dragSource.fire('dragend', options);\n    delete this._dragSource;\n    // we need to call mouse up synthetically because the browser won't\n    this._onMouseUp(e);\n  }\n\n  /**\n   * fire `drag` event on canvas and drag source\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragProgress(e: DragEvent) {\n    const options = {\n      e,\n      target: this._dragSource as FabricObject | undefined,\n      dragSource: this._dragSource as FabricObject | undefined,\n      dropTarget: this._draggedoverTarget as FabricObject,\n    };\n    this.fire('drag', options);\n    this._dragSource && this._dragSource.fire('drag', options);\n  }\n\n  /**\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\n   * Override at will\n   */\n  protected findDragTargets(e: DragEvent) {\n    this.targets = [];\n    const target = this._searchPossibleTargets(\n      this._objects,\n      this.getViewportPoint(e),\n    );\n    return {\n      target,\n      targets: [...this.targets],\n    };\n  }\n\n  /**\n   * prevent default to allow drop event to be fired\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n   * @private\n   * @param {DragEvent} [e] Event object fired on Event.js shake\n   */\n  private _onDragOver(e: DragEvent) {\n    const eventType = 'dragover';\n    const { target, targets } = this.findDragTargets(e);\n    const dragSource = this._dragSource as FabricObject;\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource,\n      canDrop: false,\n      dropTarget: undefined,\n    };\n    let dropTarget;\n    //  fire on canvas\n    this.fire(eventType, options);\n    //  make sure we fire dragenter events before dragover\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\n    this._fireEnterLeaveEvents(target, options);\n    if (target) {\n      if (target.canDrop(e)) {\n        dropTarget = target;\n      }\n      target.fire(eventType, options);\n    }\n    //  propagate the event to subtargets\n    for (let i = 0; i < targets.length; i++) {\n      const subTarget = targets[i];\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\n      // TODO: verify if those should loop in inverse order then?\n      // what is the order of subtargets?\n      if (subTarget.canDrop(e)) {\n        dropTarget = subTarget;\n      }\n      subTarget.fire(eventType, options);\n    }\n    //  render drag effects now that relations between source and target is clear\n    this._renderDragEffects(e, dragSource, dropTarget);\n    this._dropTarget = dropTarget;\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragEnter(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragenter', options);\n    //  fire dragenter on targets\n    this._fireEnterLeaveEvents(target, options);\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragLeave(e: DragEvent) {\n    const options = {\n      e,\n      target: this._draggedoverTarget,\n      subTargets: this.targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragleave', options);\n\n    //  fire dragleave on targets\n    this._fireEnterLeaveEvents(undefined, options);\n    this._renderDragEffects(e, this._dragSource);\n    this._dropTarget = undefined;\n    //  clear targets\n    this.targets = [];\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * `drop:before` is a an event that allows you to schedule logic\n   * before the `drop` event. Prefer `drop` event always, but if you need\n   * to run some drop-disabling logic on an event, since there is no way\n   * to handle event handlers ordering, use `drop:before`\n   * @private\n   * @param {Event} e\n   */\n  private _onDrop(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = this._basicEventHandler('drop:before', {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n      ...getEventPoints(this, e),\n    });\n    //  will be set by the drop target\n    options.didDrop = false;\n    //  will be set by the drop target, used in case options.target refuses the drop\n    options.dropTarget = undefined;\n    //  fire `drop`\n    this._basicEventHandler('drop', options);\n    //  inform canvas of the drop\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\n    //  use for side effects\n    this.fire('drop:after', options);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onContextMenu(e: TPointerEvent): false {\n    const target = this.findTarget(e),\n      subTargets = this.targets || [];\n    const options = this._basicEventHandler('contextmenu:before', {\n      e,\n      target,\n      subTargets,\n    });\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\n    this.stopContextMenu && stopEvent(e);\n    this._basicEventHandler('contextmenu', options);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onDoubleClick(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'dblclick');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Return a the id of an event.\n   * returns either the pointerId or the identifier or 0 for the mouse event\n   * @private\n   * @param {Event} evt Event object\n   */\n  getPointerId(evt: TouchEvent | PointerEvent): number {\n    const changedTouches = (evt as TouchEvent).changedTouches;\n\n    if (changedTouches) {\n      return changedTouches[0] && changedTouches[0].identifier;\n    }\n\n    if (this.enablePointerEvents) {\n      return (evt as PointerEvent).pointerId;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines if an event has the id of the event that is considered main\n   * @private\n   * @param {evt} event Event object\n   */\n  _isMainEvent(evt: TPointerEvent): boolean {\n    if ((evt as PointerEvent).isPrimary === true) {\n      return true;\n    }\n    if ((evt as PointerEvent).isPrimary === false) {\n      return false;\n    }\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\n      return true;\n    }\n    if ((evt as TouchEvent).changedTouches) {\n      return (\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchStart(e: TouchEvent) {\n    // we will prevent scrolling if allowTouchScrolling is not enabled and\n    let shouldPreventScrolling = !this.allowTouchScrolling;\n    const currentActiveObject = this._activeObject;\n    if (this.mainTouchId === undefined) {\n      this.mainTouchId = this.getPointerId(e);\n    }\n    this.__onMouseDown(e);\n    // after executing fabric logic for mouse down let's see\n    // if we didn't change target or if we are drawing\n    // we want to prevent scrolling anyway\n    if (\n      this.isDrawingMode ||\n      (currentActiveObject && this._target === currentActiveObject)\n    ) {\n      shouldPreventScrolling = true;\n    }\n    // prevent default, will block scrolling from start\n    shouldPreventScrolling && e.preventDefault();\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    // if we scroll don't register the touch move event\n    shouldPreventScrolling &&\n      addListener(\n        doc,\n        'touchmove',\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    // Unbind mousedown to prevent double triggers from touch devices\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}down`,\n      this._onMouseDown as EventListener,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDown(e: TPointerEvent) {\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\n    addListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchEnd(e: TouchEvent) {\n    if (e.touches.length > 0) {\n      // if there are still touches stop here\n      return;\n    }\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    delete this.mainTouchId;\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions,\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions,\n    );\n    if (this._willAddMouseDown) {\n      clearTimeout(this._willAddMouseDown);\n    }\n    this._willAddMouseDown = setTimeout(() => {\n      // Wait 400ms before rebinding mousedown to prevent double triggers\n      // from touch devices\n      addListener(\n        this.upperCanvasEl,\n        `${eventTypePrefix}down`,\n        this._onMouseDown as EventListener,\n      );\n      this._willAddMouseDown = 0;\n    }, 400) as unknown as number;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUp(e: TPointerEvent) {\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    if (this._isMainEvent(e)) {\n      const doc = getDocumentFromElement(this.upperCanvasEl);\n      removeListener(\n        doc,\n        `${eventTypePrefix}up`,\n        this._onMouseUp as EventListener,\n      );\n      removeListener(\n        doc,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n      addListener(\n        canvasElement,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions,\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMove(e: TPointerEvent) {\n    const activeObject = this.getActiveObject();\n    !this.allowTouchScrolling &&\n      (!activeObject ||\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\n        // we must not prevent the event's default behavior in order for the window to start dragging\n        !activeObject.shouldStartDragging(e)) &&\n      e.preventDefault &&\n      e.preventDefault();\n    this.__onMouseMove(e);\n  }\n\n  /**\n   * @private\n   */\n  _onResize() {\n    this.calcOffset();\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n   * @private\n   * @param {Object} target\n   */\n  _shouldRender(target: FabricObject | undefined) {\n    const activeObject = this.getActiveObject();\n    // if just one of them is available or if they are both but are different objects\n    // this covers: switch of target, from target to no target, selection of target\n    // multiSelection with key and mouse\n    return (\n      !!activeObject !== !!target ||\n      (activeObject && target && activeObject !== target)\n    );\n  }\n\n  /**\n   * Method that defines the actions when mouse is released on canvas.\n   * The method resets the currentTransform parameters, store the image corner\n   * position in the image object and render the canvas on top.\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseUp(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'up:before');\n\n    const transform = this._currentTransform;\n    const isClick = this._isClick;\n    const target = this._target;\n\n    // if right/middle click just fire events and return\n    // target undefined will make the _handleEvent search the target\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'up');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this._onMouseUpInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n    let shouldRender = false;\n    if (transform) {\n      this._finalizeCurrentTransform(e);\n      shouldRender = transform.actionPerformed;\n    }\n    if (!isClick) {\n      const targetWasActive = target === this._activeObject;\n      this.handleSelection(e);\n      if (!shouldRender) {\n        shouldRender =\n          this._shouldRender(target) ||\n          (!targetWasActive && target === this._activeObject);\n      }\n    }\n    let pointer, corner;\n    if (target) {\n      const found = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      const { key, control } = found || {};\n      corner = key;\n      if (\n        target.selectable &&\n        target !== this._activeObject &&\n        target.activeOn === 'up'\n      ) {\n        this.setActiveObject(target, e);\n        shouldRender = true;\n      } else if (control) {\n        const mouseUpHandler = control.getMouseUpHandler(e, target, control);\n        if (mouseUpHandler) {\n          pointer = this.getScenePoint(e);\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\n        }\n      }\n      target.isMoving = false;\n    }\n    // if we are ending up a transform on a different control or a new object\n    // fire the original mouse up from the corner that started the transform\n    if (\n      transform &&\n      (transform.target !== target || transform.corner !== corner)\n    ) {\n      const originalControl =\n          transform.target && transform.target.controls[transform.corner],\n        originalMouseUpHandler =\n          originalControl &&\n          originalControl.getMouseUpHandler(\n            e,\n            transform.target,\n            originalControl,\n          );\n      pointer = pointer || this.getScenePoint(e);\n      originalMouseUpHandler &&\n        originalMouseUpHandler.call(\n          originalControl,\n          e,\n          transform,\n          pointer.x,\n          pointer.y,\n        );\n    }\n    this._setCursorFromEvent(e, target);\n    this._handleEvent(e, 'up');\n    this._groupSelector = null;\n    this._currentTransform = null;\n    // reset the target information about which corner is selected\n    target && (target.__corner = undefined);\n    if (shouldRender) {\n      this.requestRenderAll();\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\n      this.renderTop();\n    }\n  }\n\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\n    eventType: T,\n    options: (CanvasEvents & ObjectEvents)[T],\n  ) {\n    const { target, subTargets = [] } = options as {\n      target?: FabricObject;\n      subTargets: FabricObject[];\n    };\n    this.fire(eventType, options);\n    target && target.fire(eventType, options);\n    for (let i = 0; i < subTargets.length; i++) {\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\n    }\n    return options;\n  }\n\n  /**\n   * @private\n   * Handle event firing for target and subtargets\n   * @param {TPointerEvent} e event from mouse\n   * @param {TPointerEventNames} eventType\n   */\n  _handleEvent<T extends TPointerEventNames>(e: TPointerEvent, eventType: T) {\n    const target = this._target,\n      targets = this.targets || [],\n      options: CanvasEvents[`mouse:${T}`] = {\n        e,\n        target,\n        subTargets: targets,\n        ...getEventPoints(this, e),\n        transform: this._currentTransform,\n        ...(eventType === 'up:before' || eventType === 'up'\n          ? {\n              isClick: this._isClick,\n              currentTarget: this.findTarget(e),\n              // set by the preceding `findTarget` call\n              currentSubTargets: this.targets,\n            }\n          : {}),\n      } as CanvasEvents[`mouse:${T}`];\n    this.fire(`mouse:${eventType}`, options);\n    // this may be a little be more complicated of what we want to handle\n    target && target.fire(`mouse${eventType}`, options);\n    for (let i = 0; i < targets.length; i++) {\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\n    this._isCurrentlyDrawing = true;\n    if (this.getActiveObject()) {\n      this.discardActiveObject(e);\n      this.requestRenderAll();\n    }\n    // TODO: this is a scene point so it should be renamed\n    const pointer = this.getScenePoint(e);\n    this.freeDrawingBrush &&\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\n    this._handleEvent(e, 'down');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\n    if (this._isCurrentlyDrawing) {\n      const pointer = this.getScenePoint(e);\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e,\n          // this is an absolute pointer, the naming is wrong\n          pointer,\n        });\n    }\n    this.setCursor(this.freeDrawingCursor);\n    this._handleEvent(e, 'move');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\n    const pointer = this.getScenePoint(e);\n    if (this.freeDrawingBrush) {\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\n        e: e,\n        // this is an absolute pointer, the naming is wrong\n        pointer,\n      });\n    } else {\n      this._isCurrentlyDrawing = false;\n    }\n    this._handleEvent(e, 'up');\n  }\n\n  /**\n   * Method that defines the actions when mouse is clicked on canvas.\n   * The method inits the currentTransform parameters and renders all the\n   * canvas so the current image can be placed on the top canvas and the rest\n   * in on the container one.\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  __onMouseDown(e: TPointerEvent) {\n    this._isClick = true;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'down:before');\n\n    let target: FabricObject | undefined = this._target;\n\n    // if right/middle click just fire events\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'down');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode) {\n      this._onMouseDownInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    // ignore if some object is being transformed at this moment\n    if (this._currentTransform) {\n      return;\n    }\n\n    let shouldRender = this._shouldRender(target);\n    let grouped = false;\n    if (this.handleMultiSelection(e, target)) {\n      // active object might have changed while grouping\n      target = this._activeObject;\n      grouped = true;\n      shouldRender = true;\n    } else if (this._shouldClearSelection(e, target)) {\n      this.discardActiveObject(e);\n    }\n    // we start a group selector rectangle if\n    // selection is enabled\n    // and there is no target, or the following 3 conditions are satisfied:\n    // target is not selectable ( otherwise we selected it )\n    // target is not editing\n    // target is not already selected ( otherwise we drag )\n    if (\n      this.selection &&\n      (!target ||\n        (!target.selectable &&\n          !(target as IText).isEditing &&\n          target !== this._activeObject))\n    ) {\n      const p = this.getScenePoint(e);\n      this._groupSelector = {\n        x: p.x,\n        y: p.y,\n        deltaY: 0,\n        deltaX: 0,\n      };\n    }\n\n    if (target) {\n      const alreadySelected = target === this._activeObject;\n      if (target.selectable && target.activeOn === 'down') {\n        this.setActiveObject(target, e);\n      }\n      const handle = target.findControl(\n        this.getViewportPoint(e),\n        isTouchEvent(e),\n      );\n      if (target === this._activeObject && (handle || !grouped)) {\n        this._setupCurrentTransform(e, target, alreadySelected);\n        const control = handle ? handle.control : undefined,\n          pointer = this.getScenePoint(e),\n          mouseDownHandler =\n            control && control.getMouseDownHandler(e, target, control);\n        mouseDownHandler &&\n          mouseDownHandler.call(\n            control,\n            e,\n            this._currentTransform!,\n            pointer.x,\n            pointer.y,\n          );\n      }\n    }\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\n    shouldRender && (this._objectsToRender = undefined);\n    this._handleEvent(e, 'down');\n    // we must renderAll so that we update the visuals\n    shouldRender && this.requestRenderAll();\n  }\n\n  /**\n   * reset cache form common information needed during event processing\n   * @private\n   */\n  _resetTransformEventData() {\n    this._target = undefined;\n    this._pointer = undefined;\n    this._absolutePointer = undefined;\n  }\n\n  /**\n   * Cache common information needed during event processing\n   * @private\n   * @param {Event} e Event object fired on event\n   */\n  _cacheTransformEventData(e: TPointerEvent) {\n    // reset in order to avoid stale caching\n    this._resetTransformEventData();\n    this._pointer = this.getViewportPoint(e);\n    this._absolutePointer = sendPointToPlane(\n      this._pointer,\n      undefined,\n      this.viewportTransform,\n    );\n    this._target = this._currentTransform\n      ? this._currentTransform.target\n      : this.findTarget(e);\n  }\n\n  /**\n   * Method that defines the actions when mouse is hovering the canvas.\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\n   * all any other type of action.\n   * In case of an image transformation only the top canvas will be rendered.\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  __onMouseMove(e: TPointerEvent) {\n    this._isClick = false;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'move:before');\n\n    if (this.isDrawingMode) {\n      this._onMouseMoveInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    const groupSelector = this._groupSelector;\n\n    // We initially clicked in an empty area, so we draw a box for multiple selection\n    if (groupSelector) {\n      const pointer = this.getScenePoint(e);\n\n      groupSelector.deltaX = pointer.x - groupSelector.x;\n      groupSelector.deltaY = pointer.y - groupSelector.y;\n\n      this.renderTop();\n    } else if (!this._currentTransform) {\n      const target = this.findTarget(e);\n      this._setCursorFromEvent(e, target);\n      this._fireOverOutEvents(e, target);\n    } else {\n      this._transformObject(e);\n    }\n    this.textEditingManager.onMouseMove(e);\n    this._handleEvent(e, 'move');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\n   * @param {Fabric.Object} target the target where the target from the mousemove event\n   * @param {Event} e Event object fired on mousemove\n   * @private\n   */\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\n    const _hoveredTarget = this._hoveredTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('mouse', {\n      e,\n      target,\n      oldTarget: _hoveredTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('mouse', {\n        e,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._hoveredTarget = target;\n    this._hoveredTargets = this.targets.concat();\n  }\n\n  /**\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the onDrag event\n   * @param {Object} data Event object fired on dragover\n   * @private\n   */\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\n    const draggedoverTarget = this._draggedoverTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('drag', {\n      ...data,\n      target,\n      oldTarget: draggedoverTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('drag', {\n        ...data,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._draggedoverTarget = target;\n  }\n\n  /**\n   * Manage the synthetic in/out events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the supported events\n   * @param {Object} data Event object fired\n   * @param {Object} config configuration for the function to work\n   * @param {String} config.targetName property on the canvas where the old target is stored\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n   * @param {String} config.evtOut name of the event to fire for out\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n   * @param {String} config.evtIn name of the event to fire for in\n   * @private\n   */\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\n    type: T,\n    {\n      target,\n      oldTarget,\n      fireCanvas,\n      e,\n      ...data\n    }: TSyntheticEventContext[T] & {\n      target?: FabricObject;\n      oldTarget?: FabricObject;\n      fireCanvas?: boolean;\n    },\n  ) {\n    const { targetIn, targetOut, canvasIn, canvasOut } =\n      syntheticEventConfig[type];\n    const targetChanged = oldTarget !== target;\n\n    if (oldTarget && targetChanged) {\n      const outOpt: CanvasEvents[typeof canvasOut] = {\n        ...data,\n        e,\n        target: oldTarget,\n        nextTarget: target,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasOut, outOpt);\n      oldTarget.fire(targetOut, outOpt);\n    }\n    if (target && targetChanged) {\n      const inOpt: CanvasEvents[typeof canvasIn] = {\n        ...data,\n        e,\n        target,\n        previousTarget: oldTarget,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasIn, inOpt);\n      target.fire(targetIn, inOpt);\n    }\n  }\n\n  /**\n   * Method that defines actions when an Event Mouse Wheel\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseWheel(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'wheel');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event fired on mousemove\n   */\n  _transformObject(e: TPointerEvent) {\n    const scenePoint = this.getScenePoint(e),\n      transform = this._currentTransform!,\n      target = transform.target,\n      //  transform pointer to target's containing coordinate plane\n      //  both pointer and object should agree on every point\n      localPointer = target.group\n        ? sendPointToPlane(\n            scenePoint,\n            undefined,\n            target.group.calcTransformMatrix(),\n          )\n        : scenePoint;\n    transform.shiftKey = e.shiftKey;\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\n\n    this._performTransformAction(e, transform, localPointer);\n    transform.actionPerformed && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   */\n  _performTransformAction(\n    e: TPointerEvent,\n    transform: Transform,\n    pointer: Point,\n  ) {\n    const { action, actionHandler, target } = transform;\n\n    const actionPerformed =\n      !!actionHandler && actionHandler(e, transform, pointer.x, pointer.y);\n    actionPerformed && target.setCoords();\n\n    // this object could be created from the function in the control handlers\n    if (action === 'drag' && actionPerformed) {\n      transform.target.isMoving = true;\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\n    }\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\n  }\n\n  /**\n   * Sets the cursor depending on where the canvas is being hovered.\n   * Note: very buggy in Opera\n   * @param {Event} e Event object\n   * @param {Object} target Object that the mouse is hovering, if so.\n   */\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\n    if (!target) {\n      this.setCursor(this.defaultCursor);\n      return;\n    }\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\n    const activeSelection = isActiveSelection(this._activeObject)\n        ? this._activeObject\n        : null,\n      // only show proper corner when group selection is not active\n      corner =\n        (!activeSelection || target.group !== activeSelection) &&\n        // here we call findTargetCorner always with undefined for the touch parameter.\n        // we assume that if you are using a cursor you do not need to interact with\n        // the bigger touch area.\n        target.findControl(this.getViewportPoint(e));\n\n    if (!corner) {\n      if ((target as Group).subTargetCheck) {\n        // hoverCursor should come from top-most subTarget,\n        // so we walk the array backwards\n        this.targets\n          .concat()\n          .reverse()\n          .map((_target) => {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n      }\n      this.setCursor(hoverCursor);\n    } else {\n      const control = corner.control;\n      this.setCursor(control.cursorStyleHandler(e, control, target));\n    }\n  }\n\n  /**\n   * ## Handles multiple selection\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\n   * ---\n   * - If the active object is the active selection we add/remove `target` from it\n   * - If not, add the active object and `target` to the active selection and make it the active object.\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target target of event to select/deselect\n   * @returns true if grouping occurred\n   */\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\n    const activeObject = this._activeObject;\n    const isAS = isActiveSelection(activeObject);\n    if (\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\n      !!activeObject &&\n      this._isSelectionKeyPressed(e) &&\n      this.selection &&\n      // on top of that the user also has to hit a target that is selectable.\n      !!target &&\n      target.selectable &&\n      // group target and active object only if they are different objects\n      // else we try to find a subtarget of `ActiveSelection`\n      (activeObject !== target || isAS) &&\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\n      // if it is then we want to remove `target` from it\n      (isAS ||\n        (!target.isDescendantOf(activeObject) &&\n          !activeObject.isDescendantOf(target))) &&\n      //  target accepts selection\n      !target.onSelect({ e }) &&\n      // make sure we are not on top of a control\n      !activeObject.getActiveControl()\n    ) {\n      if (isAS) {\n        const prevActiveObjects = activeObject.getObjects();\n        if (target === activeObject) {\n          const pointer = this.getViewportPoint(e);\n          target =\n            // first search active objects for a target to remove\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\n            //  if not found, search under active selection for a target to add\n            // `prevActiveObjects` will be searched but we already know they will not be found\n            this.searchPossibleTargets(this._objects, pointer);\n          // if nothing is found bail out\n          if (!target || !target.selectable) {\n            return false;\n          }\n        }\n        if (target.group === activeObject) {\n          // `target` is part of active selection => remove it\n          activeObject.remove(target);\n          this._hoveredTarget = target;\n          this._hoveredTargets = [...this.targets];\n          // if after removing an object we are left with one only...\n          if (activeObject.size() === 1) {\n            // activate last remaining object\n            // deselecting the active selection will remove the remaining object from it\n            this._setActiveObject(activeObject.item(0), e);\n          }\n        } else {\n          // `target` isn't part of active selection => add it\n          activeObject.multiSelectAdd(target);\n          this._hoveredTarget = activeObject;\n          this._hoveredTargets = [...this.targets];\n        }\n        this._fireSelectionEvents(prevActiveObjects, e);\n      } else {\n        (activeObject as IText).isEditing &&\n          (activeObject as IText).exitEditing();\n        // add the active object and the target to the active selection and set it as the active object\n        const klass =\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n        const newActiveSelection = new klass([], {\n          /**\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\n           */\n          canvas: this,\n        });\n        newActiveSelection.multiSelectAdd(activeObject, target);\n        this._hoveredTarget = newActiveSelection;\n        // ISSUE 4115: should we consider subTargets here?\n        // this._hoveredTargets = [];\n        // this._hoveredTargets = this.targets.concat();\n        this._setActiveObject(newActiveSelection, e);\n        this._fireSelectionEvents([activeObject], e);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ## Handles selection\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\n   * - sets the active object\n   * ---\n   * runs on mouse up after a mouse move\n   */\n  protected handleSelection(e: TPointerEvent) {\n    if (!this.selection || !this._groupSelector) {\n      return false;\n    }\n    const { x, y, deltaX, deltaY } = this._groupSelector,\n      point1 = new Point(x, y),\n      point2 = point1.add(new Point(deltaX, deltaY)),\n      tl = point1.min(point2),\n      br = point1.max(point2),\n      size = br.subtract(tl);\n\n    const collectedObjects = this.collectObjects(\n      {\n        left: tl.x,\n        top: tl.y,\n        width: size.x,\n        height: size.y,\n      },\n      { includeIntersecting: !this.selectionFullyContained },\n    ) as FabricObject[];\n\n    const objects =\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\n      // should it be handled as is?\n      point1.eq(point2)\n        ? collectedObjects[0]\n          ? [collectedObjects[0]]\n          : []\n        : collectedObjects.length > 1\n          ? collectedObjects\n              .filter((object) => !object.onSelect({ e }))\n              .reverse()\n          : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\n            collectedObjects;\n\n    // set active object\n    if (objects.length === 1) {\n      // set as active object\n      this.setActiveObject(objects[0], e);\n    } else if (objects.length > 1) {\n      // add to active selection and make it the active object\n      const klass =\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\n    }\n\n    // cleanup\n    this._groupSelector = null;\n    return true;\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  clear() {\n    this.textEditingManager.clear();\n    super.clear();\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  destroy() {\n    this.removeListeners();\n    this.textEditingManager.dispose();\n    super.destroy();\n  }\n}\n","export const linearDefaultCoords = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n};\n\nexport const radialDefaultCoords = {\n  ...linearDefaultCoords,\n  r1: 0,\n  r2: 0,\n};\n","/**\n *\n * @param value value to check if NaN\n * @param [valueIfNaN]\n * @returns `fallback` is `value is NaN\n */\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\n};\n","import { ifNaN } from '../util/internals/ifNaN';\nimport { capValue } from '../util/misc/capValue';\n\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\n\nexport function isPercent(value: string | null) {\n  return value && RE_PERCENT.test(value);\n}\n\n/**\n *\n * @param value\n * @param valueIfNaN\n * @returns ∈ [0, 1]\n */\nexport function parsePercent(\n  value: string | number | null | undefined,\n  valueIfNaN?: number,\n) {\n  const parsed =\n    typeof value === 'number'\n      ? value\n      : typeof value === 'string'\n        ? parseFloat(value) / (isPercent(value) ? 100 : 1)\n        : NaN;\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\n}\n","import { Color } from '../../color/Color';\nimport { parsePercent } from '../../parser/percent';\nimport { ifNaN } from '../../util/internals/ifNaN';\nimport type { ColorStop } from '../typedefs';\n\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\nconst RE_KEY_VALUE = /\\s*:\\s*/;\n\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\n  let colorValue, opacity;\n  const style = el.getAttribute('style');\n  if (style) {\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\n\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\n      keyValuePairs.pop();\n    }\n\n    for (let i = keyValuePairs.length; i--; ) {\n      const [key, value] = keyValuePairs[i]\n        .split(RE_KEY_VALUE)\n        .map((s) => s.trim());\n      if (key === 'stop-color') {\n        colorValue = value;\n      } else if (key === 'stop-opacity') {\n        opacity = value;\n      }\n    }\n  }\n\n  const color = new Color(\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)',\n  );\n\n  return {\n    offset: parsePercent(el.getAttribute('offset'), 0),\n    color: color.toRgb(),\n    opacity:\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\n      color.getAlpha() *\n      multiplier,\n  };\n}\n\nexport function parseColorStops(\n  el: SVGGradientElement,\n  opacityAttr: string | null,\n) {\n  const colorStops: ColorStop[] = [],\n    colorStopEls = el.getElementsByTagName('stop'),\n    multiplier = parsePercent(opacityAttr, 1);\n  for (let i = colorStopEls.length; i--; ) {\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\n  }\n  return colorStops;\n}\n","import type { GradientType, GradientUnits } from '../typedefs';\n\nexport function parseType(el: SVGGradientElement): GradientType {\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\n    ? 'linear'\n    : 'radial';\n}\n\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\n    ? 'pixels'\n    : 'percentage';\n}\n","import { isPercent } from '../../parser/percent';\nimport type { TSize } from '../../typedefs';\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\nimport { parseGradientUnits, parseType } from './misc';\n\nfunction convertPercentUnitsToValues<\n  T extends GradientType,\n  K extends keyof GradientCoords<T>,\n>(\n  valuesToConvert: Record<K, string | number>,\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits },\n) {\n  let finalValue;\n  return (Object.keys(valuesToConvert) as K[]).reduce(\n    (acc, prop) => {\n      const propValue = valuesToConvert[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      } else if (propValue === '-Infinity') {\n        finalValue = 0;\n      } else {\n        finalValue =\n          typeof propValue === 'string' ? parseFloat(propValue) : propValue;\n        if (typeof propValue === 'string' && isPercent(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= height;\n            }\n          }\n        }\n      }\n      acc[prop] = finalValue;\n      return acc;\n    },\n    {} as Record<K, number>,\n  );\n}\n\nfunction getValue(el: SVGGradientElement, key: string) {\n  return el.getAttribute(key);\n}\n\nexport function parseLinearCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'x1') || 0,\n    y1: getValue(el, 'y1') || 0,\n    x2: getValue(el, 'x2') || '100%',\n    y2: getValue(el, 'y2') || 0,\n  };\n}\n\nexport function parseRadialCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\n    r1: 0,\n    x2: getValue(el, 'cx') || '50%',\n    y2: getValue(el, 'cy') || '50%',\n    r2: getValue(el, 'r') || '50%',\n  };\n}\n\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\n  return convertPercentUnitsToValues(\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\n    {\n      ...size,\n      gradientUnits: parseGradientUnits(el),\n    },\n  );\n}\n","import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear',\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor(options: GradientOptions<T>) {\n    const {\n      type = 'linear' as T,\n      gradientUnits = 'pixels',\n      coords = {},\n      colorStops = [],\n      offsetX = 0,\n      offsetY = 0,\n      gradientTransform,\n      id,\n    } = options || {};\n    Object.assign(this, {\n      type,\n      gradientUnits,\n      coords: {\n        ...(type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n        ...coords,\n      },\n      colorStops,\n      offsetX,\n      offsetY,\n      gradientTransform,\n      id: id ? `${id}_${uid()}` : uid(),\n    });\n  }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: { ...this.coords },\n      colorStops: this.colorStops.map((colorStop) => ({ ...colorStop })),\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    {\n      additionalTransform: preTransform,\n    }: { additionalTransform?: string } = {},\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n',\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n',\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n',\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n',\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const { x1, y1, x2, y2, r1, r2 } = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(x1, y1, x2, y2)\n        : ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color,\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>,\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>,\n  ) {\n    const { colorStops, gradientTransform } = options;\n    return new this({\n      ...options,\n      colorStops: colorStops\n        ? colorStops.map((colorStop) => ({ ...colorStop }))\n        : undefined,\n      gradientTransform: gradientTransform ? [...gradientTransform] : undefined,\n    });\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions,\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || '',\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n","import { config } from '../config';\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\nimport { ifNaN } from '../util/internals/ifNaN';\nimport { uid } from '../util/internals/uid';\nimport { loadImage } from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { toFixed } from '../util/misc/toFixed';\nimport { classRegistry } from '../ClassRegistry';\nimport type {\n  PatternRepeat,\n  PatternOptions,\n  SerializedPatternOptions,\n} from './types';\nimport { log } from '../util/internals/console';\n\n/**\n * @see {@link http://fabricjs.com/patterns demo}\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\n */\nexport class Pattern {\n  static type = 'Pattern';\n\n  /**\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\n   * Will be removed in future versiones\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    return 'pattern';\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * @type PatternRepeat\n   * @defaults\n   */\n  repeat: PatternRepeat = 'repeat';\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX = 0;\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY = 0;\n\n  /**\n   * @type TCrossOrigin\n   * @default\n   */\n  crossOrigin: TCrossOrigin = '';\n\n  /**\n   * transform matrix to change the pattern, imported from svgs.\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\n   * @type Array\n   * @default\n   */\n  declare patternTransform?: TMat2D;\n\n  /**\n   * The actual pixel source of the pattern\n   */\n  declare source: CanvasImageSource;\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number\n   */\n  declare readonly id: number;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\n   */\n  constructor(options: PatternOptions) {\n    this.id = uid();\n    Object.assign(this, options);\n  }\n\n  /**\n   * @returns true if {@link source} is an <img> element\n   */\n  isImageSource(): this is { source: HTMLImageElement } {\n    return (\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\n    );\n  }\n\n  /**\n   * @returns true if {@link source} is a <canvas> element\n   */\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\n  }\n\n  sourceToString(): string {\n    return this.isImageSource()\n      ? this.source.src\n      : this.isCanvasSource()\n        ? this.source.toDataURL()\n        : '';\n  }\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\n    if (\n      // if the image failed to load, return, and allow rest to continue loading\n      !this.source ||\n      // if an image\n      (this.isImageSource() &&\n        (!this.source.complete ||\n          this.source.naturalWidth === 0 ||\n          this.source.naturalHeight === 0))\n    ) {\n      return null;\n    }\n\n    return ctx.createPattern(this.source, this.repeat)!;\n  }\n\n  /**\n   * Returns object representation of a pattern\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object} Object representation of a pattern instance\n   */\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\n    const { repeat, crossOrigin } = this;\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: 'pattern',\n      source: this.sourceToString(),\n      repeat,\n      crossOrigin,\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\n      patternTransform: this.patternTransform\n        ? [...this.patternTransform]\n        : null,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   */\n  toSVG({ width, height }: TSize): string {\n    const { source: patternSource, repeat, id } = this,\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\n      patternWidth =\n        repeat === 'repeat-y' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetX || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).width as number) / width,\n              0,\n            ),\n      patternHeight =\n        repeat === 'repeat-x' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetY || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).height as number) / height,\n              0,\n            );\n\n    return [\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\n      `<image x=\"0\" y=\"0\" width=\"${\n        (patternSource as HTMLImageElement).width\n      }\" height=\"${\n        (patternSource as HTMLImageElement).height\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\n      `</pattern>`,\n      '',\n    ].join('\\n');\n  }\n  /* _TO_SVG_END_ */\n\n  static async fromObject(\n    {\n      type,\n      source,\n      patternTransform,\n      ...otherOptions\n    }: SerializedPatternOptions,\n    options?: Abortable,\n  ): Promise<Pattern> {\n    const img = await loadImage(source, {\n      ...options,\n      crossOrigin: otherOptions.crossOrigin,\n    });\n    return new this({\n      ...otherOptions,\n      patternTransform:\n        patternTransform && (patternTransform.slice(0) as TMat2D),\n      source: img,\n    });\n  }\n}\n\nclassRegistry.setClass(Pattern);\n// kept for compatibility reason\nclassRegistry.setClass(Pattern, 'pattern');\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport type { Shadow } from '../Shadow';\nimport type { Canvas } from '../canvas/Canvas';\nimport type { TBrushEventData } from './typedefs';\n\n/**\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nexport abstract class BaseBrush {\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color = 'rgb(0, 0, 0)';\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width = 1;\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type Shadow\n   * @default\n   */\n  shadow: Shadow | null = null;\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: CanvasLineCap = 'round';\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: CanvasLineJoin = 'round';\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit = 10;\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: number[] | null = null;\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n   */\n\n  limitedToCanvasSize = false;\n\n  /**\n   * @todo add type\n   */\n  declare canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  abstract _render(): void;\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\n  /**\n   * @returns true if brush should continue blocking interaction\n   */\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  }\n\n  /**\n   * Sets the transformation on given context\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @private\n   */\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  protected needsFullRender() {\n    const color = new Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  }\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  protected _setShadow() {\n    if (!this.shadow || !this.canvas) {\n      return;\n    }\n\n    const canvas = this.canvas,\n      shadow = this.shadow,\n      ctx = canvas.contextTop,\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  }\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  protected _resetShadow() {\n    const ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n   */\n  protected _isOutSideCanvas(pointer: Point) {\n    return (\n      pointer.x < 0 ||\n      pointer.x > this.canvas.getWidth() ||\n      pointer.y < 0 ||\n      pointer.y > this.canvas.getHeight()\n    );\n  }\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { toFixed } from '../util/misc/toFixed';\nimport {\n  getBoundsOfCurve,\n  joinPath,\n  makePathSimpler,\n  parsePath,\n} from '../util/path';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type {\n  TComplexPathData,\n  TPathSegmentInfo,\n  TSimplePathData,\n} from '../util/path/typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type {\n  TBBox,\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n} from '../typedefs';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniquePathProps {\n  sourcePath?: string;\n  path?: TSimplePathData;\n}\n\nexport interface SerializedPathProps\n  extends SerializedObjectProps,\n    UniquePathProps {}\n\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\n\nexport interface IPathBBox extends TBBox {\n  left: number;\n  top: number;\n  pathOffset: Point;\n}\n\nexport class Path<\n  Props extends TOptions<PathProps> = Partial<PathProps>,\n  SProps extends SerializedPathProps = SerializedPathProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Array of path points\n   * @type Array\n   * @default\n   */\n  declare path: TSimplePathData;\n\n  declare pathOffset: Point;\n\n  declare sourcePath?: string;\n\n  declare segmentsInfo?: TPathSegmentInfo[];\n\n  static type = 'Path';\n\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\n\n  /**\n   * Constructor\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {Partial<PathProps>} [options] Options object\n   * @return {Path} thisArg\n   */\n  constructor(\n    path: TComplexPathData | string,\n    // todo: evaluate this spread here\n    { path: _, left, top, ...options }: Partial<Props> = {},\n  ) {\n    super();\n    Object.assign(this, Path.ownDefaults);\n    this.setOptions(options);\n    this._setPath(path || [], true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\n   */\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\n    this.setBoundingBox(adjustPosition);\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = this._calcBoundsFromPath();\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\n    const l = -this.pathOffset.x,\n      t = -this.pathOffset.y;\n\n    ctx.beginPath();\n\n    for (const command of this.path) {\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          ctx.lineTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'M': // moveTo, absolute\n          ctx.moveTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          ctx.bezierCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n            command[5] + l,\n            command[6] + t,\n          );\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          ctx.quadraticCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n          );\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    this._renderPathCommands(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {string} string representation of an instance\n   */\n  toString() {\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\n      this.left\n    } }>`;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      path: this.path.map((pathCmd) => pathCmd.slice()),\n    };\n  }\n\n  /**\n   * Returns dataless object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const o = this.toObject<T, K>(propertiesToInclude);\n    if (this.sourcePath) {\n      delete o.path;\n      o.sourcePath = this.sourcePath;\n    }\n    return o;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\n    return [\n      '<path ',\n      'COMMON_PARTS',\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @return the path command's translate transform attribute\n   */\n  _getOffsetTransform() {\n    const digits = config.NUM_FRACTION_DIGITS;\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\n      -this.pathOffset.y,\n      digits,\n    )})`;\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver,\n        additionalTransform: additionalTransform,\n      })\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toSVG(reviver?: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      additionalTransform: additionalTransform,\n    });\n  }\n\n  /**\n   * Returns number representation of an instance complexity\n   * @return {number} complexity of this instance\n   */\n  complexity() {\n    return this.path.length;\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { width, height, pathOffset } = this._calcDimensions();\n    this.set({ width, height, pathOffset });\n    // using pathOffset because it match the use case.\n    // if pathOffset change here we need to use left + width/2 , top + height/2\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\n  }\n\n  _calcBoundsFromPath(): TBBox {\n    const bounds: XY[] = [];\n    let subpathStartX = 0,\n      subpathStartY = 0,\n      x = 0, // current x\n      y = 0; // current y\n\n    for (const command of this.path) {\n      // current instruction\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          x = command[1];\n          y = command[2];\n          bounds.push({ x: subpathStartX, y: subpathStartY }, { x, y });\n          break;\n\n        case 'M': // moveTo, absolute\n          x = command[1];\n          y = command[2];\n          subpathStartX = x;\n          subpathStartY = y;\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n              command[5],\n              command[6],\n            ),\n          );\n          x = command[5];\n          y = command[6];\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n            ),\n          );\n          x = command[3];\n          y = command[4];\n          break;\n\n        case 'Z':\n          x = subpathStartX;\n          y = subpathStartY;\n          break;\n      }\n    }\n    return makeBoundingBoxFromPoints(bounds);\n  }\n\n  /**\n   * @private\n   */\n  _calcDimensions(): IPathBBox {\n    const bbox = this._calcBoundsFromPath();\n\n    return {\n      ...bbox,\n      pathOffset: new Point(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2,\n      ),\n    };\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\n   * @static\n   * @memberOf Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\n\n  /**\n   * Creates an instance of Path from an object\n   * @static\n   * @memberOf Path\n   * @param {Object} object\n   * @returns {Promise<Path>}\n   */\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\n    return this._fromObject<Path>(object, {\n      extraParam: 'path',\n    });\n  }\n\n  /**\n   * Creates an instance of Path from an SVG <path> element\n   * @static\n   * @memberOf Path\n   * @param {HTMLElement} element to parse\n   * @param {Partial<PathProps>} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Partial<PathProps>,\n    cssRules?: CSSRules,\n  ) {\n    const { d, ...parsedAttributes } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return new this(d, {\n      ...parsedAttributes,\n      ...options,\n      // we pass undefined to instruct the constructor to position the object using the bbox\n      left: undefined,\n      top: undefined,\n    });\n  }\n}\n\nclassRegistry.setClass(Path);\nclassRegistry.setSVGClass(Path);\n\n/* _FROM_SVG_START_ */\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Path } from '../shapes/Path';\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\n/**\n * @private\n * @param {TSimplePathData} pathData SVG path commands\n * @returns {boolean}\n */\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\n}\n\nexport class PencilBrush extends BaseBrush {\n  /**\n   * Discard points that are less than `decimate` pixel distant from each other\n   * @type Number\n   * @default 0.4\n   */\n  decimate = 0.4;\n\n  /**\n   * Draws a straight line between last recorded point to current pointer\n   * Used for `shift` functionality\n   *\n   * @type boolean\n   * @default false\n   */\n  drawStraightLine = false;\n\n  /**\n   * The event modifier key that makes the brush draw a straight line.\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n   * @type {ModifierKey | undefined | null}\n   */\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\n\n  private declare _points: Point[];\n  private declare _hasStraightLine: boolean;\n  private declare oldEnd?: Point;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this._points = [];\n    this._hasStraightLine = false;\n  }\n\n  needsFullRender() {\n    return super.needsFullRender() || this._hasStraightLine;\n  }\n\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\n    const midPoint = p1.midPointFrom(p2);\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n    return midPoint;\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    this._prepareForDrawing(pointer);\n    // capture coordinates immediately\n    // this allows to draw dots (when movement never occurs)\n    this._addPoint(pointer);\n    this._render();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this._addPoint(pointer) && this._points.length > 1) {\n      if (this.needsFullRender()) {\n        // redraw curve\n        // clear top canvas\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._render();\n      } else {\n        const points = this._points,\n          length = points.length,\n          ctx = this.canvas.contextTop;\n        // draw the curve update\n        this._saveAndTransform(ctx);\n        if (this.oldEnd) {\n          ctx.beginPath();\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n        }\n        this.oldEnd = PencilBrush.drawSegment(\n          ctx,\n          points[length - 2],\n          points[length - 1],\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp({ e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return true;\n    }\n    this.drawStraightLine = false;\n    this.oldEnd = undefined;\n    this._finalizeAndAddPath();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Point} pointer Actual mouse position related to the canvas.\n   */\n  _prepareForDrawing(pointer: Point) {\n    this._reset();\n    this._addPoint(pointer);\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\n  }\n\n  /**\n   * @private\n   * @param {Point} point Point to be added to points array\n   */\n  _addPoint(point: Point) {\n    if (\n      this._points.length > 1 &&\n      point.eq(this._points[this._points.length - 1])\n    ) {\n      return false;\n    }\n    if (this.drawStraightLine && this._points.length > 1) {\n      this._hasStraightLine = true;\n      this._points.pop();\n    }\n    this._points.push(point);\n    return true;\n  }\n\n  /**\n   * Clear points array and set contextTop canvas style.\n   * @private\n   */\n  _reset() {\n    this._points = [];\n    this._setBrushStyles(this.canvas.contextTop);\n    this._setShadow();\n    this._hasStraightLine = false;\n  }\n\n  /**\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\n   * @private\n   * @param {CanvasRenderingContext2D} [ctx]\n   */\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\n    let p1 = this._points[0],\n      p2 = this._points[1];\n    this._saveAndTransform(ctx);\n    ctx.beginPath();\n    //if we only have 2 points in the path and they are the same\n    //it means that the user only clicked the canvas without moving the mouse\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\n    //that's why we set them apart a bit\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n      const width = this.width / 1000;\n      p1.x -= width;\n      p2.x += width;\n    }\n    ctx.moveTo(p1.x, p1.y);\n\n    for (let i = 1; i < this._points.length; i++) {\n      // we pick the point between pi + 1 & pi + 2 as the\n      // end point and p1 as our control point.\n      PencilBrush.drawSegment(ctx, p1, p2);\n      p1 = this._points[i];\n      p2 = this._points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    ctx.lineTo(p1.x, p1.y);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * Converts points to SVG path\n   * @param {Point[]} points Array of points\n   * @return {TSimplePathData} SVG path commands\n   */\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\n    const correction = this.width / 1000;\n    return getSmoothPathFromPoints(points, correction);\n  }\n\n  /**\n   * Creates a Path object to add on canvas\n   * @param {TSimplePathData} pathData Path data\n   * @return {Path} Path to add on canvas\n   */\n  createPath(pathData: TSimplePathData): Path {\n    const path = new Path(pathData, {\n      fill: null,\n      stroke: this.color,\n      strokeWidth: this.width,\n      strokeLineCap: this.strokeLineCap,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeDashArray: this.strokeDashArray,\n    });\n    if (this.shadow) {\n      this.shadow.affectStroke = true;\n      path.shadow = new Shadow(this.shadow);\n    }\n\n    return path;\n  }\n\n  /**\n   * Decimate points array with the decimate value\n   */\n  decimatePoints(points: Point[], distance: number) {\n    if (points.length <= 2) {\n      return points;\n    }\n    let lastPoint = points[0],\n      cDistance;\n    const zoom = this.canvas.getZoom(),\n      adjustedDistance = Math.pow(distance / zoom, 2),\n      l = points.length - 1,\n      newPoints = [lastPoint];\n    for (let i = 1; i < l - 1; i++) {\n      cDistance =\n        Math.pow(lastPoint.x - points[i].x, 2) +\n        Math.pow(lastPoint.y - points[i].y, 2);\n      if (cDistance >= adjustedDistance) {\n        lastPoint = points[i];\n        newPoints.push(lastPoint);\n      }\n    }\n    // Add the last point from the original line to the end of the array.\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n    newPoints.push(points[l]);\n    return newPoints;\n  }\n\n  /**\n   * On mouseup after drawing the path on contextTop canvas\n   * we use the points captured to create an new Path object\n   * and add it to the canvas.\n   */\n  _finalizeAndAddPath() {\n    const ctx = this.canvas.contextTop;\n    ctx.closePath();\n    if (this.decimate) {\n      this._points = this.decimatePoints(this._points, this.decimate);\n    }\n    const pathData = this.convertPointsToSVGPath(this._points);\n    if (isEmptySVGPath(pathData)) {\n      // do not create 0 width/height paths, as they are\n      // rendered inconsistently across browsers\n      // Firefox 4, for example, renders a dot,\n      // whereas Chrome 10 renders nothing\n      this.canvas.requestRenderAll();\n      return;\n    }\n\n    const path = this.createPath(pathData);\n    this.canvas.clearContext(this.canvas.contextTop);\n    this.canvas.fire('before:path:created', { path: path });\n    this.canvas.add(path);\n    this.canvas.requestRenderAll();\n    path.setCoords();\n    this._resetShadow();\n\n    // fire event 'path' created\n    this.canvas.fire('path:created', { path: path });\n  }\n}\n","import type { ObjectEvents } from '../EventTypeDefs';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { cos } from '../util/misc/cos';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { sin } from '../util/misc/sin';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { CSSRules } from '../parser/typedefs';\nimport { SCALE_X, SCALE_Y } from '../constants';\n\ninterface UniqueCircleProps {\n  /**\n   * Radius of this circle\n   * @type Number\n   * @default 0\n   */\n  radius: number;\n\n  /**\n   * Angle for the start of the circle, in degrees.\n   * @type TDegree 0 - 359\n   * @default 0\n   */\n  startAngle: number;\n\n  /**\n   * Angle for the end of the circle, in degrees\n   * @type TDegree 1 - 360\n   * @default 360\n   */\n  endAngle: number;\n\n  /**\n   * Orientation for the direction of the circle.\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\n   * @default false\n   */\n  counterClockwise: boolean;\n}\n\nexport interface SerializedCircleProps\n  extends SerializedObjectProps,\n    UniqueCircleProps {}\n\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\n\nconst CIRCLE_PROPS = [\n  'radius',\n  'startAngle',\n  'endAngle',\n  'counterClockwise',\n] as const;\n\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\n  radius: 0,\n  startAngle: 0,\n  endAngle: 360,\n  counterClockwise: false,\n};\n\nexport class Circle<\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\n    SProps extends SerializedCircleProps = SerializedCircleProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueCircleProps\n{\n  declare radius: number;\n  declare startAngle: number;\n  declare endAngle: number;\n  declare counterClockwise: boolean;\n\n  static type = 'Circle';\n\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\n\n  static ownDefaults = circleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Circle.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Circle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n\n    if (key === 'radius') {\n      this.setRadius(value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(\n      0,\n      0,\n      this.radius,\n      degreesToRadians(this.startAngle),\n      degreesToRadians(this.endAngle),\n      this.counterClockwise,\n    );\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusX(): number {\n    return this.get('radius') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusY(): number {\n    return this.get('radius') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Sets radius of an object (and updates width accordingly)\n   */\n  setRadius(value: number) {\n    this.radius = value;\n    this.set({ width: value * 2, height: value * 2 });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\n  }\n\n  /* _TO_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    const angle = (this.endAngle - this.startAngle) % 360;\n\n    if (angle === 0) {\n      return [\n        '<circle ',\n        'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'r=\"',\n        `${this.radius}`,\n        '\" />\\n',\n      ];\n    } else {\n      const { radius } = this;\n      const start = degreesToRadians(this.startAngle),\n        end = degreesToRadians(this.endAngle),\n        startX = cos(start) * radius,\n        startY = sin(start) * radius,\n        endX = cos(end) * radius,\n        endY = sin(end) * radius,\n        largeFlag = angle > 180 ? 1 : 0,\n        sweepFlag = this.counterClockwise ? 0 : 1;\n      return [\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\n        'COMMON_PARTS',\n        ' />\\n',\n      ];\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\n   * @static\n   * @memberOf Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns {@link Circle} instance from an SVG element\n   * @static\n   * @memberOf Circle\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ): Promise<Circle> {\n    const {\n      left = 0,\n      top = 0,\n      radius = 0,\n      ...otherParsedAttributes\n    } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    ) as Partial<CircleProps>;\n\n    // this probably requires to be fixed for default origins not being top/left.\n\n    return new this({\n      ...otherParsedAttributes,\n      radius,\n      left: left - radius,\n      top: top - radius,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * @todo how do we declare this??\n   */\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\n    return super._fromObject<Circle>(object);\n  }\n}\n\nclassRegistry.setClass(Circle);\nclassRegistry.setSVGClass(Circle);\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Circle } from '../shapes/Circle';\nimport { Group } from '../shapes/Group';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { CircleBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\nexport class CircleBrush extends BaseBrush {\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  declare points: CircleBrushPoint[];\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.points = [];\n  }\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Point} pointer\n   */\n  drawDot(pointer: Point) {\n    const point = this.addPoint(pointer),\n      ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  }\n\n  dot(ctx: CanvasRenderingContext2D, point: CircleBrushPoint) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown(pointer: Point) {\n    this.points = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  }\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render() {\n    const ctx = this.canvas.contextTop,\n      points = this.points;\n    this._saveAndTransform(ctx);\n    for (let i = 0; i < points.length; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const circles: Circle[] = [];\n\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i],\n        circle = new Circle({\n          radius: point.radius,\n          left: point.x,\n          top: point.y,\n          originX: CENTER,\n          originY: CENTER,\n          fill: point.fill,\n        });\n\n      this.shadow && (circle.shadow = new Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    const group = new Group(circles, { canvas: this.canvas });\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  /**\n   * @param {Object} pointer\n   * @return {Point} Just added pointer point\n   */\n  addPoint({ x, y }: Point) {\n    const pointerPoint: CircleBrushPoint = {\n      x,\n      y,\n      radius: getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n      fill: new Color(this.color).setAlpha(getRandomInt(0, 100) / 100).toRgba(),\n    };\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n}\n","import type { Point } from '../Point';\nimport { Group } from '../shapes/Group';\nimport { Shadow } from '../Shadow';\nimport { Rect } from '../shapes/Rect';\nimport { getRandomInt } from '../util/internals/getRandomInt';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { SprayBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\n/**\n *\n * @param rects\n * @returns\n */\nfunction getUniqueRects(rects: Rect[]) {\n  const uniqueRects: Record<string, boolean> = {};\n  const uniqueRectsArray: Rect[] = [];\n\n  for (let i = 0, key: string; i < rects.length; i++) {\n    key = `${rects[i].left}${rects[i].top}`;\n    if (!uniqueRects[key]) {\n      uniqueRects[key] = true;\n      uniqueRectsArray.push(rects[i]);\n    }\n  }\n\n  return uniqueRectsArray;\n}\n\nexport class SprayBrush extends BaseBrush {\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density = 20;\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth = 1;\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance = 1;\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity = false;\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping = true;\n\n  private declare sprayChunks: SprayBrushPoint[][];\n\n  private declare sprayChunk: SprayBrushPoint[];\n\n  /**\n   * Constructor\n   * @param {Canvas} canvas\n   * @return {SprayBrush} Instance of a spray brush\n   */\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.sprayChunks = [];\n    this.sprayChunk = [];\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point) {\n    this.sprayChunks = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const rects: Rect[] = [];\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      const sprayChunk = this.sprayChunks[i];\n      for (let j = 0; j < sprayChunk.length; j++) {\n        const chunck = sprayChunk[j];\n        const rect = new Rect({\n          width: chunck.width,\n          height: chunck.width,\n          left: chunck.x + 1,\n          top: chunck.y + 1,\n          originX: CENTER,\n          originY: CENTER,\n          fill: this.color,\n        });\n        rects.push(rect);\n      }\n    }\n\n    const group = new Group(\n      this.optimizeOverlapping ? getUniqueRects(rects) : rects,\n      {\n        objectCaching: true,\n        subTargetCheck: false,\n        interactive: false,\n      },\n    );\n    this.shadow && group.set('shadow', new Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  renderChunck(sprayChunck: SprayBrushPoint[]) {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < sprayChunck.length; i++) {\n      const point = sprayChunck[i];\n      ctx.globalAlpha = point.opacity;\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Render all spray chunks\n   */\n  _render() {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      this.renderChunck(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {Point} pointer\n   */\n  addSprayChunk(pointer: Point) {\n    this.sprayChunk = [];\n    const radius = this.width / 2;\n\n    for (let i = 0; i < this.density; i++) {\n      this.sprayChunk.push({\n        x: getRandomInt(pointer.x - radius, pointer.x + radius),\n        y: getRandomInt(pointer.y - radius, pointer.y + radius),\n        width: this.dotWidthVariance\n          ? getRandomInt(\n              // bottom clamp width to 1\n              Math.max(1, this.dotWidth - this.dotWidthVariance),\n              this.dotWidth + this.dotWidthVariance,\n            )\n          : this.dotWidth,\n        opacity: this.randomOpacity ? getRandomInt(0, 100) / 100 : 1,\n      });\n    }\n\n    this.sprayChunks.push(this.sprayChunk);\n  }\n}\n","import { Pattern } from '../Pattern';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { Canvas } from '../canvas/Canvas';\nimport { PencilBrush } from './PencilBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\nexport class PatternBrush extends PencilBrush {\n  declare source?: CanvasImageSource;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n  }\n\n  getPatternSrc() {\n    const dotWidth = 20,\n      dotDistance = 5,\n      patternCanvas = createCanvasElement(),\n      patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    if (patternCtx) {\n      patternCtx.fillStyle = this.color;\n      patternCtx.beginPath();\n      patternCtx.arc(\n        dotWidth / 2,\n        dotWidth / 2,\n        dotWidth / 2,\n        0,\n        Math.PI * 2,\n        false,\n      );\n      patternCtx.closePath();\n      patternCtx.fill();\n    }\n    return patternCanvas;\n  }\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern(ctx: CanvasRenderingContext2D) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  }\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    super._setBrushStyles(ctx);\n    const pattern = this.getPattern(ctx);\n    pattern && (ctx.strokeStyle = pattern);\n  }\n\n  /**\n   * Creates path\n   */\n  createPath(pathData: TSimplePathData) {\n    const path = super.createPath(pathData),\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new Pattern({\n      source: this.source || this.getPatternSrc(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y,\n    });\n    return path;\n  }\n}\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport { Point } from '../Point';\nimport { isFiller } from '../util/typeAssertions';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { makeBoundingBoxFromPoints } from '../util';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\n// @TODO this code is terrible and Line should be a special case of polyline.\n\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\n\ninterface UniqueLineProps {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\nexport interface SerializedLineProps\n  extends SerializedObjectProps,\n    UniqueLineProps {}\n\nexport class Line<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedLineProps = SerializedLineProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueLineProps\n{\n  /**\n   * x value or first line edge\n   * @type number\n   * @default\n   */\n  declare x1: number;\n\n  /**\n   * y value or first line edge\n   * @type number\n   * @default\n   */\n  declare y1: number;\n\n  /**\n   * x value or second line edge\n   * @type number\n   * @default\n   */\n  declare x2: number;\n\n  /**\n   * y value or second line edge\n   * @type number\n   * @default\n   */\n  declare y2: number;\n\n  static type = 'Line';\n\n  static cacheProperties = [...cacheProperties, ...coordProps];\n  /**\n   * Constructor\n   * @param {Array} [points] Array of points\n   * @param {Object} [options] Options object\n   * @return {Line} thisArg\n   */\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Partial<Props> = {}) {\n    super();\n    Object.assign(this, Line.ownDefaults);\n    this.setOptions(options);\n    this.x1 = x1;\n    this.x2 = x2;\n    this.y1 = y1;\n    this.y2 = y2;\n    this._setWidthHeight();\n    const { left, top } = options;\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {Object} [options] Options\n   */\n  _setWidthHeight() {\n    const { x1, y1, x2, y2 } = this;\n    this.width = Math.abs(x2 - x1);\n    this.height = Math.abs(y2 - y1);\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\n      { x: x1, y: y1 },\n      { x: x2, y: y2 },\n    ]);\n    const position = new Point(left + width / 2, top + height / 2);\n    this.setPositionByOrigin(position, CENTER, CENTER);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\n      // this doesn't make sense very much, since setting x1 when top or left\n      // are already set, is just going to show a strange result since the\n      // line will move way more than the developer expect.\n      // in fabric5 it worked only when the line didn't have extra transformations,\n      // in fabric6 too. With extra transform they behave bad in different ways.\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\n      this._setWidthHeight();\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    const p = this.calcLinePoints();\n    ctx.moveTo(p.x1, p.y1);\n    ctx.lineTo(p.x2, p.y2);\n\n    ctx.lineWidth = this.strokeWidth;\n\n    // TODO: test this\n    // make sure setting \"fill\" changes color of a line\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n    const origStrokeStyle = ctx.strokeStyle;\n    if (isFiller(this.stroke)) {\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\n    } else {\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\n    }\n    this.stroke && this._renderStroke(ctx);\n    ctx.strokeStyle = origStrokeStyle;\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      ...this.calcLinePoints(),\n    };\n  }\n\n  /*\n   * Calculate object dimensions from its properties\n   * @private\n   */\n  _getNonTransformedDimensions(): Point {\n    const dim = super._getNonTransformedDimensions();\n    if (this.strokeLineCap === 'butt') {\n      if (this.width === 0) {\n        dim.y -= this.strokeWidth;\n      }\n      if (this.height === 0) {\n        dim.x -= this.strokeWidth;\n      }\n    }\n    return dim;\n  }\n\n  /**\n   * Recalculates line points given width and height\n   * Those points are simply placed around the center,\n   * This is not useful outside internal render functions and svg output\n   * Is not meant to be for the developer.\n   * @private\n   */\n  calcLinePoints(): UniqueLineProps {\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\n    const xMult = _x1 <= _x2 ? -1 : 1,\n      yMult = _y1 <= _y2 ? -1 : 1,\n      x1 = (xMult * width) / 2,\n      y1 = (yMult * height) / 2,\n      x2 = (xMult * -width) / 2,\n      y2 = (yMult * -height) / 2;\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\n    return [\n      '<line ',\n      'COMMON_PARTS',\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\n   * @static\n   * @memberOf Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\n\n  /**\n   * Returns Line instance from an SVG element\n   * @static\n   * @memberOf Line\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const {\n      x1 = 0,\n      y1 = 0,\n      x2 = 0,\n      y2 = 0,\n      ...parsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n    return new this([x1, y1, x2, y2], parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Line instance from an object representation\n   * @static\n   * @memberOf Line\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Line>}\n   */\n  static fromObject<T extends TOptions<SerializedLineProps>>({\n    x1,\n    y1,\n    x2,\n    y2,\n    ...object\n  }: T) {\n    return this._fromObject<Line>(\n      {\n        ...object,\n        points: [x1, y1, x2, y2],\n      },\n      {\n        extraParam: 'points',\n      },\n    );\n  }\n}\n\nclassRegistry.setClass(Line);\nclassRegistry.setSVGClass(Line);\n","import { classRegistry } from '../ClassRegistry';\nimport { FabricObject } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { TClassProperties, TOptions } from '../typedefs';\nimport type { ObjectEvents } from '../EventTypeDefs';\n\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\n  width: 100,\n  height: 100,\n};\n\nexport class Triangle<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  static type = 'Triangle';\n\n  static ownDefaults = triangleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Triangle.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(-widthBy2, heightBy2);\n    ctx.lineTo(0, -heightBy2);\n    ctx.lineTo(widthBy2, heightBy2);\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2,\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n  }\n}\n\nclassRegistry.setClass(Triangle);\nclassRegistry.setSVGClass(Triangle);\n","import { SCALE_X, SCALE_Y, twoMathPi } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueEllipseProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedEllipseProps\n  extends SerializedObjectProps,\n    UniqueEllipseProps {}\n\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\n\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\n\nexport class Ellipse<\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements EllipseProps\n{\n  /**\n   * Horizontal radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Ellipse';\n\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\n\n  static ownDefaults = ellipseDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Ellipse.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options?: Props) {\n    super();\n    Object.assign(this, Ellipse.ownDefaults);\n    this.setOptions(options);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   * @return {Ellipse} thisArg\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    switch (key) {\n      case 'rx':\n        this.rx = value;\n        this.set('width', value * 2);\n        break;\n\n      case 'ry':\n        this.ry = value;\n        this.set('height', value * 2);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRx() {\n    return this.get('rx') * this.get(SCALE_X);\n  }\n\n  /**\n   * Returns Vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRy() {\n    return this.get('ry') * this.get(SCALE_Y);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    return [\n      '<ellipse ',\n      'COMMON_PARTS',\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\n    ctx.restore();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\n   * @static\n   * @memberOf Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\n\n  /**\n   * Returns {@link Ellipse} instance from an SVG element\n   * @static\n   * @memberOf Ellipse\n   * @param {HTMLElement} element Element to parse\n   * @return {Ellipse}\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    return new this(parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Ellipse);\nclassRegistry.setSVGClass(Ellipse);\n","import type { XY } from '../Point';\n\n/**\n * Parses \"points\" attribute, returning an array of values\n * @static\n * @memberOf fabric\n * @param {String} points points attribute string\n * @return {Array} array of points\n */\nexport function parsePointsAttribute(points: string | null): XY[] {\n  // points attribute is required and must not be empty\n  if (!points) {\n    return [];\n  }\n\n  // replace commas with whitespace and remove bookending whitespace\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\n\n  const parsedPoints = [];\n\n  for (let i = 0; i < pointsSplit.length; i += 2) {\n    parsedPoints.push({\n      x: parseFloat(pointsSplit[i]),\n      y: parseFloat(pointsSplit[i + 1]),\n    });\n  }\n\n  // odd number of points is an error\n  // if (parsedPoints.length % 2 !== 0) {\n  //   return null;\n  // }\n  return parsedPoints;\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport {\n  CENTER,\n  LEFT,\n  SCALE_X,\n  SCALE_Y,\n  SKEW_X,\n  SKEW_Y,\n  TOP,\n} from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\n  /**\n   * @deprecated transient option soon to be removed in favor of a different design\n   */\n  exactBoundingBox: false,\n};\n\nexport interface SerializedPolylineProps extends SerializedObjectProps {\n  points: XY[];\n}\n\nexport class Polyline<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Points array\n   * @type Array\n   * @default\n   */\n  declare points: XY[];\n\n  /**\n   * WARNING: Feature in progress\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\n   * this will be turned to true by default on fabric 6.0\n   * maybe will be left in as an optimization since calculations may be slow\n   * @deprecated transient option soon to be removed in favor of a different design\n   * @type Boolean\n   * @default false\n   */\n  declare exactBoundingBox: boolean;\n\n  private declare initialized: true | undefined;\n\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polyline';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n\n  /**\n   * A list of properties that if changed trigger a recalculation of dimensions\n   * @todo check if you really need to recalculate for all cases\n   */\n  static layoutProperties: (keyof Polyline)[] = [\n    SKEW_X,\n    SKEW_Y,\n    'strokeLineCap',\n    'strokeLineJoin',\n    'strokeMiterLimit',\n    'strokeWidth',\n    'strokeUniform',\n    'points',\n  ];\n\n  declare pathOffset: Point;\n\n  declare strokeOffset: Point;\n\n  static cacheProperties = [...cacheProperties, 'points'];\n\n  strokeDiff: Point;\n\n  /**\n   * Constructor\n   * @param {Array} points Array of points (where each point is an object with x and y)\n   * @param {Object} [options] Options object\n   * @return {Polyline} thisArg\n   * @example\n   * var poly = new Polyline([\n   *     { x: 10, y: 10 },\n   *     { x: 50, y: 30 },\n   *     { x: 40, y: 70 },\n   *     { x: 60, y: 50 },\n   *     { x: 100, y: 150 },\n   *     { x: 40, y: 100 }\n   *   ], {\n   *   stroke: 'red',\n   *   left: 100,\n   *   top: 100\n   * });\n   */\n  constructor(points: XY[] = [], options: Props = {} as Props) {\n    super();\n    Object.assign(this, Polyline.ownDefaults);\n    this.setOptions(options);\n    this.points = points;\n    const { left, top } = options;\n    this.initialized = true;\n    this.setBoundingBox(true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  protected isOpen() {\n    return true;\n  }\n\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\n  }\n\n  /**\n   * Calculate the polygon bounding box\n   * @private\n   */\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\n    options = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      strokeLineCap: this.strokeLineCap,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeUniform: this.strokeUniform,\n      strokeWidth: this.strokeWidth,\n      ...(options || {}),\n    };\n    const points = this.exactBoundingBox\n      ? this._projectStrokeOnPoints(\n          options as TProjectStrokeOnPointsOptions,\n        ).map((projection) => projection.projectedPoint)\n      : this.points;\n    if (points.length === 0) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        pathOffset: new Point(),\n        strokeOffset: new Point(),\n        strokeDiff: new Point(),\n      };\n    }\n    const bbox = makeBoundingBoxFromPoints(points),\n      // Remove scale effect, since it's applied after\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\n      bboxNoStroke = makeBoundingBoxFromPoints(\n        this.points.map((p) => transformPoint(p, matrix, true)),\n      ),\n      scale = new Point(this.scaleX, this.scaleY);\n    let offsetX = bbox.left + bbox.width / 2,\n      offsetY = bbox.top + bbox.height / 2;\n    if (this.exactBoundingBox) {\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\n      // Order of those assignments is important.\n      // offsetY relies on offsetX being already changed by the line above\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\n    }\n\n    return {\n      ...bbox,\n      pathOffset: new Point(offsetX, offsetY),\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\n        .subtract(new Point(bbox.left, bbox.top))\n        .multiply(scale),\n      strokeDiff: new Point(bbox.width, bbox.height)\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\n        .multiply(scale),\n    };\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = makeBoundingBoxFromPoints(this.points);\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\n      this._calcDimensions();\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\n    adjustPosition &&\n      this.setPositionByOrigin(\n        new Point(left + width / 2, top + height / 2),\n        CENTER,\n        CENTER,\n      );\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return this.exactBoundingBox;\n  }\n\n  /**\n   * @override stroke is taken in account in size\n   */\n  _getNonTransformedDimensions() {\n    return this.exactBoundingBox\n      ? // TODO: fix this\n        new Point(this.width, this.height)\n      : super._getNonTransformedDimensions();\n  }\n\n  /**\n   * @override stroke and skewing are taken into account when projecting stroke on points,\n   * therefore we don't want the default calculation to account for skewing as well.\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\n   *\n   * @private\n   */\n  _getTransformedDimensions(options: any = {}) {\n    if (this.exactBoundingBox) {\n      let size: Point;\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\n        the stroke projections are affected.\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\n      if (\n        Object.keys(options).some(\n          (key) =>\n            this.strokeUniform ||\n            (this.constructor as typeof Polyline).layoutProperties.includes(\n              key as keyof TProjectStrokeOnPointsOptions,\n            ),\n        )\n      ) {\n        const { width, height } = this._calcDimensions(options);\n        size = new Point(options.width ?? width, options.height ?? height);\n      } else {\n        size = new Point(\n          options.width ?? this.width,\n          options.height ?? this.height,\n        );\n      }\n      return size.multiply(\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY),\n      );\n    } else {\n      return super._getTransformedDimensions(options);\n    }\n  }\n\n  /**\n   * Recalculates dimensions when changing skew and scale\n   * @private\n   */\n  _set(key: string, value: any) {\n    const changed = this.initialized && this[key as keyof this] !== value;\n    const output = super._set(key, value);\n    if (\n      this.exactBoundingBox &&\n      changed &&\n      (((key === SCALE_X || key === SCALE_Y) &&\n        this.strokeUniform &&\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          'strokeUniform',\n        )) ||\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          key as keyof Polyline,\n        ))\n    ) {\n      this.setDimensions();\n    }\n    return output;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      points: this.points.map(({ x, y }) => ({ x, y })),\n    };\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const points = [],\n      diffX = this.pathOffset.x,\n      diffY = this.pathOffset.y,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n\n    for (let i = 0, len = this.points.length; i < len; i++) {\n      points.push(\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\n        ',',\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\n        ' ',\n      );\n    }\n    return [\n      `<${\n        (this.constructor as typeof Polyline).type.toLowerCase() as\n          | 'polyline'\n          | 'polygon'\n      } `,\n      'COMMON_PARTS',\n      `points=\"${points.join('')}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const len = this.points.length,\n      x = this.pathOffset.x,\n      y = this.pathOffset.y;\n\n    if (!len || isNaN(this.points[len - 1].y)) {\n      // do not draw if no points or odd points\n      // NaN comes from parseFloat of a empty string in parser\n      return;\n    }\n    ctx.beginPath();\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n    for (let i = 0; i < len; i++) {\n      const point = this.points[i];\n      ctx.lineTo(point.x - x, point.y - y);\n    }\n    !this.isOpen() && ctx.closePath();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance\n   */\n  complexity(): number {\n    return this.points.length;\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\n   * @static\n   * @memberOf Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns Polyline instance from an SVG element\n   * @static\n   * @memberOf Polyline\n   * @param {HTMLElement} element Element to parser\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const points = parsePointsAttribute(element.getAttribute('points')),\n      // we omit left and top to instruct the constructor to position the object using the bbox\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      { left, top, ...parsedAttributes } = parseAttributes(\n        element,\n        this.ATTRIBUTE_NAMES,\n        cssRules,\n      );\n    return new this(points, {\n      ...parsedAttributes,\n      ...options,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Polyline instance from an object representation\n   * @static\n   * @memberOf Polyline\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Polyline>}\n   */\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\n    return this._fromObject<Polyline>(object, {\n      extraParam: 'points',\n    });\n  }\n}\n\nclassRegistry.setClass(Polyline);\nclassRegistry.setSVGClass(Polyline);\n","import { classRegistry } from '../ClassRegistry';\nimport { Polyline, polylineDefaultValues } from './Polyline';\n\nexport class Polygon extends Polyline {\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polygon';\n\n  protected isOpen() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Polygon);\nclassRegistry.setSVGClass(Polygon);\n","import { FILL, LEFT, STROKE, reNewline } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { FabricText } from './Text';\n\nconst fontProperties = [\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontStyle',\n] as const;\n\nexport const textDecorationProperties = [\n  'underline',\n  'overline',\n  'linethrough',\n] as const;\n\nexport const textLayoutProperties: string[] = [\n  ...fontProperties,\n  'lineHeight',\n  'text',\n  'charSpacing',\n  'textAlign',\n  'styles',\n  'path',\n  'pathStartOffset',\n  'pathSide',\n  'pathAlign',\n];\n\nexport const additionalProps = [\n  ...textLayoutProperties,\n  ...textDecorationProperties,\n  'textBackgroundColor',\n  'direction',\n] as const;\n\nexport type StylePropertiesType =\n  | 'fill'\n  | 'stroke'\n  | 'strokeWidth'\n  | 'fontSize'\n  | 'fontFamily'\n  | 'fontWeight'\n  | 'fontStyle'\n  | 'textBackgroundColor'\n  | 'deltaY'\n  | 'overline'\n  | 'underline'\n  | 'linethrough';\n\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\n  ...fontProperties,\n  ...textDecorationProperties,\n  STROKE,\n  'strokeWidth',\n  FILL,\n  'deltaY',\n  'textBackgroundColor',\n] as const;\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\n  _reNewline: reNewline,\n  _reSpacesAndTabs: /[ \\t\\r]/g,\n  _reSpaceAndTab: /[ \\t\\r]/,\n  _reWords: /\\S+/g,\n  fontSize: 40,\n  fontWeight: 'normal',\n  fontFamily: 'Times New Roman',\n  underline: false,\n  overline: false,\n  linethrough: false,\n  textAlign: LEFT,\n  fontStyle: 'normal',\n  lineHeight: 1.16,\n  superscript: {\n    size: 0.6, // fontSize factor\n    baseline: -0.35, // baseline-shift factor (upwards)\n  },\n  subscript: {\n    size: 0.6, // fontSize factor\n    baseline: 0.11, // baseline-shift factor (downwards)\n  },\n  textBackgroundColor: '',\n  stroke: null,\n  shadow: null,\n  path: undefined,\n  pathStartOffset: 0,\n  pathSide: LEFT,\n  pathAlign: 'baseline',\n  _fontSizeFraction: 0.222,\n  offsets: {\n    underline: 0.1,\n    linethrough: -0.315,\n    overline: -0.88,\n  },\n  _fontSizeMult: 1.13,\n  charSpacing: 0,\n  deltaY: 0,\n  direction: 'ltr',\n  CACHE_FONT_SIZE: 400,\n  MIN_TEXT_WIDTH: 2,\n};\n\nexport const JUSTIFY = 'justify';\nexport const JUSTIFY_LEFT = 'justify-left';\nexport const JUSTIFY_RIGHT = 'justify-right';\nexport const JUSTIFY_CENTER = 'justify-center';\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { TOptions } from '../../typedefs';\nimport { FabricObject } from '../Object/FabricObject';\nimport { styleProperties } from './constants';\nimport type { StylePropertiesType } from './constants';\nimport type { FabricText } from './Text';\nimport { pick } from '../../util';\nimport { pickBy } from '../../util/misc/pick';\n\nexport type CompleteTextStyleDeclaration = Pick<\n  FabricText,\n  StylePropertiesType\n>;\n\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\n\nexport type TextStyle = {\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\n};\n\nexport abstract class StyledText<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents,\n> extends FabricObject<Props, SProps, EventSpec> {\n  declare abstract styles: TextStyle;\n  protected declare abstract _textLines: string[][];\n  protected declare _forceClearCache: boolean;\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\n  abstract get2DCursorLocation(\n    selectionStart: number,\n    skipWrapping?: boolean,\n  ): { charIndex: number; lineIndex: number };\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex?: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return true;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        // eslint-disable-next-line no-unused-vars\n        for (const p3 in obj[p1][p2]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if object has a style property or has it ina specified line\n   * This function is used to detect if a text will use a particular property or not.\n   * @param {String} property to check for\n   * @param {Number} lineIndex to check the style on\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\n    if (!this.styles) {\n      return false;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return false;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { 0: this.styles[lineIndex] };\n    // eslint-disable-next-line\n    for (const p1 in obj) {\n      // eslint-disable-next-line\n      for (const p2 in obj[p1]) {\n        if (typeof obj[p1][p2][property] !== 'undefined') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if characters in a text have a value for a property\n   * whose value matches the textbox's value for that property.  If so,\n   * the character-level property is deleted.  If the character\n   * has no other properties, then it is also deleted.  Finally,\n   * if the line containing that character has no other characters\n   * then it also is deleted.\n   *\n   * @param {string} property The property to compare between characters and text.\n   */\n  cleanStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return false;\n    }\n    const obj = this.styles;\n    let stylesCount = 0,\n      letterCount,\n      stylePropertyValue,\n      allStyleObjectPropertiesMatch = true,\n      graphemeCount = 0;\n    for (const p1 in obj) {\n      letterCount = 0;\n      for (const p2 in obj[p1]) {\n        const styleObject = obj[p1][p2] || {},\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\n\n        stylesCount++;\n\n        if (stylePropertyHasBeenSet) {\n          if (!stylePropertyValue) {\n            stylePropertyValue = styleObject[property];\n          } else if (styleObject[property] !== stylePropertyValue) {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (styleObject[property] === this[property as keyof this]) {\n            delete styleObject[property];\n          }\n        } else {\n          allStyleObjectPropertiesMatch = false;\n        }\n\n        if (Object.keys(styleObject).length !== 0) {\n          letterCount++;\n        } else {\n          delete obj[p1][p2];\n        }\n      }\n\n      if (letterCount === 0) {\n        delete obj[p1];\n      }\n    }\n    // if every grapheme has the same style set then\n    // delete those styles and set it on the parent\n    for (let i = 0; i < this._textLines.length; i++) {\n      graphemeCount += this._textLines[i].length;\n    }\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n      // @ts-expect-error conspiracy theory of TS\n      this[property as keyof this] = stylePropertyValue;\n      this.removeStyle(property);\n    }\n  }\n\n  /**\n   * Remove a style property or properties from all individual character styles\n   * in a text object.  Deletes the character style object if it contains no other style\n   * props.  Deletes a line style object if it contains no other character styles.\n   *\n   * @param {String} props The property to remove from character styles.\n   */\n  removeStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return;\n    }\n    const obj = this.styles;\n    let line, lineNum, charNum;\n    for (lineNum in obj) {\n      line = obj[lineNum];\n      for (charNum in line) {\n        delete line[charNum][property];\n        if (Object.keys(line[charNum]).length === 0) {\n          delete line[charNum];\n        }\n      }\n      if (Object.keys(line).length === 0) {\n        delete obj[lineNum];\n      }\n    }\n  }\n\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\n\n    if (!this._getLineStyle(lineIndex)) {\n      this._setLineStyle(lineIndex);\n    }\n\n    const newStyle = pickBy(\n      {\n        // first create a new object that is a merge of existing and new\n        ...this._getStyleDeclaration(lineIndex, charIndex),\n        ...style,\n        // use the predicate to discard undefined values\n      },\n      (value) => value !== undefined,\n    );\n\n    // finally assign to the old position the new style\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number,\n    endIndex?: number,\n    complete?: boolean,\n  ): TextStyleDeclaration[] {\n    const styles: TextStyleDeclaration[] = [];\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      styles.push(this.getStyleAtPosition(i, complete));\n    }\n    return styles;\n  }\n\n  /**\n   * Gets style of a current selection/cursor position\n   * @param {Number} position  to get styles at\n   * @param {Boolean} [complete] full style if true\n   * @return {Object} style Style object at a specified index\n   * @private\n   */\n  getStyleAtPosition(position: number, complete?: boolean) {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\n    return complete\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\n      : this._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} styles Styles object\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\n   */\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      this._extendStyles(i, styles);\n    }\n    /* not included in _extendStyles to avoid clearing cache more than once */\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Get a reference, not a clone, to the style object for a given character,\n   * if no style is set for a line or char, return a new empty object.\n   * This is tricky and confusing because when you get an empty object you can't\n   * determine if it is a reference or a new one.\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    const lineStyle = this.styles && this.styles[lineIndex];\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\n  }\n\n  /**\n   * return a new object that contains all the style property for a character\n   * the object returned is newly created\n   * @param {Number} lineIndex of the line where the character is\n   * @param {Number} charIndex position of the character on the line\n   * @return {Object} style object\n   */\n  getCompleteStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): CompleteTextStyleDeclaration {\n    return {\n      // @ts-expect-error readonly\n      ...pick(this, (this.constructor as typeof StyledText)._styleProperties),\n      ...this._getStyleDeclaration(lineIndex, charIndex),\n    } as CompleteTextStyleDeclaration;\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    this.styles[lineIndex][charIndex] = style;\n  }\n\n  /**\n   *\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    delete this.styles[lineIndex][charIndex];\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @return {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    return !!this.styles[lineIndex];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    this.styles[lineIndex] = {};\n  }\n\n  protected _deleteLineStyle(lineIndex: number) {\n    delete this.styles[lineIndex];\n  }\n}\n","import { config } from '../../config';\nimport type { TSVGReviver } from '../../typedefs';\nimport { escapeXml } from '../../util/lang_string';\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\nimport { hasStyleChanged } from '../../util/misc/textStyles';\nimport { toFixed } from '../../util/misc/toFixed';\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\nimport { type TextStyleDeclaration } from './StyledText';\nimport { JUSTIFY } from '../Text/constants';\nimport type { FabricText } from './Text';\nimport { STROKE, FILL } from '../../constants';\n\nconst multipleSpacesRegex = /  +/g;\nconst dblQuoteRegex = /\"/g;\n\nfunction createSVGInlineRect(\n  color: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number,\n) {\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\n}\n\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\n    const offsets = this._getSVGLeftTopOffsets(),\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n    return this._wrapSVGTextAndBg(textAndBg);\n  }\n\n  toSVG(this: TextSVGExportMixin & FabricText, reviver?: TSVGReviver): string {\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      noStyle: true,\n      withShadow: true,\n    });\n  }\n\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\n    return {\n      textLeft: -this.width / 2,\n      textTop: -this.height / 2,\n      lineTop: this.getHeightOfLine(0),\n    };\n  }\n\n  private _wrapSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    {\n      textBgRects,\n      textSpans,\n    }: {\n      textSpans: string[];\n      textBgRects: string[];\n    },\n  ) {\n    const noShadow = true,\n      textDecoration = this.getSvgTextDecoration(this);\n    return [\n      textBgRects.join(''),\n      '\\t\\t<text xml:space=\"preserve\" ',\n      this.fontFamily\n        ? `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `\n        : '',\n      this.fontSize ? `font-size=\"${this.fontSize}\" ` : '',\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\n      'style=\"',\n      this.getSvgStyles(noShadow),\n      '\"',\n      this.addPaintOrder(),\n      ' >',\n      textSpans.join(''),\n      '</text>\\n',\n    ];\n  }\n\n  /**\n   * @private\n   * @param {Number} textTopOffset Text top offset\n   * @param {Number} textLeftOffset Text left offset\n   * @return {Object}\n   */\n  private _getSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    textTopOffset: number,\n    textLeftOffset: number,\n  ) {\n    const textSpans: string[] = [],\n      textBgRects: string[] = [];\n    let height = textTopOffset,\n      lineOffset;\n\n    // bounding-box background\n    this.backgroundColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          this.backgroundColor,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height,\n        ),\n      );\n\n    // text and text-background\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineOffset = this._getLineLeftOffset(i);\n      if (this.direction === 'rtl') {\n        lineOffset += this.width;\n      }\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n        this._setSVGTextLineBg(\n          textBgRects,\n          i,\n          textLeftOffset + lineOffset,\n          height,\n        );\n      }\n      this._setSVGTextLineText(\n        textSpans,\n        i,\n        textLeftOffset + lineOffset,\n        height,\n      );\n      height += this.getHeightOfLine(i);\n    }\n\n    return {\n      textSpans,\n      textBgRects,\n    };\n  }\n\n  private _createTextCharSpan(\n    this: TextSVGExportMixin & FabricText,\n    char: string,\n    styleDecl: TextStyleDeclaration,\n    left: number,\n    top: number,\n  ) {\n    const styleProps = this.getSvgSpanStyles(\n        styleDecl,\n        char !== char.trim() || !!char.match(multipleSpacesRegex),\n      ),\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\n      dy = styleDecl.deltaY,\n      dySpan = dy ? ` dy=\"${toFixed(dy, config.NUM_FRACTION_DIGITS)}\" ` : '';\n\n    return `<tspan x=\"${toFixed(\n      left,\n      config.NUM_FRACTION_DIGITS,\n    )}\" y=\"${toFixed(\n      top,\n      config.NUM_FRACTION_DIGITS,\n    )}\" ${dySpan}${fillStyles}>${escapeXml(char)}</tspan>`;\n  }\n\n  private _setSVGTextLineText(\n    this: TextSVGExportMixin & FabricText,\n    textSpans: string[],\n    lineIndex: number,\n    textLeftOffset: number,\n    textTopOffset: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      line = this._textLines[lineIndex];\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      style,\n      boxWidth = 0,\n      timeToRender;\n\n    textTopOffset +=\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i];\n      if (boxWidth === 0) {\n        textLeftOffset += charBox.kernedWidth - charBox.width;\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\n      }\n      if (timeToRender) {\n        style = this._getStyleDeclaration(lineIndex, i);\n        textSpans.push(\n          this._createTextCharSpan(\n            charsToRender,\n            style,\n            textLeftOffset,\n            textTopOffset,\n          ),\n        );\n        charsToRender = '';\n        actualStyle = nextStyle;\n        if (this.direction === 'rtl') {\n          textLeftOffset -= boxWidth;\n        } else {\n          textLeftOffset += boxWidth;\n        }\n        boxWidth = 0;\n      }\n    }\n  }\n\n  private _setSVGTextLineBg(\n    this: TextSVGExportMixin & FabricText,\n    textBgRects: (string | number)[],\n    i: number,\n    leftOffset: number,\n    textTopOffset: number,\n  ) {\n    const line = this._textLines[i],\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\n    let boxWidth = 0,\n      boxStart = 0,\n      currentColor,\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n    for (let j = 0; j < line.length; j++) {\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n      if (currentColor !== lastColor) {\n        lastColor &&\n          textBgRects.push(\n            ...createSVGInlineRect(\n              lastColor,\n              leftOffset + boxStart,\n              textTopOffset,\n              boxWidth,\n              heightOfLine,\n            ),\n          );\n        boxStart = left;\n        boxWidth = width;\n        lastColor = currentColor;\n      } else {\n        boxWidth += kernedWidth;\n      }\n    }\n    currentColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          lastColor,\n          leftOffset + boxStart,\n          textTopOffset,\n          boxWidth,\n          heightOfLine,\n        ),\n      );\n  }\n\n  /**\n   * @deprecated unused\n   */\n  _getSVGLineTopOffset(\n    this: TextSVGExportMixin & FabricText,\n    lineIndex: number,\n  ) {\n    let lineTopOffset = 0,\n      j;\n    for (j = 0; j < lineIndex; j++) {\n      lineTopOffset += this.getHeightOfLine(j);\n    }\n    const lastHeight = this.getHeightOfLine(j);\n    return {\n      lineTop: lineTopOffset,\n      offset:\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\n        (this.lineHeight * this._fontSizeMult),\n    };\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\n    return `${super.getSvgStyles(skipShadow)} white-space: pre;`;\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n   * @return {String}\n   */\n  getSvgSpanStyles(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n    useWhiteSpace?: boolean,\n  ) {\n    const {\n      fontFamily,\n      strokeWidth,\n      stroke,\n      fill,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      deltaY,\n    } = style;\n\n    const textDecoration = this.getSvgTextDecoration(style);\n\n    return [\n      stroke ? colorPropToSVG(STROKE, stroke) : '',\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\n      fontFamily\n        ? `font-family: ${\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\n              ? `'${fontFamily}'`\n              : fontFamily\n          }; `\n        : '',\n      fontSize ? `font-size: ${fontSize}px; ` : '',\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\n      textDecoration ? `text-decoration: ${textDecoration}; ` : textDecoration,\n      fill ? colorPropToSVG(FILL, fill) : '',\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\n      useWhiteSpace ? 'white-space: pre; ' : '',\n    ].join('');\n  }\n\n  /**\n   * Returns text-decoration property for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @return {String}\n   */\n  getSvgTextDecoration(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n  ) {\n    return (['overline', 'underline', 'line-through'] as const)\n      .filter(\n        (decoration) =>\n          style[\n            decoration.replace('-', '') as\n              | 'overline'\n              | 'underline'\n              | 'linethrough'\n          ],\n      )\n      .join(' ');\n  }\n}\n","import { cache } from '../../cache';\nimport { DEFAULT_SVG_FONT_SIZE, FILL, STROKE } from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type {\n  CompleteTextStyleDeclaration,\n  TextStyle,\n  TextStyleDeclaration,\n} from './StyledText';\nimport { StyledText } from './StyledText';\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\nimport { parseAttributes } from '../../parser/parseAttributes';\nimport type {\n  Abortable,\n  TCacheCanvasDimensions,\n  TClassProperties,\n  TFiller,\n  TOptions,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { graphemeSplit } from '../../util/lang_string';\nimport { createCanvasElementFor } from '../../util/misc/dom';\nimport type { TextStyleArray } from '../../util/misc/textStyles';\nimport {\n  hasStyleChanged,\n  stylesFromArray,\n  stylesToArray,\n} from '../../util/misc/textStyles';\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\nimport { cacheProperties } from '../Object/FabricObject';\nimport type { Path } from '../Path';\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { StylePropertiesType } from './constants';\nimport {\n  additionalProps,\n  textDefaultValues,\n  textLayoutProperties,\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from './constants';\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\nimport { isFiller } from '../../util/typeAssertions';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { CSSRules } from '../../parser/typedefs';\n\nlet measuringContext: CanvasRenderingContext2D | null;\n\n/**\n * Return a context for measurement of text string.\n * if created it gets stored for reuse\n */\nfunction getMeasuringContext() {\n  if (!measuringContext) {\n    const canvas = createCanvasElementFor({\n      width: 0,\n      height: 0,\n    });\n    measuringContext = canvas.getContext('2d');\n  }\n  return measuringContext;\n}\n\nexport type TPathSide = 'left' | 'right';\n\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\n\nexport type TextLinesInfo = {\n  lines: string[];\n  graphemeLines: string[][];\n  graphemeText: string[];\n  _unwrappedLines: string[][];\n};\n\n/**\n * Measure and return the info of a single grapheme.\n * needs the the info of previous graphemes already filled\n * Override to customize measuring\n */\nexport type GraphemeBBox = {\n  width: number;\n  height: number;\n  kernedWidth: number;\n  left: number;\n  deltaY: number;\n  renderLeft?: number;\n  renderTop?: number;\n  angle?: number;\n};\n\n// @TODO this is not complete\ninterface UniqueTextProps {\n  charSpacing: number;\n  lineHeight: number;\n  fontSize: number;\n  fontWeight: string | number;\n  fontFamily: string;\n  fontStyle: string;\n  pathSide: TPathSide;\n  pathAlign: TPathAlign;\n  underline: boolean;\n  overline: boolean;\n  linethrough: boolean;\n  textAlign: string;\n  direction: CanvasDirection;\n  path?: Path;\n}\n\nexport interface SerializedTextProps\n  extends SerializedObjectProps,\n    UniqueTextProps {\n  styles: TextStyleArray | TextStyle;\n}\n\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\n  styles: TextStyle;\n}\n\n/**\n * Text class\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n */\nexport class FabricText<\n    Props extends TOptions<TextProps> = Partial<TextProps>,\n    SProps extends SerializedTextProps = SerializedTextProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends StyledText<Props, SProps, EventSpec>\n  implements UniqueTextProps\n{\n  /**\n   * Properties that requires a text layout recalculation when changed\n   * @type string[]\n   * @protected\n   */\n  static textLayoutProperties: string[] = textLayoutProperties;\n\n  /**\n   * @private\n   */\n  declare _reNewline: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespaces that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpacesAndTabs: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespace that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpaceAndTab: RegExp;\n\n  /**\n   * Use this regular expression to filter consecutive groups of non spaces.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reWords: RegExp;\n\n  declare text: string;\n\n  /**\n   * Font size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare fontSize: number;\n\n  /**\n   * Font weight (e.g. bold, normal, 400, 600, 800)\n   * @type {(Number|String)}\n   * @default\n   */\n  declare fontWeight: string | number;\n\n  /**\n   * Font family\n   * @type String\n   * @default\n   */\n  declare fontFamily: string;\n\n  /**\n   * Text decoration underline.\n   * @type Boolean\n   * @default\n   */\n  declare underline: boolean;\n\n  /**\n   * Text decoration overline.\n   * @type Boolean\n   * @default\n   */\n  declare overline: boolean;\n\n  /**\n   * Text decoration linethrough.\n   * @type Boolean\n   * @default\n   */\n  declare linethrough: boolean;\n\n  /**\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\n   * @type String\n   * @default\n   */\n  declare textAlign: string;\n\n  /**\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n   * @type String\n   * @default\n   */\n  declare fontStyle: string;\n\n  /**\n   * Line height\n   * @type Number\n   * @default\n   */\n  declare lineHeight: number;\n\n  /**\n   * Superscript schema object (minimum overlap)\n   */\n  declare superscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (upwards)\n     * @default -0.35\n     */\n    baseline: number;\n  };\n\n  /**\n   * Subscript schema object (minimum overlap)\n   */\n  declare subscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (downwards)\n     * @default 0.11\n     */\n    baseline: number;\n  };\n\n  /**\n   * Background color of text lines\n   * @type String\n   * @default\n   */\n  declare textBackgroundColor: string;\n\n  declare styles: TextStyle;\n\n  /**\n   * Path that the text should follow.\n   * since 4.6.0 the path will be drawn automatically.\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n   * if you want it to be hidden, assign visible = false to the path.\n   * This feature is in BETA, and SVG import/export is not yet supported.\n   * @type Path\n   * @example\n   * const textPath = new Text('Text on a path', {\n   *     top: 150,\n   *     left: 150,\n   *     textAlign: 'center',\n   *     charSpacing: -50,\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\n   *         strokeWidth: 1,\n   *         visible: false\n   *     }),\n   *     pathSide: 'left',\n   *     pathStartOffset: 0\n   * });\n   * @default\n   */\n  declare path?: Path;\n\n  /**\n   * Offset amount for text path starting position\n   * Only used when text has a path\n   * @type Number\n   * @default\n   */\n  declare pathStartOffset: number;\n\n  /**\n   * Which side of the path the text should be drawn on.\n   * Only used when text has a path\n   * @type {TPathSide} 'left|right'\n   * @default\n   */\n  declare pathSide: TPathSide;\n\n  /**\n   * How text is aligned to the path. This property determines\n   * the perpendicular position of each character relative to the path.\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n   * This feature is in BETA, and its behavior may change\n   * @type TPathAlign\n   * @default\n   */\n  declare pathAlign: TPathAlign;\n\n  /**\n   * @private\n   */\n  declare _fontSizeFraction: number;\n\n  /**\n   * @private\n   */\n  declare offsets: { underline: number; linethrough: number; overline: number };\n\n  /**\n   * Text Line proportion to font Size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare _fontSizeMult: number;\n\n  /**\n   * additional space between characters\n   * expressed in thousands of em unit\n   * @type Number\n   * @default\n   */\n  declare charSpacing: number;\n\n  /**\n   * Baseline shift, styles only, keep at 0 for the main text object\n   * @type {Number}\n   * @default\n   */\n  declare deltaY: number;\n\n  /**\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n   * determine the direction of the text.\n   * This has to be set manually together with textAlign and originX for proper\n   * experience.\n   * some interesting link for the future\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n   * @since 4.5.0\n   * @type {CanvasDirection} 'ltr|rtl'\n   * @default\n   */\n  declare direction: CanvasDirection;\n\n  /**\n   * contains characters bounding boxes\n   * This variable is considered to be protected.\n   * But for how mixins are implemented right now, we can't leave it private\n   * @protected\n   */\n  __charBounds: GraphemeBBox[][] = [];\n\n  /**\n   * use this size when measuring text. To avoid IE11 rounding errors\n   * @type {Number}\n   * @default\n   * @readonly\n   * @private\n   */\n  declare CACHE_FONT_SIZE: number;\n\n  /**\n   * contains the min text width to avoid getting 0\n   * @type {Number}\n   * @default\n   */\n  declare MIN_TEXT_WIDTH: number;\n\n  /**\n   * contains the the text of the object, divided in lines as they are displayed\n   * on screen. Wrapping will divide the text independently of line breaks\n   * @type {string[]}\n   * @default\n   */\n  declare textLines: string[];\n\n  /**\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\n   * @type {string[]}\n   * @default\n   */\n  declare _textLines: string[][];\n\n  declare _unwrappedTextLines: string[][];\n  declare _text: string[];\n  declare cursorWidth: number;\n  declare __lineHeights: number[];\n  declare __lineWidths: number[];\n  declare initialized?: true;\n\n  static cacheProperties = [...cacheProperties, ...additionalProps];\n\n  static ownDefaults = textDefaultValues;\n\n  static type = 'Text';\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\n  }\n\n  constructor(text: string, options?: Props) {\n    super();\n    Object.assign(this, FabricText.ownDefaults);\n    this.setOptions(options);\n    if (!this.styles) {\n      this.styles = {};\n    }\n    this.text = text;\n    this.initialized = true;\n    if (this.path) {\n      this.setPathInfo();\n    }\n    this.initDimensions();\n    this.setCoords();\n  }\n\n  /**\n   * If text has a path, it will add the extra information needed\n   * for path and text calculations\n   */\n  setPathInfo() {\n    const path = this.path;\n    if (path) {\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\n    }\n  }\n\n  /**\n   * @private\n   * Divides text into lines of text and lines of graphemes.\n   */\n  _splitText(): TextLinesInfo {\n    const newLines = this._splitTextIntoLines(this.text);\n    this.textLines = newLines.lines;\n    this._textLines = newLines.graphemeLines;\n    this._unwrappedTextLines = newLines._unwrappedLines;\n    this._text = newLines.graphemeText;\n    return newLines;\n  }\n\n  /**\n   * Initialize or update text dimensions.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   */\n  initDimensions() {\n    this._splitText();\n    this._clearCache();\n    this.dirty = true;\n    if (this.path) {\n      this.width = this.path.width;\n      this.height = this.path.height;\n    } else {\n      this.width =\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      this.height = this.calcTextHeight();\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n  }\n\n  /**\n   * Enlarge space boxes and shift the others\n   */\n  enlargeSpaces() {\n    let diffSpace,\n      currentLineWidth,\n      numberOfSpaces,\n      accumulatedSpace,\n      line,\n      charBound,\n      spaces;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      if (\n        this.textAlign !== JUSTIFY &&\n        (i === len - 1 || this.isEndOfWrapping(i))\n      ) {\n        continue;\n      }\n      accumulatedSpace = 0;\n      line = this._textLines[i];\n      currentLineWidth = this.getLineWidth(i);\n      if (\n        currentLineWidth < this.width &&\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\n      ) {\n        numberOfSpaces = spaces.length;\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n        for (let j = 0; j <= line.length; j++) {\n          charBound = this.__charBounds[i][j];\n          if (this._reSpaceAndTab.test(line[j])) {\n            charBound.width += diffSpace;\n            charBound.kernedWidth += diffSpace;\n            charBound.left += accumulatedSpace;\n            accumulatedSpace += diffSpace;\n          } else {\n            charBound.left += accumulatedSpace;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    return lineIndex === this._textLines.length - 1;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * It return always 1 for text and Itext. Textbox has its own implementation\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\n  missingNewlineOffset(_lineIndex: number): 1 {\n    return 1;\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor\n   * @param {Number} selectionStart\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n    let i: number;\n    for (i = 0; i < lines.length; i++) {\n      if (selectionStart <= lines[i].length) {\n        return {\n          lineIndex: i,\n          charIndex: selectionStart,\n        };\n      }\n      selectionStart -=\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\n    }\n    return {\n      lineIndex: i - 1,\n      charIndex:\n        lines[i - 1].length < selectionStart\n          ? lines[i - 1].length\n          : selectionStart,\n    };\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of text object\n   */\n  toString(): string {\n    return `#<Text (${this.complexity()}): { \"text\": \"${\n      this.text\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @param {Object} dim.x width of object to be cached\n   * @param {Object} dim.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const dims = super._getCacheCanvasDimensions();\n    const fontSize = this.fontSize;\n    dims.width += fontSize * dims.zoomX;\n    dims.height += fontSize * dims.zoomY;\n    return dims;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const path = this.path;\n    path && !path.isNotVisible() && path._render(ctx);\n    this._setTextStyles(ctx);\n    this._renderTextLinesBackground(ctx);\n    this._renderTextDecoration(ctx, 'underline');\n    this._renderText(ctx);\n    this._renderTextDecoration(ctx, 'overline');\n    this._renderTextDecoration(ctx, 'linethrough');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderText(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === STROKE) {\n      this._renderTextStroke(ctx);\n      this._renderTextFill(ctx);\n    } else {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    }\n  }\n\n  /**\n   * Set the font parameter of the context with the object properties or with charStyle\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [charStyle] object with font style properties\n   * @param {String} [charStyle.fontFamily] Font Family\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n   * @param {String} [charStyle.fontWeight] Font weight\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n   */\n  _setTextStyles(\n    ctx: CanvasRenderingContext2D,\n    charStyle?: any,\n    forMeasuring?: boolean,\n  ) {\n    ctx.textBaseline = 'alphabetic';\n    if (this.path) {\n      switch (this.pathAlign) {\n        case CENTER:\n          ctx.textBaseline = 'middle';\n          break;\n        case 'ascender':\n          ctx.textBaseline = TOP;\n          break;\n        case 'descender':\n          ctx.textBaseline = BOTTOM;\n          break;\n      }\n    }\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n  }\n\n  /**\n   * calculate and return the text Width measuring each line.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {Number} Maximum width of Text object\n   */\n  calcTextWidth(): number {\n    let maxWidth = this.getLineWidth(0);\n\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\n      const currentLineWidth = this.getLineWidth(i);\n      if (currentLineWidth > maxWidth) {\n        maxWidth = currentLineWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  /**\n   * @private\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} line Text to render\n   * @param {Number} left Left position of text\n   * @param {Number} top Top position of text\n   * @param {Number} lineIndex Index of a line in a text\n   */\n  _renderTextLine(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: string[],\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    this._renderChars(method, ctx, line, left, top, lineIndex);\n  }\n\n  /**\n   * Renders the text background for lines, taking care of style\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n      return;\n    }\n    const originalFill = ctx.fillStyle,\n      leftOffset = this._getLeftOffset();\n    let lineTopOffset = this._getTopOffset();\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (\n        !this.textBackgroundColor &&\n        !this.styleHas('textBackgroundColor', i)\n      ) {\n        lineTopOffset += heightOfLine;\n        continue;\n      }\n      const jlen = this._textLines[i].length;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxWidth = 0;\n      let boxStart = 0;\n      let drawStart;\n      let currentColor;\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (let j = 0; j < jlen; j++) {\n        // at this point charbox are either standard or full with pathInfo if there is a path.\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (this.path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillStyle = currentColor;\n          currentColor &&\n            ctx.fillRect(\n              -charBox.width / 2,\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight,\n            );\n          ctx.restore();\n        } else if (currentColor !== lastColor) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = lastColor;\n          lastColor &&\n            ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight,\n            );\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      if (currentColor && !this.path) {\n        drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(\n          drawStart,\n          lineTopOffset,\n          boxWidth,\n          heightOfLine / this.lineHeight,\n        );\n      }\n      lineTopOffset += heightOfLine;\n    }\n    ctx.fillStyle = originalFill;\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * measure and return the width of a single character.\n   * possibly overridden to accommodate different measure logic or\n   * to hook some external lib for character measurement\n   * @private\n   * @param {String} _char, char to be measured\n   * @param {Object} charStyle style of char to be measured\n   * @param {String} [previousChar] previous char\n   * @param {Object} [prevCharStyle] style of previous char\n   */\n  _measureChar(\n    _char: string,\n    charStyle: CompleteTextStyleDeclaration,\n    previousChar: string | undefined,\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>,\n  ) {\n    const fontCache = cache.getFontCache(charStyle),\n      fontDeclaration = this._getFontDeclaration(charStyle),\n      couple = previousChar + _char,\n      stylesAreEqual =\n        previousChar &&\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\n    let width: number | undefined,\n      coupleWidth: number | undefined,\n      previousWidth: number | undefined,\n      kernedWidth: number | undefined;\n\n    if (previousChar && fontCache[previousChar] !== undefined) {\n      previousWidth = fontCache[previousChar];\n    }\n    if (fontCache[_char] !== undefined) {\n      kernedWidth = width = fontCache[_char];\n    }\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\n      coupleWidth = fontCache[couple];\n      kernedWidth = coupleWidth - previousWidth!;\n    }\n    if (\n      width === undefined ||\n      previousWidth === undefined ||\n      coupleWidth === undefined\n    ) {\n      const ctx = getMeasuringContext()!;\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n      this._setTextStyles(ctx, charStyle, true);\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        // safe to use the non-null since if undefined we defined it before.\n        kernedWidth = coupleWidth - previousWidth!;\n      }\n    }\n    return {\n      width: width * fontMultiplier,\n      kernedWidth: kernedWidth! * fontMultiplier,\n    };\n  }\n\n  /**\n   * Computes height of character at given position\n   * @param {Number} line the line index number\n   * @param {Number} _char the character index number\n   * @return {Number} fontSize of the character\n   */\n  getHeightOfChar(line: number, _char: number): number {\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\n  }\n\n  /**\n   * measure a text line measuring all characters.\n   * @param {Number} lineIndex line number\n   */\n  measureLine(lineIndex: number) {\n    const lineInfo = this._measureLine(lineIndex);\n    if (this.charSpacing !== 0) {\n      lineInfo.width -= this._getWidthOfCharSpacing();\n    }\n    if (lineInfo.width < 0) {\n      lineInfo.width = 0;\n    }\n    return lineInfo;\n  }\n\n  /**\n   * measure every grapheme of a line, populating __charBounds\n   * @param {Number} lineIndex\n   * @return {Object} object.width total width of characters\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\n   */\n  _measureLine(lineIndex: number) {\n    let width = 0,\n      prevGrapheme: string | undefined,\n      graphemeInfo: GraphemeBBox | undefined;\n\n    const reverse = this.pathSide === RIGHT,\n      path = this.path,\n      line = this._textLines[lineIndex],\n      llength = line.length,\n      lineBounds = new Array<GraphemeBBox>(llength);\n\n    this.__charBounds[lineIndex] = lineBounds;\n    for (let i = 0; i < llength; i++) {\n      const grapheme = line[i];\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n      lineBounds[i] = graphemeInfo;\n      width += graphemeInfo.kernedWidth;\n      prevGrapheme = grapheme;\n    }\n    // this latest bound box represent the last character of the line\n    // to simplify cursor handling in interactive mode.\n    lineBounds[llength] = {\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n      width: 0,\n      kernedWidth: 0,\n      height: this.fontSize,\n      deltaY: 0,\n    } as GraphemeBBox;\n    if (path && path.segmentsInfo) {\n      let positionInPath = 0;\n      const totalPathLength =\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\n      switch (this.textAlign) {\n        case LEFT:\n          positionInPath = reverse ? totalPathLength - width : 0;\n          break;\n        case CENTER:\n          positionInPath = (totalPathLength - width) / 2;\n          break;\n        case RIGHT:\n          positionInPath = reverse ? 0 : totalPathLength - width;\n          break;\n        //todo - add support for justify\n      }\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n      for (\n        let i = reverse ? llength - 1 : 0;\n        reverse ? i >= 0 : i < llength;\n        reverse ? i-- : i++\n      ) {\n        graphemeInfo = lineBounds[i];\n        if (positionInPath > totalPathLength) {\n          positionInPath %= totalPathLength;\n        } else if (positionInPath < 0) {\n          positionInPath += totalPathLength;\n        }\n        // it would probably much faster to send all the grapheme position for a line\n        // and calculate path position/angle at once.\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\n        positionInPath += graphemeInfo.kernedWidth;\n      }\n    }\n    return { width: width, numOfSpaces: 0 };\n  }\n\n  /**\n   * Calculate the angle  and the left,top position of the char that follow a path.\n   * It appends it to graphemeInfo to be reused later at rendering\n   * @private\n   * @param {Number} positionInPath to be measured\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\n   * @param {Object} startingPoint position of the point\n   */\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n      path = this.path!;\n\n    // we are at currentPositionOnPath. we want to know what point on the path is.\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\n  }\n\n  /**\n   *\n   * @param {String} grapheme to be measured\n   * @param {Number} lineIndex index of the line where the char is\n   * @param {Number} charIndex position in the line\n   * @param {String} [prevGrapheme] character preceding the one to be measured\n   * @returns {GraphemeBBox} grapheme bbox\n   */\n  _getGraphemeBox(\n    grapheme: string,\n    lineIndex: number,\n    charIndex: number,\n    prevGrapheme?: string,\n    skipLeft?: boolean,\n  ): GraphemeBBox {\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      prevStyle = prevGrapheme\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\n        : {},\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\n    let kernedWidth = info.kernedWidth,\n      width = info.width,\n      charSpacing;\n\n    if (this.charSpacing !== 0) {\n      charSpacing = this._getWidthOfCharSpacing();\n      width += charSpacing;\n      kernedWidth += charSpacing;\n    }\n\n    const box: GraphemeBBox = {\n      width,\n      left: 0,\n      height: style.fontSize,\n      kernedWidth,\n      deltaY: style.deltaY,\n    };\n    if (charIndex > 0 && !skipLeft) {\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\n      box.left =\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\n    }\n    return box;\n  }\n\n  /**\n   * Calculate height of line at 'lineIndex'\n   * @param {Number} lineIndex index of line to calculate\n   * @return {Number}\n   */\n  getHeightOfLine(lineIndex: number): number {\n    if (this.__lineHeights[lineIndex]) {\n      return this.__lineHeights[lineIndex];\n    }\n\n    // char 0 is measured before the line cycle because it needs to char\n    // emptylines\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n    }\n\n    return (this.__lineHeights[lineIndex] =\n      maxHeight * this.lineHeight * this._fontSizeMult);\n  }\n\n  /**\n   * Calculate text box height\n   */\n  calcTextHeight() {\n    let lineHeight,\n      height = 0;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineHeight = this.getHeightOfLine(i);\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n    }\n    return height;\n  }\n\n  /**\n   * @private\n   * @return {Number} Left offset\n   */\n  _getLeftOffset(): number {\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n  }\n\n  /**\n   * @private\n   * @return {Number} Top offset\n   */\n  _getTopOffset(): number {\n    return -this.height / 2;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   */\n  _renderTextCommon(\n    ctx: CanvasRenderingContext2D,\n    method: 'fillText' | 'strokeText',\n  ) {\n    ctx.save();\n    let lineHeights = 0;\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset();\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i),\n        maxHeight = heightOfLine / this.lineHeight,\n        leftOffset = this._getLineLeftOffset(i);\n      this._renderTextLine(\n        method,\n        ctx,\n        this._textLines[i],\n        left + leftOffset,\n        top + lineHeights + maxHeight,\n        i,\n      );\n      lineHeights += heightOfLine;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill && !this.styleHas(FILL)) {\n      return;\n    }\n\n    this._renderTextCommon(ctx, 'fillText');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    this._setLineDash(ctx, this.strokeDashArray);\n    ctx.beginPath();\n    this._renderTextCommon(ctx, 'strokeText');\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {String} method fillText or strokeText.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} line Content of the line, splitted in an array by grapheme\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} lineIndex\n   */\n  _renderChars(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: Array<any>,\n    left: number,\n    top: number,\n    lineIndex: number,\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      path = this.path,\n      shortCut =\n        !isJustify &&\n        this.charSpacing === 0 &&\n        this.isEmptyStyles(lineIndex) &&\n        !path,\n      isLtr = this.direction === 'ltr',\n      sign = this.direction === 'ltr' ? 1 : -1,\n      // this was changed in the PR #7674\n      // currentDirection = ctx.canvas.getAttribute('dir');\n      currentDirection = ctx.direction;\n\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      boxWidth = 0,\n      timeToRender,\n      drawingLeft;\n\n    ctx.save();\n    if (currentDirection !== this.direction) {\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\n    }\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\n    if (shortCut) {\n      // render all the line in one pass without checking\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\n      ctx.restore();\n      return;\n    }\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\n      if (boxWidth === 0) {\n        left += sign * (charBox.kernedWidth - charBox.width);\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\n      }\n      if (timeToRender) {\n        if (path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            -boxWidth / 2,\n            0,\n          );\n          ctx.restore();\n        } else {\n          drawingLeft = left;\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            drawingLeft,\n            top,\n          );\n        }\n        charsToRender = '';\n        actualStyle = nextStyle;\n        left += sign * boxWidth;\n        boxWidth = 0;\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {TFiller} filler a fabric gradient instance\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\n   */\n  _applyPatternGradientTransformText(filler: TFiller) {\n    // TODO: verify compatibility with strokeUniform\n    const width = this.width + this.strokeWidth,\n      height = this.height + this.strokeWidth,\n      pCanvas = createCanvasElementFor({\n        width,\n        height,\n      }),\n      pCtx = pCanvas.getContext('2d')!;\n    pCanvas.width = width;\n    pCanvas.height = height;\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.fillStyle = filler.toLive(pCtx)!;\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fill();\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\n  }\n\n  handleFiller<T extends 'fill' | 'stroke'>(\n    ctx: CanvasRenderingContext2D,\n    property: `${T}Style`,\n    filler: TFiller | string,\n  ): { offsetX: number; offsetY: number } {\n    let offsetX: number, offsetY: number;\n    if (isFiller(filler)) {\n      if (\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\n        (filler as Gradient<'linear'>).gradientTransform ||\n        (filler as Pattern).patternTransform\n      ) {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        offsetX = -this.width / 2;\n        offsetY = -this.height / 2;\n        ctx.translate(offsetX, offsetY);\n        ctx[property] = this._applyPatternGradientTransformText(filler);\n        return { offsetX, offsetY };\n      } else {\n        // is a simple gradient or pattern\n        ctx[property] = filler.toLive(ctx)!;\n        return this._applyPatternGradientTransform(ctx, filler);\n      }\n    } else {\n      // is a color\n      ctx[property] = filler;\n    }\n    return { offsetX: 0, offsetY: 0 };\n  }\n\n  /**\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\n   * @returns\n   */\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    {\n      stroke,\n      strokeWidth,\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>,\n  ) {\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineDashOffset = this.strokeDashOffset;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.miterLimit = this.strokeMiterLimit;\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\n  }\n\n  /**\n   * This function prepare the canvas for a ill style, and fill\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with ill defined\n   * @returns\n   */\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    return this.handleFiller(ctx, 'fillStyle', fill!);\n  }\n\n  /**\n   * @private\n   * @param {String} method\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {String} _char\n   * @param {Number} left Left coordinate\n   * @param {Number} top Top coordinate\n   * @param {Number} lineHeight Height of the line\n   */\n  _renderChar(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    lineIndex: number,\n    charIndex: number,\n    _char: string,\n    left: number,\n    top: number,\n  ) {\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      shouldFill = method === 'fillText' && fullDecl.fill,\n      shouldStroke =\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n    if (!shouldStroke && !shouldFill) {\n      return;\n    }\n    ctx.save();\n\n    ctx.font = this._getFontDeclaration(fullDecl);\n\n    if (decl.textBackgroundColor) {\n      this._removeShadow(ctx);\n    }\n    if (decl.deltaY) {\n      top += decl.deltaY;\n    }\n\n    if (shouldFill) {\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\n      ctx.fillText(\n        _char,\n        left - fillOffsets.offsetX,\n        top - fillOffsets.offsetY,\n      );\n    }\n\n    if (shouldStroke) {\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\n      ctx.strokeText(\n        _char,\n        left - strokeOffsets.offsetX,\n        top - strokeOffsets.offsetY,\n      );\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSuperscript(start: number, end: number) {\n    this._setScript(start, end, this.superscript);\n  }\n\n  /**\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSubscript(start: number, end: number) {\n    this._setScript(start, end, this.subscript);\n  }\n\n  /**\n   * Applies 'schema' at given position\n   * @private\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   * @param {Number} schema\n   */\n  protected _setScript(\n    start: number,\n    end: number,\n    schema: {\n      size: number;\n      baseline: number;\n    },\n  ) {\n    const loc = this.get2DCursorLocation(start, true),\n      fontSize = this.getValueOfPropertyAt(\n        loc.lineIndex,\n        loc.charIndex,\n        'fontSize',\n      ),\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n      style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline,\n      };\n    this.setSelectionStyles(style, start, end);\n  }\n\n  /**\n   * @private\n   * @param {Number} lineIndex index text line\n   * @return {Number} Line left offset\n   */\n  _getLineLeftOffset(lineIndex: number): number {\n    const lineWidth = this.getLineWidth(lineIndex),\n      lineDiff = this.width - lineWidth,\n      textAlign = this.textAlign,\n      direction = this.direction,\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n    let leftOffset = 0;\n    if (\n      textAlign === JUSTIFY ||\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\n    ) {\n      return 0;\n    }\n    if (textAlign === CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (textAlign === JUSTIFY_CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === JUSTIFY_RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (direction === 'rtl') {\n      if (\n        textAlign === RIGHT ||\n        textAlign === JUSTIFY ||\n        textAlign === JUSTIFY_RIGHT\n      ) {\n        leftOffset = 0;\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\n        leftOffset = -lineDiff;\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\n        leftOffset = -lineDiff / 2;\n      }\n    }\n    return leftOffset;\n  }\n\n  /**\n   * @private\n   */\n  _clearCache() {\n    this._forceClearCache = false;\n    this.__lineWidths = [];\n    this.__lineHeights = [];\n    this.__charBounds = [];\n  }\n\n  /**\n   * Measure a single line given its index. Used to calculate the initial\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\n   * @private\n   * @param {Number} lineIndex line number\n   * @return {Number} Line width\n   */\n  getLineWidth(lineIndex: number): number {\n    if (this.__lineWidths[lineIndex] !== undefined) {\n      return this.__lineWidths[lineIndex];\n    }\n\n    const { width } = this.measureLine(lineIndex);\n    this.__lineWidths[lineIndex] = width;\n    return width;\n  }\n\n  _getWidthOfCharSpacing() {\n    if (this.charSpacing !== 0) {\n      return (this.fontSize * this.charSpacing) / 1000;\n    }\n    return 0;\n  }\n\n  /**\n   * Retrieves the value of property at given character position\n   * @param {Number} lineIndex the line number\n   * @param {Number} charIndex the character number\n   * @param {String} property the property name\n   * @returns the value of 'property'\n   */\n  getValueOfPropertyAt<T extends StylePropertiesType>(\n    lineIndex: number,\n    charIndex: number,\n    property: T,\n  ): this[T] {\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n    return (charStyle[property] ?? this[property]) as this[T];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextDecoration(\n    ctx: CanvasRenderingContext2D,\n    type: 'underline' | 'linethrough' | 'overline',\n  ) {\n    if (!this[type] && !this.styleHas(type)) {\n      return;\n    }\n    let topOffset = this._getTopOffset();\n    const leftOffset = this._getLeftOffset(),\n      path = this.path,\n      charSpacing = this._getWidthOfCharSpacing(),\n      offsetY = this.offsets[type];\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (!this[type] && !this.styleHas(type, i)) {\n        topOffset += heightOfLine;\n        continue;\n      }\n      const line = this._textLines[i];\n      const maxHeight = heightOfLine / this.lineHeight;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxStart = 0;\n      let boxWidth = 0;\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n      let lastFill = this.getValueOfPropertyAt(i, 0, FILL);\n      let currentDecoration;\n      let currentFill;\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n      let size = this.getHeightOfChar(i, 0);\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\n        currentFill = this.getValueOfPropertyAt(i, j, FILL);\n        const currentSize = this.getHeightOfChar(i, j);\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\n        if (path && currentDecoration && currentFill) {\n          ctx.save();\n          // bug? verify lastFill is a valid fill here.\n          ctx.fillStyle = lastFill as string;\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillRect(\n            -charBox.kernedWidth / 2,\n            offsetY * currentSize + currentDy,\n            charBox.kernedWidth,\n            this.fontSize / 15,\n          );\n          ctx.restore();\n        } else if (\n          (currentDecoration !== lastDecoration ||\n            currentFill !== lastFill ||\n            currentSize !== size ||\n            currentDy !== dy) &&\n          boxWidth > 0\n        ) {\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          if (lastDecoration && lastFill) {\n            // bug? verify lastFill is a valid fill here.\n            ctx.fillStyle = lastFill as string;\n            ctx.fillRect(\n              drawStart,\n              top + offsetY * size + dy,\n              boxWidth,\n              this.fontSize / 15,\n            );\n          }\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastDecoration = currentDecoration;\n          lastFill = currentFill;\n          size = currentSize;\n          dy = currentDy;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\n      if (this.direction === 'rtl') {\n        drawStart = this.width - drawStart - boxWidth;\n      }\n      ctx.fillStyle = currentFill as string;\n      currentDecoration &&\n        currentFill &&\n        ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15,\n        );\n      topOffset += heightOfLine;\n    }\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * return font declaration string for canvas context\n   * @param {Object} [styleObject] object\n   * @returns {String} font declaration formatted for canvas context.\n   */\n  _getFontDeclaration(\n    {\n      fontFamily = this.fontFamily,\n      fontStyle = this.fontStyle,\n      fontWeight = this.fontWeight,\n      fontSize = this.fontSize,\n    }: Partial<\n      Pick<\n        TextStyleDeclaration,\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\n      >\n    > = {},\n    forMeasuring?: boolean,\n  ): string {\n    const parsedFontFamily =\n      fontFamily.includes(\"'\") ||\n      fontFamily.includes('\"') ||\n      fontFamily.includes(',') ||\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\n        ? fontFamily\n        : `\"${fontFamily}\"`;\n    return [\n      fontStyle,\n      fontWeight,\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\n      parsedFontFamily,\n    ].join(' ');\n  }\n\n  /**\n   * Renders text instance on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    if (!this.visible) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    if (this._forceClearCache) {\n      this.initDimensions();\n    }\n    super.render(ctx);\n  }\n\n  /**\n   * Override this method to customize grapheme splitting\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\n   * is more comfortable to inject the correct util rather than having to override text\n   * in the middle of the prototype chain\n   * @param {string} value\n   * @returns {string[]} array of graphemes\n   */\n  graphemeSplit(value: string): string[] {\n    return graphemeSplit(value);\n  }\n\n  /**\n   * Returns the text as an array of lines.\n   * @param {String} text text to split\n   * @returns  Lines in the text\n   */\n  _splitTextIntoLines(text: string): TextLinesInfo {\n    const lines = text.split(this._reNewline),\n      newLines = new Array<string[]>(lines.length),\n      newLine = ['\\n'];\n    let newText: string[] = [];\n    for (let i = 0; i < lines.length; i++) {\n      newLines[i] = this.graphemeSplit(lines[i]);\n      newText = newText.concat(newLines[i], newLine);\n    }\n    newText.pop();\n    return {\n      _unwrappedLines: newLines,\n      lines: lines,\n      graphemeText: newText,\n      graphemeLines: newLines,\n    };\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\n      styles: stylesToArray(this.styles, this.text),\n      ...(this.path ? { path: this.path.toObject() } : {}),\n    };\n  }\n\n  set(key: string | any, value?: any) {\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\n    super.set(key, value);\n    let needsDims = false;\n    let isAddingPath = false;\n    if (typeof key === 'object') {\n      for (const _key in key) {\n        if (_key === 'path') {\n          this.setPathInfo();\n        }\n        needsDims = needsDims || textLayoutProperties.includes(_key);\n        isAddingPath = isAddingPath || _key === 'path';\n      }\n    } else {\n      needsDims = textLayoutProperties.includes(key);\n      isAddingPath = key === 'path';\n    }\n    if (isAddingPath) {\n      this.setPathInfo();\n    }\n    if (needsDims && this.initialized) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    return this;\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity\n   */\n  complexity(): number {\n    return 1;\n  }\n\n  /**\n   * List of generic font families\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#generic-name\n   */\n  static genericFonts = [\n    'serif',\n    'sans-serif',\n    'monospace',\n    'cursive',\n    'fantasy',\n    'system-ui',\n    'ui-serif',\n    'ui-sans-serif',\n    'ui-monospace',\n    'ui-rounded',\n    'math',\n    'emoji',\n    'fangsong',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\n   * @static\n   * @memberOf Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\n    'x',\n    'y',\n    'dx',\n    'dy',\n    'font-family',\n    'font-style',\n    'font-weight',\n    'font-size',\n    'letter-spacing',\n    'text-decoration',\n    'text-anchor',\n  );\n\n  /**\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf Text\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      FabricText.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n\n    const {\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\n      textDecoration = '',\n      dx = 0,\n      dy = 0,\n      top = 0,\n      left = 0,\n      fontSize = DEFAULT_SVG_FONT_SIZE,\n      strokeWidth = 1,\n      ...restOfOptions\n    } = { ...options, ...parsedAttributes };\n\n    const textContent = (element.textContent || '')\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\n      .replace(/\\s+/g, ' ');\n\n    // this code here is probably the usual issue for SVG center find\n    // this can later looked at again and probably removed.\n\n    const text = new this(textContent, {\n        left: left + dx,\n        top: top + dy,\n        underline: textDecoration.includes('underline'),\n        overline: textDecoration.includes('overline'),\n        linethrough: textDecoration.includes('line-through'),\n        // we initialize this as 0\n        strokeWidth: 0,\n        fontSize,\n        ...restOfOptions,\n      }),\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\n      lineHeightDiff =\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\n      textHeight = text.getScaledHeight() + scaledDiff;\n\n    let offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (textAnchor === CENTER) {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (textAnchor === RIGHT) {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top:\n        text.top -\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\n          text.lineHeight,\n      strokeWidth,\n    });\n    return text;\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns FabricText instance from an object representation\n   * @param {Object} object plain js Object to create an instance from\n   * @returns {Promise<FabricText>}\n   */\n  static fromObject<\n    T extends TOptions<SerializedTextProps>,\n    S extends FabricText,\n  >(object: T) {\n    return this._fromObject<S>(\n      {\n        ...object,\n        styles: stylesFromArray(object.styles || {}, object.text),\n      },\n      {\n        extraParam: 'text',\n      },\n    );\n  }\n}\n\napplyMixins(FabricText, [TextSVGExportMixin]);\nclassRegistry.setClass(FabricText);\nclassRegistry.setSVGClass(FabricText);\n","import type {\n  DragEventData,\n  DropEventData,\n  TPointerEvent,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { IText } from './IText';\nimport { setStyle } from '../../util/dom_style';\nimport { cloneStyles } from '../../util/internals/cloneStyles';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, NONE } from '../../constants';\n\n/**\n * #### Dragging IText/Textbox Lifecycle\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\n */\nexport class DraggableTextDelegate {\n  readonly target: IText;\n  private __mouseDownInPlace = false;\n  private __dragStartFired = false;\n  private __isDraggingOver = false;\n  private __dragStartSelection?: {\n    selectionStart: number;\n    selectionEnd: number;\n  };\n  private __dragImageDisposer?: VoidFunction;\n  private _dispose?: () => void;\n\n  constructor(target: IText) {\n    this.target = target;\n    const disposers = [\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\n      this.target.on('drop', this.dropHandler.bind(this)),\n    ];\n    this._dispose = () => {\n      disposers.forEach((d) => d());\n      this._dispose = undefined;\n    };\n  }\n\n  isPointerOverSelection(e: TPointerEvent) {\n    const target = this.target;\n    const newSelection = target.getSelectionStartFromPointer(e);\n    return (\n      target.isEditing &&\n      newSelection >= target.selectionStart &&\n      newSelection <= target.selectionEnd &&\n      target.selectionStart < target.selectionEnd\n    );\n  }\n\n  /**\n   * @public override this method to disable dragging and default to mousedown logic\n   */\n  start(e: TPointerEvent) {\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\n  }\n\n  /**\n   * @public override this method to disable dragging without discarding selection\n   */\n  isActive() {\n    return this.__mouseDownInPlace;\n  }\n\n  /**\n   * Ends interaction and sets cursor in case of a click\n   * @returns true if was active\n   */\n  end(e: TPointerEvent) {\n    const active = this.isActive();\n    if (active && !this.__dragStartFired) {\n      // mousedown has been blocked since `active` is true => cursor has not been set.\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\n      // meaning this is actually a click, `active` is a false positive.\n      this.target.setCursorByClick(e);\n      this.target.initDelayedCursor(true);\n    }\n    this.__mouseDownInPlace = false;\n    this.__dragStartFired = false;\n    this.__isDraggingOver = false;\n    return active;\n  }\n\n  getDragStartSelection() {\n    return this.__dragStartSelection;\n  }\n\n  /**\n   * Override to customize the drag image\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\n   */\n  setDragImage(\n    e: DragEvent,\n    {\n      selectionStart,\n      selectionEnd,\n    }: {\n      selectionStart: number;\n      selectionEnd: number;\n    },\n  ) {\n    const target = this.target;\n    const canvas = target.canvas!;\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\n    const boundaries = target._getCursorBoundaries(selectionStart);\n    const selectionPosition = new Point(\n      boundaries.left + boundaries.leftOffset,\n      boundaries.top + boundaries.topOffset,\n    ).multiply(flipFactor);\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\n    const pointer = canvas.getScenePoint(e);\n    const diff = pointer.subtract(pos);\n    const retinaScaling = target.getCanvasRetinaScaling();\n    const bbox = target.getBoundingRect();\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\n    const vpt = canvas.viewportTransform;\n    const offset = correction.add(diff).transform(vpt, true);\n    //  prepare instance for drag image snapshot by making all non selected text invisible\n    const bgc = target.backgroundColor;\n    const styles = cloneStyles(target.styles);\n    target.backgroundColor = '';\n    const styleOverride = {\n      stroke: 'transparent',\n      fill: 'transparent',\n      textBackgroundColor: 'transparent',\n    };\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\n    target.dirty = true;\n    const dragImage = target.toCanvasElement({\n      enableRetinaScaling: canvas.enableRetinaScaling,\n      viewportTransform: true,\n    });\n    // restore values\n    target.backgroundColor = bgc;\n    target.styles = styles;\n    target.dirty = true;\n    //  position drag image offscreen\n    setStyle(dragImage, {\n      position: 'fixed',\n      left: `${-dragImage.width}px`,\n      border: NONE,\n      width: `${dragImage.width / retinaScaling}px`,\n      height: `${dragImage.height / retinaScaling}px`,\n    });\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    this.__dragImageDisposer = () => {\n      dragImage.remove();\n    };\n    getDocumentFromElement(\n      (e.target || this.target.hiddenTextarea)! as HTMLElement,\n    ).body.appendChild(dragImage);\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\n  }\n\n  /**\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\n   */\n  onDragStart(e: DragEvent): boolean {\n    this.__dragStartFired = true;\n    const target = this.target;\n    const active = this.isActive();\n    if (active && e.dataTransfer) {\n      const selection = (this.__dragStartSelection = {\n        selectionStart: target.selectionStart,\n        selectionEnd: target.selectionEnd,\n      });\n      const value = target._text\n        .slice(selection.selectionStart, selection.selectionEnd)\n        .join('');\n      const data = { text: target.text, value, ...selection };\n      e.dataTransfer.setData('text/plain', value);\n      e.dataTransfer.setData(\n        'application/fabric',\n        JSON.stringify({\n          value: value,\n          styles: target.getSelectionStyles(\n            selection.selectionStart,\n            selection.selectionEnd,\n            true,\n          ),\n        }),\n      );\n      e.dataTransfer.effectAllowed = 'copyMove';\n      this.setDragImage(e, data);\n    }\n    target.abortCursorAnimation();\n    return active;\n  }\n\n  /**\n   * use {@link targetCanDrop} to respect overriding\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent): boolean {\n    if (\n      this.target.editable &&\n      !this.target.getActiveControl() &&\n      !e.defaultPrevented\n    ) {\n      if (this.isActive() && this.__dragStartSelection) {\n        //  drag source trying to drop over itself\n        //  allow dropping only outside of drag start selection\n        const index = this.target.getSelectionStartFromPointer(e);\n        const dragStartSelection = this.__dragStartSelection;\n        return (\n          index < dragStartSelection.selectionStart ||\n          index > dragStartSelection.selectionEnd\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\n   */\n  protected targetCanDrop(e: DragEvent) {\n    return this.target.canDrop(e);\n  }\n\n  dragEnterHandler({ e }: DragEventData) {\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    }\n  }\n\n  dragOverHandler(ev: DragEventData) {\n    const { e } = ev;\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    } else if (this.__isDraggingOver && !canDrop) {\n      //  drop state has changed\n      this.__isDraggingOver = false;\n    }\n    if (this.__isDraggingOver) {\n      //  can be dropped, inform browser\n      e.preventDefault();\n      //  inform event subscribers\n      ev.canDrop = true;\n      ev.dropTarget = this.target;\n    }\n  }\n\n  dragLeaveHandler() {\n    if (this.__isDraggingOver || this.isActive()) {\n      this.__isDraggingOver = false;\n    }\n  }\n\n  /**\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\n   */\n  dropHandler(ev: DropEventData) {\n    const { e } = ev;\n    const didDrop = e.defaultPrevented;\n    this.__isDraggingOver = false;\n    // inform browser that the drop has been accepted\n    e.preventDefault();\n    let insert = e.dataTransfer?.getData('text/plain');\n    if (insert && !didDrop) {\n      const target = this.target;\n      const canvas = target.canvas!;\n      let insertAt = target.getSelectionStartFromPointer(e);\n      const { styles } = (\n        e.dataTransfer!.types.includes('application/fabric')\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\n          : {}\n      ) as { styles: TextStyleDeclaration[] };\n      const trailing = insert[Math.max(0, insert.length - 1)];\n      const selectionStartOffset = 0;\n      //  drag and drop in same instance\n      if (this.__dragStartSelection) {\n        const selectionStart = this.__dragStartSelection.selectionStart;\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\n          insertAt = selectionStart;\n        } else if (insertAt > selectionEnd) {\n          insertAt -= selectionEnd - selectionStart;\n        }\n        target.removeChars(selectionStart, selectionEnd);\n        // prevent `dragend` from handling event\n        delete this.__dragStartSelection;\n      }\n      //  remove redundant line break\n      if (\n        target._reNewline.test(trailing) &&\n        (target._reNewline.test(target._text[insertAt]) ||\n          insertAt === target._text.length)\n      ) {\n        insert = insert.trimEnd();\n      }\n      //  inform subscribers\n      ev.didDrop = true;\n      ev.dropTarget = target;\n      //  finalize\n      target.insertChars(insert, styles, insertAt);\n      // can this part be moved in an outside event? andrea to check.\n      canvas.setActiveObject(target);\n      target.enterEditing(e);\n      target.selectionStart = Math.min(\n        insertAt + selectionStartOffset,\n        target._text.length,\n      );\n      target.selectionEnd = Math.min(\n        target.selectionStart + insert.length,\n        target._text.length,\n      );\n      target.hiddenTextarea!.value = target.text;\n      target._updateTextarea();\n      target.hiddenTextarea!.focus();\n      target.fire(CHANGED, {\n        index: insertAt + selectionStartOffset,\n        action: 'drop',\n      });\n      canvas.fire('text:changed', { target });\n      canvas.contextTopDirty = true;\n      canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * fired only on the drag source after drop (if occurred)\n   * handle changes to the drag source in case of a drop on another object or a cancellation\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   */\n  dragEndHandler({ e }: DragEventData) {\n    if (this.isActive() && this.__dragStartFired) {\n      //  once the drop event finishes we check if we need to change the drag source\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\n      if (this.__dragStartSelection) {\n        const target = this.target;\n        const canvas = this.target.canvas!;\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\n        if (dropEffect === NONE) {\n          // pointer is back over selection\n          target.selectionStart = selectionStart;\n          target.selectionEnd = selectionEnd;\n          target._updateTextarea();\n          target.hiddenTextarea!.focus();\n        } else {\n          target.clearContextTop();\n          if (dropEffect === 'move') {\n            target.removeChars(selectionStart, selectionEnd);\n            target.selectionStart = target.selectionEnd = selectionStart;\n            target.hiddenTextarea &&\n              (target.hiddenTextarea.value = target.text);\n            target._updateTextarea();\n            target.fire(CHANGED, {\n              index: selectionStart,\n              action: 'dragend',\n            });\n            canvas.fire('text:changed', { target });\n            canvas.requestRenderAll();\n          }\n          target.exitEditing();\n        }\n      }\n    }\n\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    delete this.__dragImageDisposer;\n    delete this.__dragStartSelection;\n    this.__isDraggingOver = false;\n  }\n\n  dispose() {\n    this._dispose && this._dispose();\n  }\n}\n","import type {\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventInfo,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { FabricText } from '../Text/Text';\nimport { animate } from '../../util/animation/animate';\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport type { TOptions } from '../../typedefs';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, MODIFIED, RIGHT, reNewline } from '../../constants';\nimport type { IText } from './IText';\n\n/**\n *  extend this regex to support non english languages\n *\n *  - ` `      Matches a SPACE character (char code 32).\n *  - `\\n`     Matches a LINE FEED character (char code 10).\n *  - `\\.`     Matches a \".\" character (char code 46).\n *  - `,`      Matches a \",\" character (char code 44).\n *  - `;`      Matches a \";\" character (char code 59).\n *  - `!`      Matches a \"!\" character (char code 33).\n *  - `\\?`     Matches a \"?\" character (char code 63).\n *  - `\\-`     Matches a \"-\" character (char code 45).\n */\n// eslint-disable-next-line no-useless-escape\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\nexport type ITextEvents = ObjectEvents & {\n  'selection:changed': never;\n  changed: never | { index: number; action: string };\n  tripleclick: TPointerEventInfo;\n  'editing:entered': never | { e: TPointerEvent };\n  'editing:exited': never;\n};\n\nexport abstract class ITextBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends FabricText<Props, SProps, EventSpec> {\n  declare abstract isEditing: boolean;\n  declare abstract cursorDelay: number;\n  declare abstract selectionStart: number;\n  declare abstract selectionEnd: number;\n  declare abstract cursorDuration: number;\n  declare abstract editable: boolean;\n  declare abstract editingBorderColor: string;\n\n  declare abstract compositionStart: number;\n  declare abstract compositionEnd: number;\n\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * Helps determining when the text is in composition, so that the cursor\n   * rendering is altered.\n   */\n  protected declare inCompositionMode: boolean;\n\n  protected declare _reSpace: RegExp;\n  private declare _currentTickState?: ValueAnimation;\n  private declare _currentTickCompleteState?: ValueAnimation;\n  protected _currentCursorOpacity = 1;\n  private declare _textBeforeEdit: string;\n  protected declare __selectionStartOnMouseDown: number;\n\n  protected declare selected: boolean;\n  protected declare cursorOffsetCache: { left?: number; top?: number };\n  protected declare _savedProps?: {\n    hasControls: boolean;\n    borderColor: string;\n    lockMovementX: boolean;\n    lockMovementY: boolean;\n    selectable: boolean;\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\n    defaultCursor?: CSSStyleDeclaration['cursor'];\n    moveCursor?: CSSStyleDeclaration['cursor'];\n  };\n  protected declare _selectionDirection: 'left' | 'right' | null;\n\n  abstract initHiddenTextarea(): void;\n  abstract _fireSelectionChanged(): void;\n  abstract renderCursorOrSelection(): void;\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\n  abstract _getCursorBoundaries(\n    index: number,\n    skipCaching?: boolean,\n  ): {\n    left: number;\n    top: number;\n    leftOffset: number;\n    topOffset: number;\n  };\n\n  /**\n   * Initializes all the interactive behavior of IText\n   */\n  initBehavior() {\n    this._tick = this._tick.bind(this);\n    this._onTickComplete = this._onTickComplete.bind(this);\n    this.updateSelectionOnMouseMove =\n      this.updateSelectionOnMouseMove.bind(this);\n  }\n\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\n    this.isEditing && this.exitEditing();\n    this.selected = false;\n    return super.onDeselect(options);\n  }\n\n  /**\n   * @private\n   */\n  _animateCursor({\n    toValue,\n    duration,\n    delay,\n    onComplete,\n  }: {\n    toValue: number;\n    duration: number;\n    delay?: number;\n    onComplete?: TOnAnimationChangeCallback<number, void>;\n  }) {\n    return animate({\n      startValue: this._currentCursorOpacity,\n      endValue: toValue,\n      duration,\n      delay,\n      onComplete,\n      abort: () =>\n        !this.canvas ||\n        // we do not want to animate a selection, only cursor\n        this.selectionStart !== this.selectionEnd,\n      onChange: (value) => {\n        this._currentCursorOpacity = value;\n        this.renderCursorOrSelection();\n      },\n    });\n  }\n\n  /**\n   * changes the cursor from visible to invisible\n   */\n  private _tick(delay?: number) {\n    this._currentTickState = this._animateCursor({\n      toValue: 0,\n      duration: this.cursorDuration / 2,\n      delay: Math.max(delay || 0, 100),\n      onComplete: this._onTickComplete,\n    });\n  }\n\n  /**\n   * Changes the cursor from invisible to visible\n   */\n  private _onTickComplete() {\n    this._currentTickCompleteState?.abort();\n    this._currentTickCompleteState = this._animateCursor({\n      toValue: 1,\n      duration: this.cursorDuration,\n      onComplete: this._tick,\n    });\n  }\n\n  /**\n   * Initializes delayed cursor\n   */\n  initDelayedCursor(restart?: boolean) {\n    this.abortCursorAnimation();\n    this._tick(restart ? 0 : this.cursorDelay);\n  }\n\n  /**\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\n   */\n  abortCursorAnimation() {\n    let shouldClear = false;\n    [this._currentTickState, this._currentTickCompleteState].forEach(\n      (cursorAnimation) => {\n        if (cursorAnimation && !cursorAnimation.isDone()) {\n          shouldClear = true;\n          cursorAnimation.abort();\n        }\n      },\n    );\n\n    this._currentCursorOpacity = 1;\n\n    //  make sure we clear context even if instance is not editing\n    if (shouldClear) {\n      this.clearContextTop();\n    }\n  }\n\n  /**\n   * Restart tue cursor animation if either is in complete state ( between animations )\n   * or if it never started before\n   */\n  restartCursorIfNeeded() {\n    if (\n      [this._currentTickState, this._currentTickCompleteState].some(\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone(),\n      )\n    ) {\n      this.initDelayedCursor();\n    }\n  }\n\n  /**\n   * Selects entire text\n   */\n  selectAll() {\n    this.selectionStart = 0;\n    this.selectionEnd = this._text.length;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Returns selected text\n   * @return {String}\n   */\n  getSelectedText(): string {\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n  }\n\n  /**\n   * Find new selection index representing start of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    // remove space before cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index--;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    // remove space after cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index++;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Find new selection index representing start of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    while (!/\\n/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Finds index corresponding to beginning or end of a word\n   * @param {Number} selectionStart Index of a character\n   * @param {Number} direction 1 or -1\n   * @return {Number} Index of the beginning or end of a word\n   */\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\n    const text = this._text;\n    // if we land on a space we move the cursor backwards\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\n    let index =\n        selectionStart > 0 &&\n        this._reSpace.test(text[selectionStart]) &&\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\n          ? selectionStart - 1\n          : selectionStart,\n      _char = text[index];\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\n      index += direction;\n      _char = text[index];\n    }\n    if (direction === -1 && reNonWord.test(_char)) {\n      index++;\n    }\n    return index;\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a word based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectWord(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    // search backwards\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n      // search forward\n      newSelectionEnd = Math.max(\n        newSelectionStart,\n        this.searchWordBoundary(selectionStart, 1),\n      );\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * TODO fix: selectionStart set as 0 will be ignored?\n   * Selects a line based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectLine(selectionStart?: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Enters editing state\n   */\n  enterEditing(e?: TPointerEvent) {\n    if (this.isEditing || !this.editable) {\n      return;\n    }\n    this.enterEditingImpl();\n    this.fire('editing:entered', e ? { e } : undefined);\n    this._fireSelectionChanged();\n    if (this.canvas) {\n      this.canvas.fire('text:editing:entered', {\n        target: this as unknown as IText,\n        e,\n      });\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * runs the actual logic that enter from editing state, see {@link enterEditing}\n   */\n  enterEditingImpl() {\n    if (this.canvas) {\n      this.canvas.calcOffset();\n      this.canvas.textEditingManager.exitTextEditing();\n    }\n\n    this.isEditing = true;\n\n    this.initHiddenTextarea();\n    this.hiddenTextarea!.focus();\n    this.hiddenTextarea!.value = this.text;\n    this._updateTextarea();\n    this._saveEditingProps();\n    this._setEditingProps();\n    this._textBeforeEdit = this.text;\n\n    this._tick();\n  }\n\n  /**\n   * called by {@link Canvas#textEditingManager}\n   */\n  updateSelectionOnMouseMove(e: TPointerEvent) {\n    if (this.getActiveControl()) {\n      return;\n    }\n\n    const el = this.hiddenTextarea!;\n    // regain focus\n    getDocumentFromElement(el).activeElement !== el && el.focus();\n\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\n      currentStart = this.selectionStart,\n      currentEnd = this.selectionEnd;\n    if (\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\n        currentStart === currentEnd) &&\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n    ) {\n      return;\n    }\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\n      this.selectionStart = this.__selectionStartOnMouseDown;\n      this.selectionEnd = newSelectionStart;\n    } else {\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = this.__selectionStartOnMouseDown;\n    }\n    if (\n      this.selectionStart !== currentStart ||\n      this.selectionEnd !== currentEnd\n    ) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setEditingProps() {\n    this.hoverCursor = 'text';\n\n    if (this.canvas) {\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n    }\n\n    this.borderColor = this.editingBorderColor;\n    this.hasControls = this.selectable = false;\n    this.lockMovementX = this.lockMovementY = true;\n  }\n\n  /**\n   * convert from textarea to grapheme indexes\n   */\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\n    const smallerTextStart = text.slice(0, start),\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = text.slice(start, end),\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * convert from fabric to textarea values\n   */\n  fromGraphemeToStringSelection(\n    start: number,\n    end: number,\n    graphemes: string[],\n  ) {\n    const smallerTextStart = graphemes.slice(0, start),\n      graphemeStart = smallerTextStart.join('').length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = graphemes.slice(start, end),\n      graphemeEnd = smallerTextEnd.join('').length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _updateTextarea() {\n    this.cursorOffsetCache = {};\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    if (!this.inCompositionMode) {\n      const newSelection = this.fromGraphemeToStringSelection(\n        this.selectionStart,\n        this.selectionEnd,\n        this._text,\n      );\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateFromTextArea() {\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    this.cursorOffsetCache = {};\n    const textarea = this.hiddenTextarea;\n    this.text = textarea.value;\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    const newSelection = this.fromStringToGraphemeSelection(\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      textarea.value,\n    );\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n    if (!this.inCompositionMode) {\n      this.selectionStart = newSelection.selectionStart;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateTextareaPosition() {\n    if (this.selectionStart === this.selectionEnd) {\n      const style = this._calcTextareaPosition();\n      this.hiddenTextarea!.style.left = style.left;\n      this.hiddenTextarea!.style.top = style.top;\n    }\n  }\n\n  /**\n   * @private\n   * @return {Object} style contains style for hiddenTextarea\n   */\n  _calcTextareaPosition() {\n    if (!this.canvas) {\n      return { left: '1px', top: '1px' };\n    }\n    const desiredPosition = this.inCompositionMode\n        ? this.compositionStart\n        : this.selectionStart,\n      boundaries = this._getCursorBoundaries(desiredPosition),\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex = cursorLocation.charIndex,\n      charHeight =\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\n        this.lineHeight,\n      leftOffset = boundaries.leftOffset,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      upperCanvas = this.canvas.upperCanvasEl,\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\n      maxWidth = upperCanvasWidth - charHeight,\n      maxHeight = upperCanvasHeight - charHeight;\n\n    const p = new Point(\n      boundaries.left + leftOffset,\n      boundaries.top + boundaries.topOffset + charHeight,\n    )\n      .transform(this.calcTransformMatrix())\n      .transform(this.canvas.viewportTransform)\n      .multiply(\n        new Point(\n          upperCanvas.clientWidth / upperCanvasWidth,\n          upperCanvas.clientHeight / upperCanvasHeight,\n        ),\n      );\n\n    if (p.x < 0) {\n      p.x = 0;\n    }\n    if (p.x > maxWidth) {\n      p.x = maxWidth;\n    }\n    if (p.y < 0) {\n      p.y = 0;\n    }\n    if (p.y > maxHeight) {\n      p.y = maxHeight;\n    }\n\n    // add canvas offset on document\n    p.x += this.canvas._offset.left;\n    p.y += this.canvas._offset.top;\n\n    return {\n      left: `${p.x}px`,\n      top: `${p.y}px`,\n      fontSize: `${charHeight}px`,\n      charHeight: charHeight,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _saveEditingProps() {\n    this._savedProps = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      lockMovementX: this.lockMovementX,\n      lockMovementY: this.lockMovementY,\n      hoverCursor: this.hoverCursor,\n      selectable: this.selectable,\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\n      moveCursor: this.canvas && this.canvas.moveCursor,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _restoreEditingProps() {\n    if (!this._savedProps) {\n      return;\n    }\n\n    this.hoverCursor = this._savedProps.hoverCursor;\n    this.hasControls = this._savedProps.hasControls;\n    this.borderColor = this._savedProps.borderColor;\n    this.selectable = this._savedProps.selectable;\n    this.lockMovementX = this._savedProps.lockMovementX;\n    this.lockMovementY = this._savedProps.lockMovementY;\n\n    if (this.canvas) {\n      this.canvas.defaultCursor =\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\n      this.canvas.moveCursor =\n        this._savedProps.moveCursor || this.canvas.moveCursor;\n    }\n\n    delete this._savedProps;\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * Please use exitEditingImpl, this function was kept to avoid breaking changes.\n   * Will be removed in fabric 7.0\n   * @deprecated use \"exitEditingImpl\"\n   */\n  protected _exitEditing() {\n    const hiddenTextarea = this.hiddenTextarea;\n    this.selected = false;\n    this.isEditing = false;\n\n    if (hiddenTextarea) {\n      hiddenTextarea.blur && hiddenTextarea.blur();\n      hiddenTextarea.parentNode &&\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n    }\n    this.hiddenTextarea = null;\n    this.abortCursorAnimation();\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   * But it does not fire events\n   */\n  exitEditingImpl() {\n    this._exitEditing();\n    this.selectionEnd = this.selectionStart;\n    this._restoreEditingProps();\n    if (this._forceClearCache) {\n      this.initDimensions();\n      this.setCoords();\n    }\n  }\n\n  /**\n   * Exits from editing state and fires relevant events\n   */\n  exitEditing() {\n    const isTextChanged = this._textBeforeEdit !== this.text;\n    this.exitEditingImpl();\n\n    this.fire('editing:exited');\n    isTextChanged && this.fire(MODIFIED);\n    if (this.canvas) {\n      this.canvas.fire('text:editing:exited', {\n        target: this as unknown as IText,\n      });\n      // todo: evaluate add an action to this event\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _removeExtraneousStyles() {\n    for (const prop in this.styles) {\n      if (!this._textLines[prop as unknown as number]) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * remove and reflow a style block from start to end.\n   * @param {Number} start linear start position for removal (included in removal)\n   * @param {Number} end linear end position for removal ( excluded from removal )\n   */\n  removeStyleFromTo(start: number, end: number) {\n    const { lineIndex: lineStart, charIndex: charStart } =\n        this.get2DCursorLocation(start, true),\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\n        end,\n        true,\n      );\n    if (lineStart !== lineEnd) {\n      // step1 remove the trailing of lineStart\n      if (this.styles[lineStart]) {\n        for (\n          let i = charStart;\n          i < this._unwrappedTextLines[lineStart].length;\n          i++\n        ) {\n          delete this.styles[lineStart][i];\n        }\n      }\n      // step2 move the trailing of lineEnd to lineStart if needed\n      if (this.styles[lineEnd]) {\n        for (\n          let i = charEnd;\n          i < this._unwrappedTextLines[lineEnd].length;\n          i++\n        ) {\n          const styleObj = this.styles[lineEnd][i];\n          if (styleObj) {\n            this.styles[lineStart] || (this.styles[lineStart] = {});\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n          }\n        }\n      }\n      // step3 detects lines will be completely removed.\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\n        delete this.styles[i];\n      }\n      // step4 shift remaining lines.\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n    } else {\n      // remove and shift left on the same line\n      if (this.styles[lineStart]) {\n        const styleObj = this.styles[lineStart];\n        const diff = charEnd - charStart;\n        for (let i = charStart; i < charEnd; i++) {\n          delete styleObj[i];\n        }\n        for (const char in this.styles[lineStart]) {\n          const numericChar = parseInt(char, 10);\n          if (numericChar >= charEnd) {\n            styleObj[numericChar - diff] = styleObj[char];\n            delete styleObj[char];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Shifts line styles up or down\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} offset Can any number?\n   */\n  shiftLineStyles(lineIndex: number, offset: number) {\n    const clonedStyles = Object.assign({}, this.styles);\n    for (const line in this.styles) {\n      const numericLine = parseInt(line, 10);\n      if (numericLine > lineIndex) {\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\n        if (!clonedStyles[numericLine - offset]) {\n          delete this.styles[numericLine];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle insertion of more consecutive style lines for when one or more\n   * newlines gets added to the text. Since current style needs to be shifted\n   * first we shift the current style of the number lines needed, then we add\n   * new lines from the last to the first.\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} qty number of lines to add\n   * @param {Array} copiedStyle Array of objects styles\n   */\n  insertNewlineStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    qty: number,\n    copiedStyle?: { [index: number]: TextStyleDeclaration },\n  ) {\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\n    const isEndOfLine = originalLineLength === charIndex;\n\n    let someStyleIsCarryingOver = false;\n    qty || (qty = 1);\n    this.shiftLineStyles(lineIndex, qty);\n    const currentCharStyle = this.styles[lineIndex]\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\n      : undefined;\n\n    // we clone styles of all chars\n    // after cursor onto the current line\n    for (const index in this.styles[lineIndex]) {\n      const numIndex = parseInt(index, 10);\n      if (numIndex >= charIndex) {\n        someStyleIsCarryingOver = true;\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n        // remove lines from the previous line since they're on a new line now\n        if (!(isEndOfLine && charIndex === 0)) {\n          delete this.styles[lineIndex][index];\n        }\n      }\n    }\n    let styleCarriedOver = false;\n    if (someStyleIsCarryingOver && !isEndOfLine) {\n      // if is end of line, the extra style we copied\n      // is probably not something we want\n      this.styles[lineIndex + qty] = newLineStyles;\n      styleCarriedOver = true;\n    }\n    if (styleCarriedOver || originalLineLength > charIndex) {\n      // skip the last line of since we already prepared it.\n      // or contains text without style that we don't want to style\n      // just because it changed lines\n      qty--;\n    }\n    // for the all the lines or all the other lines\n    // we clone current char style onto the next (otherwise empty) line\n    while (qty > 0) {\n      if (copiedStyle && copiedStyle[qty - 1]) {\n        this.styles[lineIndex + qty] = {\n          0: { ...copiedStyle[qty - 1] },\n        };\n      } else if (currentCharStyle) {\n        this.styles[lineIndex + qty] = {\n          0: { ...currentCharStyle },\n        };\n      } else {\n        delete this.styles[lineIndex + qty];\n      }\n      qty--;\n    }\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Inserts style object for a given line/char index\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} quantity number Style object to insert, if given\n   * @param {Array} copiedStyle array of style objects\n   */\n  insertCharStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    quantity: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    if (!this.styles) {\n      this.styles = {};\n    }\n    const currentLineStyles = this.styles[lineIndex],\n      currentLineStylesCloned = currentLineStyles\n        ? { ...currentLineStyles }\n        : {};\n\n    quantity || (quantity = 1);\n    // shift all char styles by quantity forward\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n    for (const index in currentLineStylesCloned) {\n      const numericIndex = parseInt(index, 10);\n      if (numericIndex >= charIndex) {\n        currentLineStyles[numericIndex + quantity] =\n          currentLineStylesCloned[numericIndex];\n        // only delete the style if there was nothing moved there\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\n          delete currentLineStyles[numericIndex];\n        }\n      }\n    }\n    this._forceClearCache = true;\n    if (copiedStyle) {\n      while (quantity--) {\n        if (!Object.keys(copiedStyle[quantity]).length) {\n          continue;\n        }\n        if (!this.styles[lineIndex]) {\n          this.styles[lineIndex] = {};\n        }\n        this.styles[lineIndex][charIndex + quantity] = {\n          ...copiedStyle[quantity],\n        };\n      }\n      return;\n    }\n    if (!currentLineStyles) {\n      return;\n    }\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n    while (newStyle && quantity--) {\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\n    }\n  }\n\n  /**\n   * Inserts style object(s)\n   * @param {Array} insertedText Characters at the location where style is inserted\n   * @param {Number} start cursor index for inserting style\n   * @param {Array} [copiedStyle] array of style objects to insert.\n   */\n  insertNewStyleBlock(\n    insertedText: string[],\n    start: number,\n    copiedStyle?: TextStyleDeclaration[],\n  ) {\n    const cursorLoc = this.get2DCursorLocation(start, true),\n      addedLines = [0];\n    let linesLength = 0;\n    // get an array of how many char per lines are being added.\n    for (let i = 0; i < insertedText.length; i++) {\n      if (insertedText[i] === '\\n') {\n        linesLength++;\n        addedLines[linesLength] = 0;\n      } else {\n        addedLines[linesLength]++;\n      }\n    }\n    // for the first line copy the style from the current char position.\n    if (addedLines[0] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex,\n        addedLines[0],\n        copiedStyle,\n      );\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n    }\n    linesLength &&\n      this.insertNewlineStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex + addedLines[0],\n        linesLength,\n      );\n    let i;\n    for (i = 1; i < linesLength; i++) {\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(\n          cursorLoc.lineIndex + i,\n          0,\n          addedLines[i],\n          copiedStyle,\n        );\n      } else if (copiedStyle) {\n        // this test is required in order to close #6841\n        // when a pasted buffer begins with a newline then\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n        // may be undefined for some reason\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n      }\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n    }\n    if (addedLines[i] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex + i,\n        0,\n        addedLines[i],\n        copiedStyle,\n      );\n    }\n  }\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars(start: number, end: number = start + 1) {\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars(\n    text: string,\n    style: TextStyleDeclaration[] | undefined,\n    start: number,\n    end: number = start,\n  ) {\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    const graphemes = this.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [\n      ...this._text.slice(0, start),\n      ...graphemes,\n      ...this._text.slice(end),\n    ];\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * Set the selectionStart and selectionEnd according to the new position of cursor\n   * mimic the key - mouse navigation when shift is pressed.\n   */\n  setSelectionStartEndWithShift(\n    start: number,\n    end: number,\n    newSelection: number,\n  ) {\n    if (newSelection <= start) {\n      if (end === start) {\n        this._selectionDirection = LEFT;\n      } else if (this._selectionDirection === RIGHT) {\n        this._selectionDirection = LEFT;\n        this.selectionEnd = start;\n      }\n      this.selectionStart = newSelection;\n    } else if (newSelection > start && newSelection < end) {\n      if (this._selectionDirection === RIGHT) {\n        this.selectionEnd = newSelection;\n      } else {\n        this.selectionStart = newSelection;\n      }\n    } else {\n      // newSelection is > selection start and end\n      if (end === start) {\n        this._selectionDirection = RIGHT;\n      } else if (this._selectionDirection === LEFT) {\n        this._selectionDirection = RIGHT;\n        this.selectionStart = end;\n      }\n      this.selectionEnd = newSelection;\n    }\n  }\n}\n","import { config } from '../../config';\nimport { getFabricDocument, getEnv } from '../../env';\nimport { capValue } from '../../util/misc/capValue';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextBehavior } from './ITextBehavior';\nimport type { TKeyMapIText } from './constants';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { CHANGED, LEFT, RIGHT } from '../../constants';\nimport type { IText } from './IText';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\n\nexport abstract class ITextKeyBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextBehavior<Props, SProps, EventSpec> {\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behavior for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the IText or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = Object.assign({}, this.keysMap);\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\n   */\n  declare keysMap: TKeyMapIText;\n\n  declare keysMapRtl: TKeyMapIText;\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  declare ctrlKeysMapUp: TKeyMapIText;\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  declare ctrlKeysMapDown: TKeyMapIText;\n\n  declare hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * DOM container to append the hiddenTextarea.\n   * An alternative to attaching to the document.body.\n   * Useful to reduce laggish redraw of the full document.body tree and\n   * also with modals event capturing that won't let the textarea take focus.\n   * @type HTMLElement\n   * @default\n   */\n  declare hiddenTextareaContainer?: HTMLElement | null;\n\n  private declare _clickHandlerInitialized: boolean;\n  private declare _copyDone: boolean;\n  private declare fromPaste: boolean;\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea() {\n    const doc =\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n      getFabricDocument();\n    const textarea = doc.createElement('textarea');\n    Object.entries({\n      autocapitalize: 'off',\n      autocorrect: 'off',\n      autocomplete: 'off',\n      spellcheck: 'false',\n      'data-fabric': 'textarea',\n      wrap: 'off',\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\n    const { top, left, fontSize } = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\n\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\n\n    Object.entries({\n      blur: 'blur',\n      keydown: 'onKeyDown',\n      keyup: 'onKeyUp',\n      input: 'onInput',\n      copy: 'copy',\n      cut: 'copy',\n      paste: 'paste',\n      compositionstart: 'onCompositionStart',\n      compositionupdate: 'onCompositionUpdate',\n      compositionend: 'onCompositionEnd',\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\n      textarea.addEventListener(\n        eventName,\n        (this[handler] as EventListener).bind(this),\n      ),\n    );\n    this.hiddenTextarea = textarea;\n  }\n\n  /**\n   * Override this method to customize cursor behavior on textbox blur\n   */\n  blur() {\n    this.abortCursorAnimation();\n  }\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isEditing) {\n      return;\n    }\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      // @ts-expect-error legacy method calling pattern\n      this[keyMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      // @ts-expect-error legacy method calling pattern\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      // @ts-expect-error legacy method calling pattern\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  }\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\n    const fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    const updateAndFire = () => {\n      this.updateFromTextArea();\n      this.fire(CHANGED);\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\n        this.canvas.requestRenderAll();\n      }\n    };\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      updateAndFire();\n      return;\n    }\n    // decisions about style changes.\n    const nextText = this._splitTextIntoLines(\n        this.hiddenTextarea.value,\n      ).graphemeText,\n      charCount = this._text.length,\n      nextCharCount = nextText.length,\n      selectionStart = this.selectionStart,\n      selectionEnd = this.selectionEnd,\n      selection = selectionStart !== selectionEnd;\n    let copiedStyle: TextStyleDeclaration[] | undefined,\n      removedText,\n      charDiff = nextCharCount - charCount,\n      removeFrom,\n      removeTo;\n\n    const textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value,\n    );\n    const backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      } else {\n        removedText = this._text.slice(\n          selectionStart,\n          selectionStart - charDiff,\n        );\n      }\n    }\n    const insertedText = nextText.slice(\n      textareaSelection.selectionEnd - charDiff,\n      textareaSelection.selectionEnd,\n    );\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(\n          selectionStart,\n          selectionStart + 1,\n          false,\n        );\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(\n          () =>\n            // this return an array of references, but that is fine since we are\n            // copying the style later.\n            copiedStyle![0],\n        );\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      } else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      } else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      const { copyPasteData } = getEnv();\n      if (\n        fromPaste &&\n        insertedText.join('') === copyPasteData.copiedText &&\n        !config.disableStyleCopyPaste\n      ) {\n        copiedStyle = copyPasteData.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    updateAndFire();\n  }\n\n  /**\n   * Composition start\n   */\n  onCompositionStart() {\n    this.inCompositionMode = true;\n  }\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd() {\n    this.inCompositionMode = false;\n  }\n\n  onCompositionUpdate({ target }: CompositionEvent) {\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\n    this.compositionStart = selectionStart;\n    this.compositionEnd = selectionEnd;\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * Copies selected text\n   */\n  copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    const { copyPasteData } = getEnv();\n    copyPasteData.copiedText = this.getSelectedText();\n    if (!config.disableStyleCopyPaste) {\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd,\n        true,\n      );\n    } else {\n      copyPasteData.copiedTextStyle = undefined;\n    }\n    this._copyDone = true;\n  }\n\n  /**\n   * Pastes text\n   */\n  paste() {\n    this.fromPaste = true;\n  }\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n      bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  }\n\n  /**\n   * Gets start offset of a selection\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (\n      lineIndex === this._textLines.length - 1 ||\n      e.metaKey ||\n      e.keyCode === 34\n    ) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return (\n      textAfterCursor.length +\n      indexOnOtherLine +\n      1 +\n      this.missingNewlineOffset(lineIndex)\n    );\n  }\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return (\n      -this._textLines[lineIndex - 1].length +\n      indexOnOtherLine -\n      textBeforeCursor.length +\n      (1 - missingNewlineOffset)\n    );\n  }\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine(lineIndex: number, width: number) {\n    const line = this._textLines[lineIndex],\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    let widthOfCharsOnLine = lineLeftOffset,\n      indexOnLine = 0,\n      charWidth,\n      foundMatch;\n\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        const leftEdge = widthOfCharsOnLine - charWidth,\n          rightEdge = widthOfCharsOnLine,\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\n          offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  }\n\n  /**\n   * Moves cursor down\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorDown(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  }\n\n  /**\n   * Moves cursor up\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorUp(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  }\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\n    const offset = this[`get${direction}CursorOffset`](\n      e,\n      this._selectionDirection === RIGHT,\n    );\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      const max = this.text.length;\n      this.selectionStart = capValue(0, this.selectionStart, max);\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift(offset: number) {\n    const newSelection =\n      this._selectionDirection === LEFT\n        ? this.selectionStart + offset\n        : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(\n      this.selectionStart,\n      this.selectionEnd,\n      newSelection,\n    );\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift(offset: number) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor left\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorLeft(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  }\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   *\n   * @todo refactor not to use method name composition\n   */\n  _move(\n    e: KeyboardEvent,\n    prop: 'selectionStart' | 'selectionEnd',\n    direction: 'Left' | 'Right',\n  ): boolean {\n    let newValue: number | undefined;\n    if (e.altKey) {\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Left');\n  }\n\n  /**\n   * @private\n   */\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Right');\n  }\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\n    let change = true;\n    this._selectionDirection = LEFT;\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (\n      this.selectionEnd === this.selectionStart &&\n      this.selectionStart !== 0\n    ) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  }\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === RIGHT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = LEFT;\n      return this._moveLeft(e, 'selectionStart');\n    }\n  }\n\n  /**\n   * Moves cursor right\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRight(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  }\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\n    const actionName = `moveCursor${direction}${\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\n    }` as const;\n    this._currentCursorOpacity = 1;\n    if (this[actionName](e)) {\n      // TODO fix: abort and init should be an alternative depending\n      // on selectionStart/End being equal or different\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorRightWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === LEFT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = RIGHT;\n      return this._moveRight(e, 'selectionEnd');\n    }\n  }\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\n    let changed = true;\n    this._selectionDirection = RIGHT;\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  }\n}\n","import type { TPointerEvent, TPointerEventInfo } from '../../EventTypeDefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { stopEvent } from '../../util/dom_event';\nimport { invertTransform } from '../../util/misc/matrix';\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\n\n/**\n * `LEFT_CLICK === 0`\n */\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\n\nexport abstract class ITextClickBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents,\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\n  private declare __lastSelected: boolean;\n  private declare __lastClickTime: number;\n  private declare __lastLastClickTime: number;\n  private declare __lastPointer: XY | Record<string, never>;\n  private declare __newClickTime: number;\n\n  protected draggableTextDelegate: DraggableTextDelegate;\n\n  initBehavior() {\n    // Initializes event handlers related to cursor or selection\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n    this.on('mouseup', this.mouseUpHandler);\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n\n    // Initializes \"dbclick\" event handler\n    this.__lastClickTime = +new Date();\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n\n    // @ts-expect-error in reality it is an IText instance\n    this.draggableTextDelegate = new DraggableTextDelegate(this);\n\n    super.initBehavior();\n  }\n\n  /**\n   * If this method returns true a mouse move operation over a text selection\n   * will not prevent the native mouse event allowing the browser to start a drag operation.\n   * shouldStartDragging can be read 'do not prevent default for mouse move event'\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns\n   */\n  shouldStartDragging() {\n    return this.draggableTextDelegate.isActive();\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drag source,\n   * @see also {@link DraggableTextDelegate#isActive}\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\n   * @returns {boolean} should handle event\n   */\n  onDragStart(e: DragEvent) {\n    return this.draggableTextDelegate.onDragStart(e);\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent) {\n    return this.draggableTextDelegate.canDrop(e);\n  }\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown(options: TPointerEventInfo) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    const newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastSelected = this.selected && !this.getActiveControl();\n  }\n\n  isTripleClick(newPointer: XY) {\n    return (\n      this.__newClickTime - this.__lastClickTime < 500 &&\n      this.__lastClickTime - this.__lastLastClickTime < 500 &&\n      this.__lastPointer.x === newPointer.x &&\n      this.__lastPointer.y === newPointer.y\n    );\n  }\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler({ e }: TPointerEventInfo) {\n    if (\n      !this.canvas ||\n      !this.editable ||\n      notALeftClick(e) ||\n      this.getActiveControl()\n    ) {\n      return;\n    }\n\n    if (this.draggableTextDelegate.start(e)) {\n      return;\n    }\n\n    this.canvas.textEditingManager.register(this);\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore({ e }: TPointerEventInfo) {\n    if (!this.canvas || !this.editable || notALeftClick(e)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  }\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler({ e, transform }: TPointerEventInfo) {\n    const didDrag = this.draggableTextDelegate.end(e);\n    if (this.canvas) {\n      this.canvas.textEditingManager.unregister(this);\n\n      const activeObject = this.canvas._activeObject;\n      if (activeObject && activeObject !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n    if (\n      !this.editable ||\n      (this.group && !this.group.interactive) ||\n      (transform && transform.actionPerformed) ||\n      notALeftClick(e) ||\n      didDrag\n    ) {\n      return;\n    }\n\n    if (this.__lastSelected && !this.getActiveControl()) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  }\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {TPointerEvent} e Event object\n   */\n  setCursorByClick(e: TPointerEvent) {\n    const newSelection = this.getSelectionStartFromPointer(e),\n      start = this.selectionStart,\n      end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {TPointerEvent} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer(e: TPointerEvent): number {\n    const mouseOffset = this.canvas!.getScenePoint(e)\n      .transform(invertTransform(this.calcTransformMatrix()))\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\n    let height = 0,\n      charIndex = 0,\n      lineIndex = 0;\n\n    for (let i = 0; i < this._textLines.length; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i);\n        lineIndex = i;\n        if (i > 0) {\n          charIndex +=\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\n    let width = lineLeftOffset;\n    const charLength = this._textLines[lineIndex].length;\n    const chars = this.__charBounds[lineIndex];\n    for (let j = 0; j < charLength; j++) {\n      // i removed something about flipX here, check.\n      const charWidth = chars[j].kernedWidth;\n      const widthAfter = width + charWidth;\n      if (mouseOffset.x <= widthAfter) {\n        // if the pointer is closer to the end of the char we increment charIndex\n        // in order to position the cursor after the char\n        if (\n          Math.abs(mouseOffset.x - widthAfter) <=\n          Math.abs(mouseOffset.x - width)\n        ) {\n          charIndex++;\n        }\n        break;\n      }\n      width = widthAfter;\n      charIndex++;\n    }\n\n    return Math.min(\n      // if object is horizontally flipped, mirror cursor location from the end\n      this.flipX ? charLength - charIndex : charIndex,\n      this._text.length,\n    );\n  }\n}\n","export type TKeyMapIText = Record<\n  KeyboardEvent['keyCode'],\n  CursorHandlingMethods\n>;\n\nexport type CursorHandlingMethods =\n  | 'moveCursorUp'\n  | 'moveCursorDown'\n  | 'moveCursorLeft'\n  | 'moveCursorRight'\n  | 'exitEditing'\n  | 'copy'\n  | 'cut'\n  | 'selectAll';\n\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\n\n// @TODO look into import { Key } from 'ts-key-enum';\n// and transition from keyCode to Key\n// also reduce string duplication\nexport const keysMap: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_RIGHT,\n  36: MOVE_CURSOR_LEFT,\n  37: MOVE_CURSOR_LEFT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_RIGHT,\n  40: MOVE_CURSOR_DOWN,\n};\n\nexport const keysMapRtl: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_LEFT,\n  36: MOVE_CURSOR_RIGHT,\n  37: MOVE_CURSOR_RIGHT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_LEFT,\n  40: MOVE_CURSOR_DOWN,\n};\n\n/**\n * For functionalities on keyUp + ctrl || cmd\n */\nexport const ctrlKeysMapUp: TKeyMapIText = {\n  67: 'copy',\n  // there was a reason this wasn't deleted. for now leave it here\n  88: 'cut',\n};\n\n/**\n * For functionalities on keyDown + ctrl || cmd\n */\nexport const ctrlKeysMapDown: TKeyMapIText = {\n  65: 'selectAll',\n};\n","import { Canvas } from '../../canvas/Canvas';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextClickBehavior } from './ITextClickBehavior';\nimport {\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  keysMap,\n  keysMapRtl,\n} from './constants';\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport {\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from '../Text/constants';\nimport { CENTER, FILL, LEFT, RIGHT } from '../../constants';\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\n\nexport type CursorBoundaries = {\n  left: number;\n  top: number;\n  leftOffset: number;\n  topOffset: number;\n};\n\nexport type CursorRenderingData = {\n  color: string;\n  opacity: number;\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\n// Declare IText protected properties to workaround TS\nconst protectedDefaultValues = {\n  _selectionDirection: null,\n  _reSpace: /\\s|\\r?\\n/,\n  inCompositionMode: false,\n};\n\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\n  selectionStart: 0,\n  selectionEnd: 0,\n  selectionColor: 'rgba(17,119,255,0.3)',\n  isEditing: false,\n  editable: true,\n  editingBorderColor: 'rgba(102,153,255,0.25)',\n  cursorWidth: 2,\n  cursorColor: '',\n  cursorDelay: 1000,\n  cursorDuration: 600,\n  caching: true,\n  hiddenTextareaContainer: null,\n  keysMap,\n  keysMapRtl,\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  ...protectedDefaultValues,\n};\n\n// @TODO this is not complete\ninterface UniqueITextProps {\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface SerializedITextProps\n  extends SerializedTextProps,\n    UniqueITextProps {}\n\nexport interface ITextProps extends TextProps, UniqueITextProps {}\n\n/**\n * @fires changed\n * @fires selection:changed\n * @fires editing:entered\n * @fires editing:exited\n * @fires dragstart\n * @fires drag drag event firing on the drag source\n * @fires dragend\n * @fires copy\n * @fires cut\n * @fires paste\n *\n * #### Supported key combinations\n * ```\n *   Move cursor:                    left, right, up, down\n *   Select character:               shift + left, shift + right\n *   Select text vertically:         shift + up, shift + down\n *   Move cursor by word:            alt + left, alt + right\n *   Select words:                   shift + alt + left, shift + alt + right\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n *   Jump to start/end of text:      cmd + up, cmd + down\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n *   Delete character:               backspace\n *   Delete word:                    alt + backspace\n *   Delete line:                    cmd + backspace\n *   Forward delete:                 delete\n *   Copy text:                      ctrl/cmd + c\n *   Paste text:                     ctrl/cmd + v\n *   Cut text:                       ctrl/cmd + x\n *   Select entire text:             ctrl/cmd + a\n *   Quit editing                    tab or esc\n * ```\n *\n * #### Supported mouse/touch combination\n * ```\n *   Position cursor:                click/touch\n *   Create selection:               click/touch & drag\n *   Create selection:               click & shift + click\n *   Select word:                    double click\n *   Select line:                    triple click\n * ```\n */\nexport class IText<\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\n    SProps extends SerializedITextProps = SerializedITextProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends ITextClickBehavior<Props, SProps, EventSpec>\n  implements UniqueITextProps\n{\n  /**\n   * Index where text selection starts (or where cursor is when there is no selection)\n   * @type Number\n   * @default\n   */\n  declare selectionStart: number;\n\n  /**\n   * Index where text selection ends\n   * @type Number\n   * @default\n   */\n  declare selectionEnd: number;\n\n  declare compositionStart: number;\n\n  declare compositionEnd: number;\n\n  /**\n   * Color of text selection\n   * @type String\n   * @default\n   */\n  declare selectionColor: string;\n\n  /**\n   * Indicates whether text is in editing mode\n   * @type Boolean\n   * @default\n   */\n  declare isEditing: boolean;\n\n  /**\n   * Indicates whether a text can be edited\n   * @type Boolean\n   * @default\n   */\n  declare editable: boolean;\n\n  /**\n   * Border color of text object while it's in editing mode\n   * @type String\n   * @default\n   */\n  declare editingBorderColor: string;\n\n  /**\n   * Width of cursor (in px)\n   * @type Number\n   * @default\n   */\n  declare cursorWidth: number;\n\n  /**\n   * Color of text cursor color in editing mode.\n   * if not set (default) will take color from the text.\n   * if set to a color value that fabric can understand, it will\n   * be used instead of the color of the text at the current position.\n   * @type String\n   * @default\n   */\n  declare cursorColor: string;\n\n  /**\n   * Delay between cursor blink (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDelay: number;\n\n  /**\n   * Duration of cursor fade in (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDuration: number;\n\n  declare compositionColor: string;\n\n  /**\n   * Indicates whether internal text char widths can be cached\n   * @type Boolean\n   * @default\n   */\n  declare caching: boolean;\n\n  static ownDefaults = iTextDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...IText.ownDefaults };\n  }\n\n  static type = 'IText';\n\n  get type() {\n    const type = super.type;\n    // backward compatibility\n    return type === 'itext' ? 'i-text' : type;\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...IText.ownDefaults, ...options } as Props);\n    this.initBehavior();\n  }\n\n  /**\n   * While editing handle differently\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\n      // @ts-expect-error irritating TS\n      this._savedProps[key] = value;\n      return this;\n    }\n    if (key === 'canvas') {\n      this.canvas instanceof Canvas &&\n        this.canvas.textEditingManager.remove(this);\n      value instanceof Canvas && value.textEditingManager.add(this);\n    }\n    return super._set(key, value);\n  }\n\n  /**\n   * Sets selection start (left boundary of a selection)\n   * @param {Number} index Index to set selection start to\n   */\n  setSelectionStart(index: number) {\n    index = Math.max(index, 0);\n    this._updateAndFire('selectionStart', index);\n  }\n\n  /**\n   * Sets selection end (right boundary of a selection)\n   * @param {Number} index Index to set selection end to\n   */\n  setSelectionEnd(index: number) {\n    index = Math.min(index, this.text.length);\n    this._updateAndFire('selectionEnd', index);\n  }\n\n  /**\n   * @private\n   * @param {String} property 'selectionStart' or 'selectionEnd'\n   * @param {Number} index new position of property\n   */\n  protected _updateAndFire(\n    property: 'selectionStart' | 'selectionEnd',\n    index: number,\n  ) {\n    if (this[property] !== index) {\n      this._fireSelectionChanged();\n      this[property] = index;\n    }\n    this._updateTextarea();\n  }\n\n  /**\n   * Fires the even of selection changed\n   * @private\n   */\n  _fireSelectionChanged() {\n    this.fire('selection:changed');\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n  }\n\n  /**\n   * Initialize text dimensions. Render all text on given context\n   * or on a offscreen canvas to get the text width with measureText.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   * @private\n   */\n  initDimensions() {\n    this.isEditing && this.initDelayedCursor();\n    super.initDimensions();\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n    complete?: boolean,\n  ) {\n    return super.getSelectionStyles(startIndex, endIndex, complete);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} [styles] Styles object\n   * @param {Number} [startIndex] Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n   */\n  setSelectionStyles(\n    styles: object,\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n  ) {\n    return super.setSelectionStyles(styles, startIndex, endIndex);\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(\n    selectionStart = this.selectionStart,\n    skipWrapping?: boolean,\n  ) {\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx);\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n    // the correct position but not at every cursor animation.\n    this.cursorOffsetCache = {};\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * @override block cursor/selection logic while rendering the exported canvas\n   * @todo this workaround should be replaced with a more robust solution\n   */\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\n    const isEditing = this.isEditing;\n    this.isEditing = false;\n    const canvas = super.toCanvasElement(options);\n    this.isEditing = isEditing;\n    return canvas;\n  }\n\n  /**\n   * Renders cursor or selection (depending on what exists)\n   * it does on the contextTop. If contextTop is not available, do nothing.\n   */\n  renderCursorOrSelection() {\n    if (!this.isEditing) {\n      return;\n    }\n    const ctx = this.clearContextTop(true);\n    if (!ctx) {\n      return;\n    }\n    const boundaries = this._getCursorBoundaries();\n    if (this.selectionStart === this.selectionEnd && !this.inCompositionMode) {\n      this.renderCursor(ctx, boundaries);\n    } else {\n      this.renderSelection(ctx, boundaries);\n    }\n    this.canvas!.contextTopDirty = true;\n    ctx.restore();\n  }\n\n  /**\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\n   * left/top are left/top of entire text box\n   * leftOffset/topOffset are offset from that left/top point of a text box\n   * @private\n   * @param {number} [index] index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundaries(\n    index: number = this.selectionStart,\n    skipCaching?: boolean,\n  ): CursorBoundaries {\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset(),\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\n    return {\n      left: left,\n      top: top,\n      leftOffset: offsets.left,\n      topOffset: offsets.top,\n    };\n  }\n\n  /**\n   * Caches and returns cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundariesOffsets(\n    index: number,\n    skipCaching?: boolean,\n  ): { left: number; top: number } {\n    if (skipCaching) {\n      return this.__getCursorBoundariesOffsets(index);\n    }\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n      return this.cursorOffsetCache as { left: number; top: number };\n    }\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\n  }\n\n  /**\n   * Calculates cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   */\n  __getCursorBoundariesOffsets(index: number) {\n    let topOffset = 0,\n      leftOffset = 0;\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\n\n    for (let i = 0; i < lineIndex; i++) {\n      topOffset += this.getHeightOfLine(i);\n    }\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    const bound = this.__charBounds[lineIndex][charIndex];\n    bound && (leftOffset = bound.left);\n    if (\n      this.charSpacing !== 0 &&\n      charIndex === this._textLines[lineIndex].length\n    ) {\n      leftOffset -= this._getWidthOfCharSpacing();\n    }\n    const boundaries = {\n      top: topOffset,\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n    };\n    if (this.direction === 'rtl') {\n      if (\n        this.textAlign === RIGHT ||\n        this.textAlign === JUSTIFY ||\n        this.textAlign === JUSTIFY_RIGHT\n      ) {\n        boundaries.left *= -1;\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      } else if (\n        this.textAlign === CENTER ||\n        this.textAlign === JUSTIFY_CENTER\n      ) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      }\n    }\n    return boundaries;\n  }\n\n  /**\n   * Renders cursor on context Top, outside the animation cycle, on request\n   * Used for the drag/drop effect.\n   * If contextTop is not available, do nothing.\n   */\n  renderCursorAt(selectionStart: number) {\n    this._renderCursor(\n      this.canvas!.contextTop,\n      this._getCursorBoundaries(selectionStart, true),\n      selectionStart,\n    );\n  }\n\n  /**\n   * Renders cursor\n   * @param {Object} boundaries\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    this._renderCursor(ctx, boundaries, this.selectionStart);\n  }\n\n  /**\n   * Return the data needed to render the cursor for given selection start\n   * The left,top are relative to the object, while width and height are prescaled\n   * to look think with canvas zoom and object scaling,\n   * so they depend on canvas and object scaling\n   */\n  getCursorRenderingData(\n    selectionStart: number = this.selectionStart,\n    boundaries: CursorBoundaries = this._getCursorBoundaries(selectionStart),\n  ): CursorRenderingData {\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex =\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\n      cursorWidth = this.cursorWidth / multiplier,\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\n      topOffset =\n        boundaries.topOffset +\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\n          this.lineHeight -\n        charHeight * (1 - this._fontSizeFraction);\n\n    return {\n      color:\n        this.cursorColor ||\n        (this.getValueOfPropertyAt(lineIndex, charIndex, 'fill') as string),\n      opacity: this._currentCursorOpacity,\n      left: boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n      top: topOffset + boundaries.top + dy,\n      width: cursorWidth,\n      height: charHeight,\n    };\n  }\n\n  /**\n   * Render the cursor at the given selectionStart.\n   *\n   */\n  _renderCursor(\n    ctx: CanvasRenderingContext2D,\n    boundaries: CursorBoundaries,\n    selectionStart: number,\n  ) {\n    const { color, opacity, left, top, width, height } =\n      this.getCursorRenderingData(selectionStart, boundaries);\n    ctx.fillStyle = color;\n    ctx.globalAlpha = opacity;\n    ctx.fillRect(left, top, width, height);\n  }\n\n  /**\n   * Renders text selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    const selection = {\n      selectionStart: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionStart\n        : this.selectionStart,\n      selectionEnd: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionEnd\n        : this.selectionEnd,\n    };\n    this._renderSelection(ctx, selection, boundaries);\n  }\n\n  /**\n   * Renders drag start text selection\n   */\n  renderDragSourceEffect() {\n    const dragStartSelection =\n      this.draggableTextDelegate.getDragStartSelection()!;\n    this._renderSelection(\n      this.canvas!.contextTop,\n      dragStartSelection,\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true),\n    );\n  }\n\n  renderDropTargetEffect(e: DragEvent) {\n    const dragSelection = this.getSelectionStartFromPointer(e);\n    this.renderCursorAt(dragSelection);\n  }\n\n  /**\n   * Renders text selection\n   * @private\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderSelection(\n    ctx: CanvasRenderingContext2D,\n    selection: { selectionStart: number; selectionEnd: number },\n    boundaries: CursorBoundaries,\n  ) {\n    const selectionStart = selection.selectionStart,\n      selectionEnd = selection.selectionEnd,\n      isJustify = this.textAlign.includes(JUSTIFY),\n      start = this.get2DCursorLocation(selectionStart),\n      end = this.get2DCursorLocation(selectionEnd),\n      startLine = start.lineIndex,\n      endLine = end.lineIndex,\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n    for (let i = startLine; i <= endLine; i++) {\n      const lineOffset = this._getLineLeftOffset(i) || 0;\n      let lineHeight = this.getHeightOfLine(i),\n        realLineHeight = 0,\n        boxStart = 0,\n        boxEnd = 0;\n\n      if (i === startLine) {\n        boxStart = this.__charBounds[startLine][startChar].left;\n      }\n      if (i >= startLine && i < endLine) {\n        boxEnd =\n          isJustify && !this.isEndOfWrapping(i)\n            ? this.width\n            : this.getLineWidth(i) || 5; // WTF is this 5?\n      } else if (i === endLine) {\n        if (endChar === 0) {\n          boxEnd = this.__charBounds[endLine][endChar].left;\n        } else {\n          const charSpacing = this._getWidthOfCharSpacing();\n          boxEnd =\n            this.__charBounds[endLine][endChar - 1].left +\n            this.__charBounds[endLine][endChar - 1].width -\n            charSpacing;\n        }\n      }\n      realLineHeight = lineHeight;\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n        lineHeight /= this.lineHeight;\n      }\n      let drawStart = boundaries.left + lineOffset + boxStart,\n        drawHeight = lineHeight,\n        extraTop = 0;\n      const drawWidth = boxEnd - boxStart;\n      if (this.inCompositionMode) {\n        ctx.fillStyle = this.compositionColor || 'black';\n        drawHeight = 1;\n        extraTop = lineHeight;\n      } else {\n        ctx.fillStyle = this.selectionColor;\n      }\n      if (this.direction === 'rtl') {\n        if (\n          this.textAlign === RIGHT ||\n          this.textAlign === JUSTIFY ||\n          this.textAlign === JUSTIFY_RIGHT\n        ) {\n          drawStart = this.width - drawStart - drawWidth;\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        } else if (\n          this.textAlign === CENTER ||\n          this.textAlign === JUSTIFY_CENTER\n        ) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        }\n      }\n      ctx.fillRect(\n        drawStart,\n        boundaries.top + boundaries.topOffset + extraTop,\n        drawWidth,\n        drawHeight,\n      );\n      boundaries.topOffset += realLineHeight;\n    }\n  }\n\n  /**\n   * High level function to know the height of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns fontSize of char at the current cursor\n   * Unused from the library, is for the end user\n   * @return {Number} Character font size\n   */\n  getCurrentCharFontSize(): number {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n  }\n\n  /**\n   * High level function to know the color of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns color (fill) of char at the current cursor\n   * if the text object has a pattern or gradient for filler, it will return that.\n   * Unused by the library, is for the end user\n   * @return {String | TFiller} Character color (fill)\n   */\n  getCurrentCharColor(): string | TFiller | null {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, FILL);\n  }\n\n  /**\n   * Returns the cursor position for the getCurrent.. functions\n   * @private\n   */\n  _getCurrentCharIndex() {\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n      charIndex =\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n    return { l: cursorPosition.lineIndex, c: charIndex };\n  }\n\n  dispose() {\n    this.exitEditingImpl();\n    this.draggableTextDelegate.dispose();\n    super.dispose();\n  }\n}\n\nclassRegistry.setClass(IText);\n// legacy\nclassRegistry.setClass(IText, 'i-text');\n","import type { TClassProperties, TOptions } from '../typedefs';\nimport { IText } from './IText/IText';\nimport { classRegistry } from '../ClassRegistry';\nimport { createTextboxDefaultControls } from '../controls/commonControls';\nimport { JUSTIFY } from './Text/constants';\nimport type { TextStyleDeclaration } from './Text/StyledText';\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\nimport type { ITextEvents } from './IText/ITextBehavior';\nimport type { TextLinesInfo } from './Text/Text';\nimport type { Control } from '../controls/Control';\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\n  minWidth: 20,\n  dynamicMinWidth: 2,\n  lockScalingFlip: true,\n  noScaleCache: false,\n  _wordJoiners: /[ \\t\\r]/,\n  splitByGrapheme: false,\n};\n\nexport type GraphemeData = {\n  wordsData: {\n    word: string[];\n    width: number;\n  }[][];\n  largestWordWidth: number;\n};\n\nexport type StyleMap = Record<string, { line: number; offset: number }>;\n\n// @TODO this is not complete\ninterface UniqueTextboxProps {\n  minWidth: number;\n  splitByGrapheme: boolean;\n  dynamicMinWidth: number;\n  _wordJoiners: RegExp;\n}\n\nexport interface SerializedTextboxProps\n  extends SerializedITextProps,\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\n\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\n\n/**\n * Textbox class, based on IText, allows the user to resize the text rectangle\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\n * user can only change width. Height is adjusted automatically based on the\n * wrapping of lines.\n */\nexport class Textbox<\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\n    EventSpec extends ITextEvents = ITextEvents,\n  >\n  extends IText<Props, SProps, EventSpec>\n  implements UniqueTextboxProps\n{\n  /**\n   * Minimum width of textbox, in pixels.\n   * @type Number\n   * @default\n   */\n  declare minWidth: number;\n\n  /**\n   * Minimum calculated width of a textbox, in pixels.\n   * fixed to 2 so that an empty textbox cannot go to 0\n   * and is still selectable without text.\n   * @type Number\n   * @default\n   */\n  declare dynamicMinWidth: number;\n\n  /**\n   * Use this boolean property in order to split strings that have no white space concept.\n   * this is a cheap way to help with chinese/japanese\n   * @type Boolean\n   * @since 2.6.0\n   */\n  declare splitByGrapheme: boolean;\n\n  declare _wordJoiners: RegExp;\n\n  declare _styleMap: StyleMap;\n\n  declare isWrapping: boolean;\n\n  static type = 'Textbox';\n\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\n\n  static ownDefaults = textboxDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Textbox.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, { ...Textbox.ownDefaults, ...options } as Props);\n  }\n\n  /**\n   * Creates the default control object.\n   * If you prefer to have on instance of controls shared among all objects\n   * make this function return an empty object and add controls to the ownDefaults object\n   */\n  static createControls(): { controls: Record<string, Control> } {\n    return { controls: createTextboxDefaultControls() };\n  }\n\n  /**\n   * Unlike superclass's version of this function, Textbox does not update\n   * its width.\n   * @private\n   * @override\n   */\n  initDimensions() {\n    if (!this.initialized) {\n      return;\n    }\n    this.isEditing && this.initDelayedCursor();\n    this._clearCache();\n    // clear dynamicMinWidth as it will be different after we re-wrap line\n    this.dynamicMinWidth = 0;\n    // wrap lines\n    this._styleMap = this._generateStyleMap(this._splitText());\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n    if (this.dynamicMinWidth > this.width) {\n      this._set('width', this.dynamicMinWidth);\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n    // clear cache and re-calculate height\n    this.height = this.calcTextHeight();\n  }\n\n  /**\n   * Generate an object that translates the style object so that it is\n   * broken up by visual lines (new lines and automatic wrapping).\n   * The original text styles object is broken up by actual lines (new lines only),\n   * which is only sufficient for Text / IText\n   * @private\n   */\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\n    let realLineCount = 0,\n      realLineCharCount = 0,\n      charCount = 0;\n    const map: StyleMap = {};\n\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n        realLineCharCount = 0;\n        charCount++;\n        realLineCount++;\n      } else if (\n        !this.splitByGrapheme &&\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\n        i > 0\n      ) {\n        // this case deals with space's that are removed from end of lines when wrapping\n        realLineCharCount++;\n        charCount++;\n      }\n\n      map[i] = { line: realLineCount, offset: realLineCharCount };\n\n      charCount += textInfo.graphemeLines[i].length;\n      realLineCharCount += textInfo.graphemeLines[i].length;\n    }\n\n    return map;\n  }\n\n  /**\n   * Returns true if object has a style property or has it on a specified line\n   * @param {Number} lineIndex\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (map) {\n        lineIndex = map.line;\n      }\n    }\n    return super.styleHas(property, lineIndex);\n  }\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    let offset = 0,\n      nextLineIndex = lineIndex + 1,\n      nextOffset: number,\n      shouldLimit = false;\n    const map = this._styleMap[lineIndex],\n      mapNextLine = this._styleMap[lineIndex + 1];\n    if (map) {\n      lineIndex = map.line;\n      offset = map.offset;\n    }\n    if (mapNextLine) {\n      nextLineIndex = mapNextLine.line;\n      shouldLimit = nextLineIndex === lineIndex;\n      nextOffset = mapNextLine.offset;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        const p2Number = parseInt(p2, 10);\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\n          // eslint-disable-next-line no-unused-vars\n          for (const p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n  ): TextStyleDeclaration {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (!map) {\n        return {};\n      }\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n    }\n    return super._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object,\n  ) {\n    const map = this._styleMap[lineIndex];\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\n  }\n\n  /**\n   * probably broken need a fix\n   * Returns the real style line that correspond to the wrapped lineIndex line\n   * Used just to verify if the line does exist or not.\n   * @param {Number} lineIndex\n   * @returns {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    const map = this._styleMap[lineIndex];\n    return !!this.styles[map.line];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._setLineStyle(map.line);\n  }\n\n  /**\n   * Wraps text using the 'width' property of Textbox. First this function\n   * splits text on newlines, so we preserve newlines entered by the user.\n   * Then it wraps each line using the width of the Textbox by calling\n   * _wrapLine().\n   * @param {Array} lines The string array of text that is split into lines\n   * @param {Number} desiredWidth width you want to wrap to\n   * @returns {Array} Array of lines\n   */\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\n    this.isWrapping = true;\n    // extract all thewords and the widths to optimally wrap lines.\n    const data = this.getGraphemeDataForRender(lines);\n    const wrapped: string[][] = [];\n    for (let i = 0; i < data.wordsData.length; i++) {\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\n    }\n    this.isWrapping = false;\n    return wrapped;\n  }\n\n  /**\n   * For each line of text terminated by an hard line stop,\n   * measure each word width and extract the largest word from all.\n   * The returned words here are the one that at the end will be rendered.\n   * @param {string[]} lines the lines we need to measure\n   *\n   */\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\n    const splitByGrapheme = this.splitByGrapheme,\n      infix = splitByGrapheme ? '' : ' ';\n\n    let largestWordWidth = 0;\n\n    const data = lines.map((line, lineIndex) => {\n      let offset = 0;\n      const wordsOrGraphemes = splitByGrapheme\n        ? this.graphemeSplit(line)\n        : this.wordSplit(line);\n\n      if (wordsOrGraphemes.length === 0) {\n        return [{ word: [], width: 0 }];\n      }\n\n      return wordsOrGraphemes.map((word: string) => {\n        // if using splitByGrapheme words are already in graphemes.\n        const graphemeArray = splitByGrapheme\n          ? [word]\n          : this.graphemeSplit(word);\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\n        largestWordWidth = Math.max(width, largestWordWidth);\n        offset += graphemeArray.length + infix.length;\n        return { word: graphemeArray, width };\n      });\n    });\n\n    return {\n      wordsData: data,\n      largestWordWidth,\n    };\n  }\n\n  /**\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\n   * It gets called when charBounds are not available yet.\n   * Override if necessary\n   * Use with {@link Textbox#wordSplit}\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {number} lineIndex\n   * @param {number} charOffset\n   * @returns {number}\n   */\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\n    let width = 0,\n      prevGrapheme;\n    const skipLeft = true;\n    for (let i = 0, len = word.length; i < len; i++) {\n      const box = this._getGraphemeBox(\n        word[i],\n        lineIndex,\n        i + charOffset,\n        prevGrapheme,\n        skipLeft,\n      );\n      width += box.kernedWidth;\n      prevGrapheme = word[i];\n    }\n    return width;\n  }\n\n  /**\n   * Override this method to customize word splitting\n   * Use with {@link Textbox#_measureWord}\n   * @param {string} value\n   * @returns {string[]} array of words\n   */\n  wordSplit(value: string): string[] {\n    return value.split(this._wordJoiners);\n  }\n\n  /**\n   * Wraps a line of text using the width of the Textbox as desiredWidth\n   * and leveraging the known width o words from GraphemeData\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} desiredWidth width you want to wrap the line to\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n   * @returns {Array} Array of line(s) into which the given text is wrapped\n   * to.\n   */\n  _wrapLine(\n    lineIndex: number,\n    desiredWidth: number,\n    { largestWordWidth, wordsData }: GraphemeData,\n    reservedSpace = 0,\n  ): string[][] {\n    const additionalSpace = this._getWidthOfCharSpacing(),\n      splitByGrapheme = this.splitByGrapheme,\n      graphemeLines = [],\n      infix = splitByGrapheme ? '' : ' ';\n\n    let lineWidth = 0,\n      line: string[] = [],\n      // spaces in different languages?\n      offset = 0,\n      infixWidth = 0,\n      lineJustStarted = true;\n\n    desiredWidth -= reservedSpace;\n\n    const maxWidth = Math.max(\n      desiredWidth,\n      largestWordWidth,\n      this.dynamicMinWidth,\n    );\n    // layout words\n    const data = wordsData[lineIndex];\n    offset = 0;\n    let i;\n    for (i = 0; i < data.length; i++) {\n      const { word, width: wordWidth } = data[i];\n      offset += word.length;\n\n      lineWidth += infixWidth + wordWidth - additionalSpace;\n      if (lineWidth > maxWidth && !lineJustStarted) {\n        graphemeLines.push(line);\n        line = [];\n        lineWidth = wordWidth;\n        lineJustStarted = true;\n      } else {\n        lineWidth += additionalSpace;\n      }\n\n      if (!lineJustStarted && !splitByGrapheme) {\n        line.push(infix);\n      }\n      line = line.concat(word);\n\n      infixWidth = splitByGrapheme\n        ? 0\n        : this._measureWord([infix], lineIndex, offset);\n      offset++;\n      lineJustStarted = false;\n    }\n\n    i && graphemeLines.push(line);\n\n    // TODO: this code is probably not necessary anymore.\n    // it can be moved out of this function since largestWordWidth is now\n    // known in advance\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n    }\n    return graphemeLines;\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @param {Number} lineIndex text to split\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    if (!this._styleMap[lineIndex + 1]) {\n      // is last line, return true;\n      return true;\n    }\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n      // this is last line before a line break, return true;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * This is important only for splitByGrapheme at the end of wrapping.\n   * If we are not wrapping the offset is always 1\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\n    if (this.splitByGrapheme && !skipWrapping) {\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n    }\n    return 1;\n  }\n\n  /**\n   * Gets lines of text to render in the Textbox. This function calculates\n   * text wrapping on the fly every time it is called.\n   * @param {String} text text to split\n   * @returns {Array} Array of lines in the Textbox.\n   * @override\n   */\n  _splitTextIntoLines(text: string) {\n    const newText = super._splitTextIntoLines(text),\n      graphemeLines = this._wrapText(newText.lines, this.width),\n      lines = new Array(graphemeLines.length);\n    for (let i = 0; i < graphemeLines.length; i++) {\n      lines[i] = graphemeLines[i].join('');\n    }\n    newText.lines = lines;\n    newText.graphemeLines = graphemeLines;\n    return newText;\n  }\n\n  getMinWidth() {\n    return Math.max(this.minWidth, this.dynamicMinWidth);\n  }\n\n  _removeExtraneousStyles() {\n    const linesToKeep = new Map();\n    for (const prop in this._styleMap) {\n      const propNumber = parseInt(prop, 10);\n      if (this._textLines[propNumber]) {\n        const lineIndex = this._styleMap[prop].line;\n        linesToKeep.set(`${lineIndex}`, true);\n      }\n    }\n    for (const prop in this.styles) {\n      if (!linesToKeep.has(prop)) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject<T, K>([\n      'minWidth',\n      'splitByGrapheme',\n      ...propertiesToInclude,\n    ] as K[]) as Pick<T, K> & SProps;\n  }\n}\n\nclassRegistry.setClass(Textbox);\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport { sendPointToPlane } from '../../util/misc/planeChange';\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { getObjectBounds } from './utils';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to match the clip path bounding box.\n */\nexport class ClipPathLayout extends LayoutStrategy {\n  static readonly type = 'clip-path';\n\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\n  }\n\n  shouldLayoutClipPath() {\n    return false;\n  }\n\n  calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[],\n  ): LayoutStrategyResult | undefined {\n    const { target } = context;\n    const { clipPath, group } = target;\n    if (!clipPath || !this.shouldPerformLayout(context)) {\n      return;\n    }\n    // TODO: remove stroke calculation from this case\n    const { width, height } = makeBoundingBoxFromPoints(\n      getObjectBounds(target, clipPath as FabricObject),\n    );\n    const size = new Point(width, height);\n    if (clipPath.absolutePositioned) {\n      //  we want the center point to exist in group's containing plane\n      const clipPathCenter = sendPointToPlane(\n        clipPath.getRelativeCenterPoint(),\n        undefined,\n        group ? group.calcTransformMatrix() : undefined,\n      );\n      return {\n        center: clipPathCenter,\n        size,\n      };\n    } else {\n      //  we want the center point to exist in group's containing plane, so we send it upwards\n      const clipPathCenter = clipPath\n        .getRelativeCenterPoint()\n        .transform(target.calcOwnMatrix(), true);\n      if (this.shouldPerformLayout(context)) {\n        // the clip path is positioned relative to the group's center which is affected by the bbox\n        // so we first calculate the bbox\n        const { center = new Point(), correction = new Point() } =\n          this.calcBoundingBox(objects, context) || {};\n        return {\n          center: center.add(clipPathCenter),\n          correction: correction.subtract(clipPathCenter),\n          size,\n        };\n      } else {\n        return {\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\n          size,\n        };\n      }\n    }\n  }\n}\n\nclassRegistry.setClass(ClipPathLayout);\n","import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>,\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n","import { LayoutManager } from './LayoutManager';\nimport type { RegistrationContext, StrictLayoutContext } from './types';\nimport type { Group } from '../shapes/Group';\n\n/**\n * Today the LayoutManager class also takes care of subscribing event handlers\n * to update the group layout when the group is interactive and a transform is applied\n * to a child object.\n * The ActiveSelection is never interactive, but it could contain objects from\n * groups that are.\n * The standard LayoutManager would subscribe the children of the activeSelection to\n * perform layout changes to the active selection itself, what we need instead is that\n * the transformation applied to the active selection will trigger changes to the\n * original group of the children ( the one referenced under the parent property )\n * This subclass of the LayoutManager has a single duty to fill the gap of this difference.`\n */\nexport class ActiveSelectionLayoutManager extends LayoutManager {\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      parent.layoutManager.subscribeTargets({\n        target: parent,\n        targets: [activeSelection],\n      });\n    });\n  }\n\n  /**\n   * unsubscribe from parent only if all its children were deselected\n   */\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>,\n  ): void {\n    const activeSelection = context.target;\n    const selectedObjects = activeSelection.getObjects();\n    const parents = context.targets.reduce((parents, target) => {\n      target.parent && parents.add(target.parent);\n      return parents;\n    }, new Set<Group>());\n    parents.forEach((parent) => {\n      !selectedObjects.some((object) => object.parent === parent) &&\n        parent.layoutManager.unsubscribeTargets({\n          target: parent,\n          targets: [activeSelection],\n        });\n    });\n  }\n}\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\nimport { classRegistry } from '../ClassRegistry';\nimport type { GroupProps } from './Group';\nimport { Group } from './Group';\nimport type { FabricObject } from './Object/FabricObject';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { TClassProperties } from '../typedefs';\nimport { log } from '../util/internals/console';\nimport { ActiveSelectionLayoutManager } from '../LayoutManager/ActiveSelectionLayoutManager';\n\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\n\nexport interface ActiveSelectionOptions extends GroupProps {\n  multiSelectionStacking: MultiSelectionStacking;\n}\n\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\n  {\n    multiSelectionStacking: 'canvas-stacking',\n  };\n\n/**\n * Used by Canvas to manage selection.\n *\n * @example\n * class MyActiveSelection extends ActiveSelection {\n *   ...\n * }\n *\n * // override the default `ActiveSelection` class\n * classRegistry.setClass(MyActiveSelection)\n */\nexport class ActiveSelection extends Group {\n  static type = 'ActiveSelection';\n\n  static ownDefaults: Record<string, any> = activeSelectionDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\n  }\n\n  /**\n   * The ActiveSelection needs to use the ActiveSelectionLayoutManager\n   * or selections on interactive groups may be broken\n   */\n  declare layoutManager: ActiveSelectionLayoutManager;\n\n  /**\n   * controls how selected objects are added during a multiselection event\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\n   * - `selection-order` adds the selected object to the top of the stack,\n   * meaning that the stack is ordered by the order in which objects were selected\n   * @default `canvas-stacking`\n   */\n  declare multiSelectionStacking: MultiSelectionStacking;\n\n  constructor(\n    objects: FabricObject[] = [],\n    options: Partial<ActiveSelectionOptions> = {},\n  ) {\n    super();\n    Object.assign(this, ActiveSelection.ownDefaults);\n    this.setOptions(options);\n    const { left, top, layoutManager } = options;\n    this.groupInit(objects, {\n      left,\n      top,\n      layoutManager: layoutManager ?? new ActiveSelectionLayoutManager(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return true;\n  }\n\n  /**\n   * @private\n   * @override we don't want the selection monitor to be active\n   */\n  __objectSelectionMonitor() {\n    //  noop\n  }\n\n  /**\n   * Adds objects with respect to {@link multiSelectionStacking}\n   * @param targets object to add to selection\n   */\n  multiSelectAdd(...targets: FabricObject[]) {\n    if (this.multiSelectionStacking === 'selection-order') {\n      this.add(...targets);\n    } else {\n      //  respect object stacking as it is on canvas\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\n      targets.forEach((target) => {\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\n        const insertAt =\n          index === -1\n            ? //  `target` is in front of all other objects\n              this.size()\n            : index;\n        this.insertAt(insertAt, target);\n      });\n    }\n  }\n\n  /**\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\n   */\n  canEnterGroup(object: FabricObject) {\n    if (\n      this.getObjects().some(\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o),\n      )\n    ) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'ActiveSelection: circular object trees are not supported, this call has no effect',\n      );\n      return false;\n    }\n\n    return super.canEnterGroup(object);\n  }\n\n  /**\n   * Change an object so that it can be part of an active selection.\n   * this method is called by multiselectAdd from canvas code.\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    // This condition check that the object has currently a group, and the group\n    // is also its parent, meaning that is not in an active selection, but is\n    // in a normal group.\n    if (object.parent && object.parent === object.group) {\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\n      // for later re-enter\n      object.parent._exitGroup(object);\n      // in this case the object is probably inside an active selection.\n    } else if (object.group && object.parent !== object.group) {\n      // in this case group.remove will also clear the old parent reference.\n      object.group.remove(object);\n    }\n    // enter the active selection from a render perspective\n    // the object will be in the objects array of both the ActiveSelection and the Group\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * we want objects to retain their canvas ref when exiting instance\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    // return to parent\n    object.parent && object.parent._enterGroup(object, true);\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    super._onAfterObjectsChange(type, targets);\n    const groups = new Set<Group>();\n    targets.forEach((object) => {\n      const { parent } = object;\n      parent && groups.add(parent);\n    });\n    if (type === LAYOUT_TYPE_REMOVED) {\n      //  invalidate groups' layout and mark as dirty\n      groups.forEach((group) => {\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\n      });\n    } else {\n      //  mark groups as dirty\n      groups.forEach((group) => {\n        group._set('dirty', true);\n      });\n    }\n  }\n\n  /**\n   * @override remove all objects\n   */\n  onDeselect() {\n    this.removeAll();\n    return false;\n  }\n\n  /**\n   * Returns string representation of a group\n   * @return {String}\n   */\n  toString() {\n    return `#<ActiveSelection: (${this.complexity()})>`;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return false;\n  }\n\n  /**\n   * Check if this group or its parent group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache() {\n    return false;\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [styleOverride] properties to override the object style\n   * @param {Object} [childrenOverride] properties to override the children overrides\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride?: ControlRenderingStyleOverride,\n    childrenOverride?: ControlRenderingStyleOverride,\n  ) {\n    ctx.save();\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    const options = {\n      hasControls: false,\n      ...childrenOverride,\n      forActiveSelection: true,\n    };\n    for (let i = 0; i < this._objects.length; i++) {\n      this._objects[i]._renderControls(ctx, options);\n    }\n    super._renderControls(ctx, styleOverride);\n    ctx.restore();\n  }\n}\n\nclassRegistry.setClass(ActiveSelection);\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\n","/**\n * Canvas 2D filter backend.\n */\nimport type { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\n\nexport class Canvas2dFilterBackend {\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  /**\n   * Apply a set of filters against a source image and draw the filtered output\n   * to the provided destination canvas.\n   *\n   * @param {EnhancedFilter} filters The filter to apply.\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n   * @param {Number} sourceWidth The width of the source input.\n   * @param {Number} sourceHeight The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    sourceElement: CanvasImageSource,\n    sourceWidth: number,\n    sourceHeight: number,\n    targetCanvas: HTMLCanvasElement,\n  ): T2DPipelineState | void {\n    const ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const pipelineState: T2DPipelineState = {\n      sourceWidth,\n      sourceHeight,\n      imageData,\n      originalEl: sourceElement,\n      originalImageData,\n      canvasEl: targetCanvas,\n      ctx,\n      filterBackend: this,\n    };\n    filters.forEach((filter) => {\n      filter.applyTo(pipelineState);\n    });\n    const { imageData: imageDataPostFilter } = pipelineState;\n    if (\n      imageDataPostFilter.width !== sourceWidth ||\n      imageDataPostFilter.height !== sourceHeight\n    ) {\n      targetCanvas.width = imageDataPostFilter.width;\n      targetCanvas.height = imageDataPostFilter.height;\n    }\n    ctx.putImageData(imageDataPostFilter, 0, 0);\n    return pipelineState;\n  }\n}\n","import { config } from '../config';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport type {\n  TWebGLPipelineState,\n  TProgramCache,\n  TTextureCache,\n  TPipelineResources,\n} from './typedefs';\nimport type { BaseFilter } from './BaseFilter';\n\nexport class WebGLFilterBackend {\n  declare tileSize: number;\n\n  /**\n   * Define ...\n   **/\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n\n  /**\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\n   * to transfer the data back in the 2d logic\n   **/\n  declare imageBuffer?: ArrayBuffer;\n\n  declare canvas: HTMLCanvasElement;\n\n  /**\n   * The Webgl context that will execute the operations for filtering\n   **/\n  declare gl: WebGLRenderingContext;\n\n  /**\n   * Keyed map for shader cache\n   **/\n  declare programCache: TProgramCache;\n\n  /**\n   * Keyed map for texture cache\n   **/\n  declare textureCache: TTextureCache;\n\n  /**\n   * Contains GPU info for debug\n   **/\n  declare gpuInfo: any;\n\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  constructor({ tileSize = config.textureSize } = {}) {\n    this.tileSize = tileSize;\n    this.setupGLContext(tileSize, tileSize);\n    this.captureGPUInfo();\n  }\n\n  /**\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n   */\n  setupGLContext(width: number, height: number): void {\n    this.dispose();\n    this.createWebGLCanvas(width, height);\n  }\n\n  /**\n   * Create a canvas element and associated WebGL context and attaches them as\n   * class properties to the GLFilterBackend class.\n   */\n  createWebGLCanvas(width: number, height: number): void {\n    const canvas = createCanvasElementFor({ width, height });\n    const glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false,\n      },\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\n\n    if (!gl) {\n      return;\n    }\n    gl.clearColor(0, 0, 0, 0);\n    // this canvas can fire webglcontextlost and webglcontextrestored\n    this.canvas = canvas;\n    this.gl = gl;\n  }\n\n  /**\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\n   * to the provided target canvas.\n   *\n   * @param {Array} filters The filters to apply.\n   * @param {TexImageSource} source The source to be filtered.\n   * @param {Number} width The width of the source input.\n   * @param {Number} height The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n   * omitted, caching will be skipped.\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[],\n    source: TexImageSource,\n    width: number,\n    height: number,\n    targetCanvas: HTMLCanvasElement,\n    cacheKey?: string,\n  ): TWebGLPipelineState | undefined {\n    const gl = this.gl;\n    const ctx = targetCanvas.getContext('2d');\n    if (!gl || !ctx) {\n      return;\n    }\n    let cachedTexture;\n    if (cacheKey) {\n      cachedTexture = this.getCachedTexture(cacheKey, source);\n    }\n    const pipelineState: TWebGLPipelineState = {\n      originalWidth:\n        (source as HTMLImageElement).width ||\n        // @ts-expect-error is this a bug? should this be naturalWidth? or is this the pipeline state?\n        (source as HTMLImageElement).originalWidth ||\n        0,\n      originalHeight:\n        (source as HTMLImageElement).height ||\n        // @ts-expect-error is this a bug? should this be naturalHeight? or is this the pipeline state?\n        (source as HTMLImageElement).originalHeight ||\n        0,\n      sourceWidth: width,\n      sourceHeight: height,\n      destinationWidth: width,\n      destinationHeight: height,\n      context: gl,\n      sourceTexture: this.createTexture(\n        gl,\n        width,\n        height,\n        !cachedTexture ? source : undefined,\n      ),\n      targetTexture: this.createTexture(gl, width, height),\n      originalTexture:\n        cachedTexture ||\n        this.createTexture(\n          gl,\n          width,\n          height,\n          !cachedTexture ? source : undefined,\n        )!,\n      passes: filters.length,\n      webgl: true,\n      aPosition: this.aPosition,\n      programCache: this.programCache,\n      pass: 0,\n      filterBackend: this,\n      targetCanvas: targetCanvas,\n    };\n    const tempFbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n    filters.forEach((filter: any) => {\n      filter && filter.applyTo(pipelineState);\n    });\n    resizeCanvasIfNeeded(pipelineState);\n    this.copyGLTo2D(gl, pipelineState);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.deleteTexture(pipelineState.sourceTexture);\n    gl.deleteTexture(pipelineState.targetTexture);\n    gl.deleteFramebuffer(tempFbo);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    return pipelineState;\n  }\n\n  /**\n   * Detach event listeners, remove references, and clean up caches.\n   */\n  dispose() {\n    if (this.canvas) {\n      // we are disposing, we don't care about the fact\n      // that the canvas shouldn't be null.\n      // @ts-expect-error disposing\n      this.canvas = null;\n      // @ts-expect-error disposing\n      this.gl = null;\n    }\n    this.clearWebGLCaches();\n  }\n\n  /**\n   * Wipe out WebGL-related caches.\n   */\n  clearWebGLCaches() {\n    this.programCache = {};\n    this.textureCache = {};\n  }\n\n  /**\n   * Create a WebGL texture object.\n   *\n   * Accepts specific dimensions to initialize the texture to or a source image.\n   *\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n   * @param {number} width The width to initialize the texture at.\n   * @param {number} height The height to initialize the texture.\n   * @param {TexImageSource} textureImageSource A source for the texture data.\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\n   * @returns {WebGLTexture}\n   */\n  createTexture(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    textureImageSource?: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ) {\n    const {\n      NEAREST,\n      TEXTURE_2D,\n      RGBA,\n      UNSIGNED_BYTE,\n      CLAMP_TO_EDGE,\n      TEXTURE_MAG_FILTER,\n      TEXTURE_MIN_FILTER,\n      TEXTURE_WRAP_S,\n      TEXTURE_WRAP_T,\n    } = gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n    if (textureImageSource) {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        RGBA,\n        UNSIGNED_BYTE,\n        textureImageSource,\n      );\n    } else {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        width,\n        height,\n        0,\n        RGBA,\n        UNSIGNED_BYTE,\n        null,\n      );\n    }\n    return texture;\n  }\n\n  /**\n   * Can be optionally used to get a texture from the cache array\n   *\n   * If an existing texture is not found, a new texture is created and cached.\n   *\n   * @param {String} uniqueId A cache key to use to find an existing texture.\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n   * texture cache entry if one does not already exist.\n   */\n  getCachedTexture(\n    uniqueId: string,\n    textureImageSource: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR'],\n  ): WebGLTexture | null {\n    const { textureCache } = this;\n    if (textureCache[uniqueId]) {\n      return textureCache[uniqueId];\n    } else {\n      const texture = this.createTexture(\n        this.gl,\n        (textureImageSource as HTMLImageElement).width,\n        (textureImageSource as HTMLImageElement).height,\n        textureImageSource,\n        filter,\n      );\n      if (texture) {\n        textureCache[uniqueId] = texture;\n      }\n      return texture;\n    }\n  }\n\n  /**\n   * Clear out cached resources related to a source image that has been\n   * filtered previously.\n   *\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\n   */\n  evictCachesForKey(cacheKey: string) {\n    if (this.textureCache[cacheKey]) {\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\n      delete this.textureCache[cacheKey];\n    }\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas.\n   *\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\n    const glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.translate(0, targetCanvas.height); // move it down again\n    ctx.scale(1, -1); // vertical flip\n    // where is my image on the big glcanvas?\n    const sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(\n      glCanvas,\n      0,\n      sourceY,\n      targetCanvas.width,\n      targetCanvas.height,\n      0,\n      0,\n      targetCanvas.width,\n      targetCanvas.height,\n    );\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2DPutImageData(\n    this: Required<WebGLFilterBackend>,\n    gl: WebGLRenderingContext,\n    pipelineState: TWebGLPipelineState,\n  ) {\n    const targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n    if (!ctx) {\n      return;\n    }\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Attempt to extract GPU information strings from a WebGL context.\n   *\n   * Useful information when debugging or blacklisting specific GPUs.\n   *\n   * @returns {Object} A GPU info object with renderer and vendor strings.\n   */\n  captureGPUInfo() {\n    if (this.gpuInfo) {\n      return this.gpuInfo;\n    }\n    const gl = this.gl,\n      gpuInfo = { renderer: '', vendor: '' };\n    if (!gl) {\n      return gpuInfo;\n    }\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\n    if (ext) {\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n      if (renderer) {\n        gpuInfo.renderer = renderer.toLowerCase();\n      }\n      if (vendor) {\n        gpuInfo.vendor = vendor.toLowerCase();\n      }\n    }\n    this.gpuInfo = gpuInfo;\n    return gpuInfo;\n  }\n}\n\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\n  const targetCanvas = pipelineState.targetCanvas,\n    width = targetCanvas.width,\n    height = targetCanvas.height,\n    dWidth = pipelineState.destinationWidth,\n    dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n","import { config } from '../config';\nimport { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\n\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\n\nlet filterBackend: FilterBackend;\n\n/**\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\n */\nexport function initFilterBackend(): FilterBackend {\n  const { WebGLProbe } = getEnv();\n  WebGLProbe.queryWebGL(createCanvasElement());\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\n  } else {\n    return new Canvas2dFilterBackend();\n  }\n}\n\n/**\n * Get the current fabricJS filter backend  or initialize one if not available yet\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\n * pass `false` to get the backend ref without mutating it\n */\nexport function getFilterBackend(strict = true): FilterBackend {\n  if (!filterBackend && strict) {\n    filterBackend = initFilterBackend();\n  }\n  return filterBackend;\n}\n\nexport function setFilterBackend(backend: FilterBackend) {\n  filterBackend = backend;\n}\n","import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElementFor } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { FILL, NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter<string, Record<string, any>>[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents,\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter<string, Record<string, any>>[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options?: Props) {\n    super();\n    this.filters = [];\n    Object.assign(this, FabricImage.ownDefaults);\n    this.setOptions(options);\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options,\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never,\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n',\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`,\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== FILL) {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElementFor(elementToFilter),\n      { width, height } = elementToFilter;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter],\n      elementToFilter,\n      width,\n      height,\n      this._element,\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(\n    filters: BaseFilter<string, Record<string, any>>[] = this.filters || [],\n  ) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement,\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D,\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || '',\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options?: Abortable,\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter<string>>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter<'Resize'>>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T,\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions),\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules,\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules,\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'],\n      options,\n      parsedAttributes,\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n","import { svgNS } from './constants';\nimport {\n  parsePreserveAspectRatioAttribute,\n  parseUnit,\n} from '../util/misc/svgParsing';\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\nimport { NONE } from '../constants';\n\nexport type ParsedViewboxTransform = Partial<{\n  width: number;\n  height: number;\n  minX: number;\n  minY: number;\n  viewBoxWidth: number;\n  viewBoxHeight: number;\n}>;\n\n/**\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n */\nexport function applyViewboxTransform(\n  element: Element,\n): ParsedViewboxTransform {\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\n    return {};\n  }\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\n  let scaleX = 1;\n  let scaleY = 1;\n  let minX = 0;\n  let minY = 0;\n  let matrix;\n  let el;\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const x = element.getAttribute('x') || 0;\n  const y = element.getAttribute('y') || 0;\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\n  const missingViewBox = !goodViewbox;\n  const missingDimAttr =\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\n\n  let translateMatrix = '';\n  let widthDiff = 0;\n  let heightDiff = 0;\n\n  if (missingViewBox) {\n    if (\n      (x || y) &&\n      element.parentNode &&\n      element.parentNode.nodeName !== '#document'\n    ) {\n      translateMatrix =\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\n      element.setAttribute('transform', matrix);\n      element.removeAttribute('x');\n      element.removeAttribute('y');\n    }\n  }\n\n  if (missingViewBox && missingDimAttr) {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const parsedDim: ParsedViewboxTransform = {\n    width: 0,\n    height: 0,\n  };\n\n  if (missingViewBox) {\n    parsedDim.width = parseUnit(widthAttr!);\n    parsedDim.height = parseUnit(heightAttr!);\n    // set a transform for elements that have x y and are inner(only) SVGs\n    return parsedDim;\n  }\n\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\n  minX = -parseFloat(pasedViewBox[1]);\n  minY = -parseFloat(pasedViewBox[2]);\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\n  parsedDim.minX = minX;\n  parsedDim.minY = minY;\n  parsedDim.viewBoxWidth = viewBoxWidth;\n  parsedDim.viewBoxHeight = viewBoxHeight;\n  if (!missingDimAttr) {\n    parsedDim.width = parseUnit(widthAttr);\n    parsedDim.height = parseUnit(heightAttr);\n    scaleX = parsedDim.width / viewBoxWidth;\n    scaleY = parsedDim.height / viewBoxHeight;\n  } else {\n    parsedDim.width = viewBoxWidth;\n    parsedDim.height = viewBoxHeight;\n  }\n\n  // default is to preserve aspect ratio\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\n    element.getAttribute('preserveAspectRatio') || '',\n  );\n  if (preserveAspectRatio.alignX !== NONE) {\n    //translate all container for the effect of Mid, Min, Max\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n      // calculate additional translation to move the viewbox\n    }\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\n      // calculate additional translation to move the viewbox\n    }\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n    if (preserveAspectRatio.alignX === 'Mid') {\n      widthDiff /= 2;\n    }\n    if (preserveAspectRatio.alignY === 'Mid') {\n      heightDiff /= 2;\n    }\n    if (preserveAspectRatio.alignX === 'Min') {\n      widthDiff = 0;\n    }\n    if (preserveAspectRatio.alignY === 'Min') {\n      heightDiff = 0;\n    }\n  }\n\n  if (\n    scaleX === 1 &&\n    scaleY === 1 &&\n    minX === 0 &&\n    minY === 0 &&\n    x === 0 &&\n    y === 0\n  ) {\n    return parsedDim;\n  }\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\n    translateMatrix =\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n  }\n\n  matrix =\n    translateMatrix +\n    ' matrix(' +\n    scaleX +\n    ' 0' +\n    ' 0 ' +\n    scaleY +\n    ' ' +\n    (minX * scaleX + widthDiff) +\n    ' ' +\n    (minY * scaleY + heightDiff) +\n    ') ';\n  // seems unused.\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\n  if (element.nodeName === 'svg') {\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\n    // element.firstChild != null\n    while (element.firstChild) {\n      el.appendChild(element.firstChild);\n    }\n    element.appendChild(el);\n  } else {\n    el = element;\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    matrix = el.getAttribute('transform') + matrix;\n  }\n  el.setAttribute('transform', matrix);\n  return parsedDim;\n}\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\n","import { svgInvalidAncestors } from './constants';\nimport { getSvgRegex } from './getSvgRegex';\nimport { getTagName } from './getTagName';\n\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n\nexport function hasInvalidAncestor(element: Element) {\n  let _element: Element | null = element;\n  while (_element && (_element = _element.parentElement)) {\n    if (\n      _element &&\n      _element.nodeName &&\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\n      !_element.getAttribute('instantiated_by_use')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","export function getMultipleNodes(\n  doc: Document,\n  nodeNames: string[],\n): Element[] {\n  let nodeName,\n    nodeArray: Element[] = [],\n    nodeList,\n    i,\n    len;\n  for (i = 0, len = nodeNames.length; i < len; i++) {\n    nodeName = nodeNames[i];\n    nodeList = doc.getElementsByTagNameNS(\n      'http://www.w3.org/2000/svg',\n      nodeName,\n    );\n    nodeArray = nodeArray.concat(Array.from(nodeList));\n  }\n  return nodeArray;\n}\n","import { svgNS } from './constants';\nimport { getMultipleNodes } from './getMultipleNodes';\nimport { applyViewboxTransform } from './applyViewboxTransform';\nimport { parseStyleString } from './parseStyleString';\n\nexport function parseUseDirectives(doc: Document) {\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\n  const skipAttributes = ['x', 'y', 'xlink:href', 'href', 'transform'];\n\n  for (const useElement of nodelist) {\n    const useAttributes: NamedNodeMap = useElement.attributes;\n\n    const useAttrMap: Record<string, string> = {};\n    for (const attr of useAttributes) {\n      attr.value && (useAttrMap[attr.name] = attr.value);\n    }\n\n    const xlink = (useAttrMap['xlink:href'] || useAttrMap.href || '').slice(1);\n\n    if (xlink === '') {\n      return;\n    }\n    const referencedElement = doc.getElementById(xlink);\n    if (referencedElement === null) {\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\n      return;\n    }\n    let clonedOriginal = referencedElement.cloneNode(true) as Element;\n\n    const originalAttributes: NamedNodeMap = clonedOriginal.attributes;\n\n    const originalAttrMap: Record<string, string> = {};\n    for (const attr of originalAttributes) {\n      attr.value && (originalAttrMap[attr.name] = attr.value);\n    }\n\n    // Transform attribute needs to be merged in a particular way\n    const { x = 0, y = 0, transform = '' } = useAttrMap;\n    const currentTrans = `${transform} ${\n      originalAttrMap.transform || ''\n    } translate(${x}, ${y})`;\n\n    applyViewboxTransform(clonedOriginal);\n\n    if (/^svg$/i.test(clonedOriginal.nodeName)) {\n      // if is an SVG, create a group and apply all the attributes on top of it\n      const el3 = clonedOriginal.ownerDocument.createElementNS(svgNS, 'g');\n      Object.entries(originalAttrMap).forEach(([name, value]) =>\n        el3.setAttributeNS(svgNS, name, value),\n      );\n      el3.append(...clonedOriginal.childNodes);\n      clonedOriginal = el3;\n    }\n\n    for (const attr of useAttributes) {\n      if (!attr) {\n        continue;\n      }\n      const { name, value } = attr;\n      if (skipAttributes.includes(name)) {\n        continue;\n      }\n\n      if (name === 'style') {\n        // when use has a style, merge the two styles, with the ref being priority (not use)\n        // priority is by feature. an attribute for fill on the original element\n        // will overwrite the fill in style or attribute for tha use\n        const styleRecord: Record<string, any> = {};\n        parseStyleString(value!, styleRecord);\n        // cleanup styleRecord from attributes of original\n        Object.entries(originalAttrMap).forEach(([name, value]) => {\n          styleRecord[name] = value;\n        });\n        // now we can put in the style of the original that will overwrite the original attributes\n        parseStyleString(originalAttrMap.style || '', styleRecord);\n        const mergedStyles = Object.entries(styleRecord)\n          .map((entry) => entry.join(':'))\n          .join(';');\n        clonedOriginal.setAttribute(name, mergedStyles);\n      } else {\n        // set the attribute from use element only if the original does not have it already\n        !originalAttrMap[name] && clonedOriginal.setAttribute(name, value!);\n      }\n    }\n\n    clonedOriginal.setAttribute('transform', currentTrans);\n    clonedOriginal.setAttribute('instantiated_by_use', '1');\n    clonedOriginal.removeAttribute('id');\n    useElement.parentNode!.replaceChild(clonedOriginal, useElement);\n  }\n}\n","const gradientsAttrs = [\n  'gradientTransform',\n  'x1',\n  'x2',\n  'y1',\n  'y2',\n  'gradientUnits',\n  'cx',\n  'cy',\n  'r',\n  'fx',\n  'fy',\n];\nconst xlinkAttr = 'xlink:href';\n\nexport function recursivelyParseGradientsXlink(\n  doc: Document,\n  gradient: Element,\n) {\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\n    referencedGradient = doc.getElementById(xLink);\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\n  }\n  if (referencedGradient) {\n    gradientsAttrs.forEach((attr) => {\n      const value = referencedGradient.getAttribute(attr);\n      if (!gradient.hasAttribute(attr) && value) {\n        gradient.setAttribute(attr, value);\n      }\n    });\n    if (!gradient.children.length) {\n      const referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n  }\n  gradient.removeAttribute(xlinkAttr);\n}\n","import { getMultipleNodes } from './getMultipleNodes';\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\n\nconst tagArray = [\n  'linearGradient',\n  'radialGradient',\n  'svg:linearGradient',\n  'svg:radialGradient',\n];\n\n/**\n * Parses an SVG document, returning all of the gradient declarations found in it\n * @param {SVGDocument} doc SVG document to parse\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n */\nexport function getGradientDefs(\n  doc: Document,\n): Record<string, SVGGradientElement> {\n  const elList = getMultipleNodes(doc, tagArray);\n  const gradientDefs: Record<string, SVGGradientElement> = {};\n  let j = elList.length;\n  while (j--) {\n    const el = elList[j];\n    if (el.getAttribute('xlink:href')) {\n      recursivelyParseGradientsXlink(doc, el);\n    }\n    const id = el.getAttribute('id');\n    if (id) {\n      gradientDefs[id] = el as SVGGradientElement;\n    }\n  }\n  return gradientDefs;\n}\n","import type { CSSRules } from './typedefs';\n\n/**\n * Returns CSS rules for a given SVG document\n * @param {HTMLElement} doc SVG document to parse\n * @return {Object} CSS rules of this document\n */\nexport function getCSSRules(doc: Document) {\n  const styles = doc.getElementsByTagName('style');\n  let i;\n  let len;\n  const allRules: CSSRules = {};\n\n  // very crude parsing of style contents\n  for (i = 0, len = styles.length; i < len; i++) {\n    const styleContents = (styles[i].textContent || '').replace(\n      // remove comments\n      /\\/\\*[\\s\\S]*?\\*\\//g,\n      '',\n    );\n\n    if (styleContents.trim() === '') {\n      continue;\n    }\n    // recovers all the rule in this form `body { style code... }`\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n    styleContents\n      .split('}')\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\n      // at this point we have hopefully an array of rules `body { style code... `\n      .forEach((rule) => {\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\n        // can not handle it.\n        if (\n          (rule.match(/{/g) || []).length > 1 &&\n          rule.trim().startsWith('@')\n        ) {\n          return;\n        }\n\n        const match = rule.split('{'),\n          ruleObj: Record<string, string> = {},\n          declaration = match[1].trim(),\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\n            return pair.trim();\n          });\n\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n          const pair = propertyValuePairs[i].split(':'),\n            property = pair[0].trim(),\n            value = pair[1].trim();\n          ruleObj[property] = value;\n        }\n        rule = match[0].trim();\n        rule.split(',').forEach((_rule) => {\n          _rule = _rule.replace(/^svg/i, '').trim();\n          if (_rule === '') {\n            return;\n          }\n          allRules[_rule] = {\n            ...(allRules[_rule] || {}),\n            ...ruleObj,\n          };\n        });\n      });\n  }\n  return allRules;\n}\n","import { Gradient } from '../gradient/Gradient';\nimport { Group } from '../shapes/Group';\nimport { FabricImage } from '../shapes/Image';\nimport { classRegistry } from '../ClassRegistry';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../util/misc/matrix';\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { Point } from '../Point';\nimport { CENTER, FILL, STROKE } from '../constants';\nimport { getGradientDefs } from './getGradientDefs';\nimport { getCSSRules } from './getCSSRules';\nimport type { LoadImageOptions } from '../util';\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\nimport type { SVGOptions } from '../gradient';\nimport { getTagName } from './getTagName';\nimport { parseTransformAttribute } from './parseTransformAttribute';\n\nconst findTag = (el: Element) =>\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\n\ntype StorageType = {\n  fill: SVGGradientElement;\n  stroke: SVGGradientElement;\n  clipPath: Element[];\n};\n\ntype NotParsedFabricObject = FabricObject & {\n  fill: string;\n  stroke: string;\n  clipPath?: string;\n  clipRule?: CanvasFillRule;\n};\n\nexport class ElementsParser {\n  declare elements: Element[];\n  declare options: LoadImageOptions & ParsedViewboxTransform;\n  declare reviver?: TSvgReviverCallback;\n  declare regexUrl: RegExp;\n  declare doc: Document;\n  declare clipPaths: Record<string, Element[]>;\n  declare gradientDefs: Record<string, SVGGradientElement>;\n  declare cssRules: CSSRules;\n\n  constructor(\n    elements: Element[],\n    options: LoadImageOptions & ParsedViewboxTransform,\n    reviver: TSvgReviverCallback | undefined,\n    doc: Document,\n    clipPaths: Record<string, Element[]>,\n  ) {\n    this.elements = elements;\n    this.options = options;\n    this.reviver = reviver;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n    this.doc = doc;\n    this.clipPaths = clipPaths;\n    this.gradientDefs = getGradientDefs(doc);\n    this.cssRules = getCSSRules(doc);\n  }\n\n  parse(): Promise<Array<FabricObject | null>> {\n    return Promise.all(\n      this.elements.map((element) => this.createObject(element)),\n    );\n  }\n\n  async createObject(el: Element): Promise<FabricObject | null> {\n    const klass = findTag(el);\n    if (klass) {\n      const obj: NotParsedFabricObject = await klass.fromElement(\n        el,\n        this.options,\n        this.cssRules,\n      );\n      this.resolveGradient(obj, el, FILL);\n      this.resolveGradient(obj, el, STROKE);\n      if (obj instanceof FabricImage && obj._originalElement) {\n        removeTransformMatrixForSvgParsing(\n          obj,\n          obj.parsePreserveAspectRatioAttribute(),\n        );\n      } else {\n        removeTransformMatrixForSvgParsing(obj);\n      }\n      await this.resolveClipPath(obj, el);\n      this.reviver && this.reviver(el, obj);\n      return obj;\n    }\n    return null;\n  }\n\n  extractPropertyDefinition(\n    obj: NotParsedFabricObject,\n    property: 'fill' | 'stroke' | 'clipPath',\n    storage: Record<string, StorageType[typeof property]>,\n  ): StorageType[typeof property] | undefined {\n    const value = obj[property]!,\n      regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return undefined;\n    }\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\n    regex.lastIndex = 0;\n    // we passed the regex test, so we know is not null;\n    const id = regex.exec(value)![1];\n    regex.lastIndex = 0;\n    // @todo fix this\n    return storage[id];\n  }\n\n  resolveGradient(\n    obj: NotParsedFabricObject,\n    el: Element,\n    property: 'fill' | 'stroke',\n  ) {\n    const gradientDef = this.extractPropertyDefinition(\n      obj,\n      property,\n      this.gradientDefs,\n    ) as SVGGradientElement;\n    if (gradientDef) {\n      const opacityAttr = el.getAttribute(property + '-opacity');\n      const gradient = Gradient.fromElement(gradientDef, obj, {\n        ...this.options,\n        opacity: opacityAttr,\n      } as SVGOptions);\n      obj.set(property, gradient);\n    }\n  }\n\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\n  // is a refactor that i m not sure is worth on this code\n  async resolveClipPath(\n    obj: NotParsedFabricObject,\n    usingElement: Element,\n    exactOwner?: Element,\n  ) {\n    const clipPathElements = this.extractPropertyDefinition(\n      obj,\n      'clipPath',\n      this.clipPaths,\n    ) as Element[];\n    if (clipPathElements) {\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\n      const clipPathTag = clipPathElements[0].parentElement!;\n      let clipPathOwner = usingElement;\n      while (\n        !exactOwner &&\n        clipPathOwner.parentElement &&\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\n      ) {\n        clipPathOwner = clipPathOwner.parentElement;\n      }\n      // move the clipPath tag as sibling to the real element that is using it\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\n\n      // this multiplication order could be opposite.\n      // but i don't have an svg to test it\n      // at the first SVG that has a transform on both places and is misplaced\n      // try to invert this multiplication order\n      const finalTransform = parseTransformAttribute(\n        `${clipPathOwner.getAttribute('transform') || ''} ${\n          clipPathTag.getAttribute('originalTransform') || ''\n        }`,\n      );\n\n      clipPathTag.setAttribute(\n        'transform',\n        `matrix(${finalTransform.join(',')})`,\n      );\n\n      const container = await Promise.all(\n        clipPathElements.map((clipPathElement) => {\n          return findTag(clipPathElement)\n            .fromElement(clipPathElement, this.options, this.cssRules)\n            .then((enlivedClippath: NotParsedFabricObject) => {\n              removeTransformMatrixForSvgParsing(enlivedClippath);\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\n              delete enlivedClippath.clipRule;\n              return enlivedClippath;\n            });\n        }),\n      );\n      const clipPath =\n        container.length === 1 ? container[0] : new Group(container);\n      const gTransform = multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix(),\n      );\n      if (clipPath.clipPath) {\n        await this.resolveClipPath(\n          clipPath,\n          clipPathOwner,\n          // this is tricky.\n          // it tries to differentiate from when clipPaths are inherited by outside groups\n          // or when are really clipPaths referencing other clipPaths\n          clipPathTag.getAttribute('clip-path') ? clipPathOwner : undefined,\n        );\n      }\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\n        qrDecompose(gTransform);\n      clipPath.set({\n        flipX: false,\n        flipY: false,\n      });\n      clipPath.set({\n        scaleX,\n        scaleY,\n        angle,\n        skewX,\n        skewY: 0,\n      });\n      clipPath.setPositionByOrigin(\n        new Point(translateX, translateY),\n        CENTER,\n        CENTER,\n      );\n      obj.clipPath = clipPath;\n    } else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n      return;\n    }\n  }\n}\n","import { applyViewboxTransform } from './applyViewboxTransform';\nimport { svgValidTagNamesRegEx } from './constants';\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\nimport { parseUseDirectives } from './parseUseDirectives';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { ElementsParser } from './elements_parser';\nimport { log, SignalAbortedError } from '../util/internals/console';\nimport { getTagName } from './getTagName';\n\nconst isValidSvgTag = (el: Element) =>\n  svgValidTagNamesRegEx.test(getTagName(el));\n\nexport const createEmptyResponse = (): SVGParsingOutput => ({\n  objects: [],\n  elements: [],\n  options: {},\n  allElements: [],\n});\n\n/**\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n * @static\n * @function\n * @memberOf fabric\n * @param {HTMLElement} doc SVG document to parse\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @return {SVGParsingOutput}\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n */\nexport async function parseSVGDocument(\n  doc: Document,\n  reviver?: TSvgReviverCallback,\n  { crossOrigin, signal }: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  if (signal && signal.aborted) {\n    log('log', new SignalAbortedError('parseSVGDocument'));\n    // this is an unhappy path, we dont care about speed\n    return createEmptyResponse();\n  }\n  const documentElement = doc.documentElement;\n  parseUseDirectives(doc);\n\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\n    options = {\n      ...applyViewboxTransform(documentElement),\n      crossOrigin,\n      signal,\n    };\n  const elements = descendants.filter((el) => {\n    applyViewboxTransform(el);\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n  });\n  if (!elements || (elements && !elements.length)) {\n    return {\n      ...createEmptyResponse(),\n      options,\n      allElements: descendants,\n    };\n  }\n  const localClipPaths: Record<string, Element[]> = {};\n  descendants\n    .filter((el) => getTagName(el) === 'clipPath')\n    .forEach((el) => {\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\n      const id = el.getAttribute('id')!;\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\n        (el) => isValidSvgTag(el),\n      );\n    });\n\n  // Precedence of rules:   style > class > attribute\n  const elementParser = new ElementsParser(\n    elements,\n    options,\n    reviver,\n    doc,\n    localClipPaths,\n  );\n\n  const instances = await elementParser.parse();\n\n  return {\n    objects: instances,\n    elements,\n    options,\n    allElements: descendants,\n  };\n}\n","import { getFabricWindow } from '../env';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { parseSVGDocument } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\n\n/**\n * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n * @memberOf fabric\n * @param {String} string representing the svg\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromString(\n  string: string,\n  reviver?: TSvgReviverCallback,\n  options?: LoadImageOptions,\n): Promise<SVGParsingOutput> {\n  const parser = new (getFabricWindow().DOMParser)(),\n    // should we use `image/svg+xml` here?\n    doc = parser.parseFromString(string.trim(), 'text/xml');\n  return parseSVGDocument(doc, reviver, options);\n}\n","import { request } from '../util/internals/dom_request';\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\n\n/**\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n * @memberOf fabric\n * @param {string} url where the SVG is\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromURL(\n  url: string,\n  reviver?: TSvgReviverCallback,\n  options: LoadImageOptions = {},\n): Promise<SVGParsingOutput> {\n  // need to handle error properly\n  return new Promise<Document>((resolve, reject) => {\n    const onComplete = (r: XMLHttpRequest) => {\n      const xml = r.responseXML;\n      if (xml) {\n        resolve(xml);\n      }\n      reject();\n    };\n\n    request(url.replace(/^\\n\\s*/, '').trim(), {\n      onComplete,\n      signal: options.signal,\n    });\n  })\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\n    .catch(() => {\n      // this is an unhappy path, we dont care about speed\n      return createEmptyResponse();\n    });\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Polyline } from '../shapes/Polyline';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { MODIFY_POLY } from '../constants';\n\nconst ACTION_NAME: TModificationEvents = MODIFY_POLY;\n\ntype TTransformAnchor = Transform & { pointIndex: number };\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nexport const createPolyPositionHandler = (pointIndex: number) => {\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\n    const { points, pathOffset } = polyObject;\n    return new Point(points[pointIndex])\n      .subtract(pathOffset)\n      .transform(\n        multiplyTransformMatrices(\n          polyObject.getViewportTransform(),\n          polyObject.calcTransformMatrix(),\n        ),\n      );\n  };\n};\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nexport const polyActionHandler = (\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) => {\n  const { target, pointIndex } = transform;\n  const poly = target as Polyline;\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    poly.calcOwnMatrix(),\n  );\n\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\n  poly.setDimensions();\n\n  return true;\n};\n\n/**\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\n */\nexport const factoryPolyActionHandler = (\n  pointIndex: number,\n  fn: TransformActionHandler<TTransformAnchor>,\n) => {\n  return function (\n    eventData: TPointerEvent,\n    transform: Transform,\n    x: number,\n    y: number,\n  ) {\n    const poly = transform.target as Polyline,\n      anchorPoint = new Point(\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1],\n      ),\n      anchorPointInParentPlane = anchorPoint\n        .subtract(poly.pathOffset)\n        .transform(poly.calcOwnMatrix()),\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\n\n    const newAnchorPointInParentPlane = anchorPoint\n      .subtract(poly.pathOffset)\n      .transform(poly.calcOwnMatrix());\n\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n    poly.left -= diff.x;\n    poly.top -= diff.y;\n\n    return actionPerformed;\n  };\n};\n\nexport const createPolyActionHandler = (pointIndex: number) =>\n  wrapWithFireEvent(\n    ACTION_NAME,\n    factoryPolyActionHandler(pointIndex, polyActionHandler),\n  );\n\nexport function createPolyControls(\n  poly: Polyline,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  numOfControls: number,\n  options?: Partial<Control>,\n): Record<string, Control>;\nexport function createPolyControls(\n  arg0: number | Polyline,\n  options: Partial<Control> = {},\n) {\n  const controls = {} as Record<string, Control>;\n  for (\n    let idx = 0;\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\n    idx++\n  ) {\n    controls[`p${idx}`] = new Control({\n      actionName: ACTION_NAME,\n      positionHandler: createPolyPositionHandler(idx),\n      actionHandler: createPolyActionHandler(idx),\n      ...options,\n    });\n  }\n  return controls;\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Path } from '../shapes/Path';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport type { TSimpleParseCommandType } from '../util/path/typedefs';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\nconst ACTION_NAME: TModificationEvents = 'modifyPath' as const;\n\ntype TTransformAnchor = Transform;\n\nexport type PathPointControlStyle = {\n  controlFill?: string;\n  controlStroke?: string;\n  connectionDashArray?: number[];\n};\n\nconst calcPathPointPosition = (\n  pathObject: Path,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n  const command = path[commandIndex];\n  return new Point(\n    (command[pointIndex] as number) - pathOffset.x,\n    (command[pointIndex + 1] as number) - pathOffset.y,\n  ).transform(\n    multiplyTransformMatrices(\n      pathObject.getViewportTransform(),\n      pathObject.calcTransformMatrix(),\n    ),\n  );\n};\n\nconst movePathPoint = (\n  pathObject: Path,\n  x: number,\n  y: number,\n  commandIndex: number,\n  pointIndex: number,\n) => {\n  const { path, pathOffset } = pathObject;\n\n  const anchorCommand =\n    path[(commandIndex > 0 ? commandIndex : path.length) - 1];\n  const anchorPoint = new Point(\n    anchorCommand[pointIndex] as number,\n    anchorCommand[pointIndex + 1] as number,\n  );\n\n  const anchorPointInParentPlane = anchorPoint\n    .subtract(pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    pathObject.calcOwnMatrix(),\n  );\n\n  path[commandIndex][pointIndex] = mouseLocalPosition.x + pathOffset.x;\n  path[commandIndex][pointIndex + 1] = mouseLocalPosition.y + pathOffset.y;\n  pathObject.setDimensions();\n\n  const newAnchorPointInParentPlane = anchorPoint\n    .subtract(pathObject.pathOffset)\n    .transform(pathObject.calcOwnMatrix());\n\n  const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n  pathObject.left -= diff.x;\n  pathObject.top -= diff.y;\n  pathObject.set('dirty', true);\n  return true;\n};\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nfunction pathPositionHandler(\n  this: PathPointControl,\n  dim: Point,\n  finalMatrix: TMat2D,\n  pathObject: Path,\n) {\n  const { commandIndex, pointIndex } = this;\n  return calcPathPointPosition(pathObject, commandIndex, pointIndex);\n}\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nfunction pathActionHandler(\n  this: PathPointControl,\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number,\n) {\n  const { target } = transform;\n  const { commandIndex, pointIndex } = this;\n  const actionPerformed = movePathPoint(\n    target as Path,\n    x,\n    y,\n    commandIndex,\n    pointIndex,\n  );\n  if (actionPerformed) {\n    fireEvent(this.actionName as TModificationEvents, {\n      ...commonEventInfo(eventData, transform, x, y),\n      commandIndex,\n      pointIndex,\n    });\n  }\n  return actionPerformed;\n}\n\nconst indexFromPrevCommand = (previousCommandType: TSimpleParseCommandType) =>\n  previousCommandType === 'C' ? 5 : previousCommandType === 'Q' ? 3 : 1;\n\nclass PathPointControl extends Control {\n  declare commandIndex: number;\n  declare pointIndex: number;\n  declare controlFill: string;\n  declare controlStroke: string;\n  constructor(options?: Partial<PathPointControl>) {\n    super(options);\n  }\n\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const overrides: ControlRenderingStyleOverride = {\n      ...styleOverride,\n      cornerColor: this.controlFill,\n      cornerStrokeColor: this.controlStroke,\n      transparentCorners: !this.controlFill,\n    };\n    super.render(ctx, left, top, overrides, fabricObject);\n  }\n}\n\nclass PathControlPointControl extends PathPointControl {\n  declare connectionDashArray?: number[];\n  declare connectToCommandIndex: number;\n  declare connectToPointIndex: number;\n  constructor(options?: Partial<PathControlPointControl>) {\n    super(options);\n  }\n\n  render(\n    this: PathControlPointControl,\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: Path,\n  ) {\n    const { path } = fabricObject;\n    const {\n      commandIndex,\n      pointIndex,\n      connectToCommandIndex,\n      connectToPointIndex,\n    } = this;\n    ctx.save();\n    ctx.strokeStyle = this.controlStroke;\n    if (this.connectionDashArray) {\n      ctx.setLineDash(this.connectionDashArray);\n    }\n    const [commandType] = path[commandIndex];\n    const point = calcPathPointPosition(\n      fabricObject,\n      connectToCommandIndex,\n      connectToPointIndex,\n    );\n\n    if (commandType === 'Q') {\n      // one control point connects to 2 points\n      const point2 = calcPathPointPosition(\n        fabricObject,\n        commandIndex,\n        pointIndex + 2,\n      );\n      ctx.moveTo(point2.x, point2.y);\n      ctx.lineTo(left, top);\n    } else {\n      ctx.moveTo(left, top);\n    }\n    ctx.lineTo(point.x, point.y);\n    ctx.stroke();\n    ctx.restore();\n\n    super.render(ctx, left, top, styleOverride, fabricObject);\n  }\n}\n\nconst createControl = (\n  commandIndexPos: number,\n  pointIndexPos: number,\n  isControlPoint: boolean,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  },\n  connectToCommandIndex?: number,\n  connectToPointIndex?: number,\n) =>\n  new (isControlPoint ? PathControlPointControl : PathPointControl)({\n    commandIndex: commandIndexPos,\n    pointIndex: pointIndexPos,\n    actionName: ACTION_NAME,\n    positionHandler: pathPositionHandler,\n    actionHandler: pathActionHandler,\n    connectToCommandIndex,\n    connectToPointIndex,\n    ...options,\n    ...(isControlPoint ? options.controlPointStyle : options.pointStyle),\n  } as Partial<PathControlPointControl>);\n\nexport function createPathControls(\n  path: Path,\n  options: Partial<Control> & {\n    controlPointStyle?: PathPointControlStyle;\n    pointStyle?: PathPointControlStyle;\n  } = {},\n): Record<string, Control> {\n  const controls = {} as Record<string, Control>;\n  let previousCommandType: TSimpleParseCommandType = 'M';\n  path.path.forEach((command, commandIndex) => {\n    const commandType = command[0];\n\n    if (commandType !== 'Z') {\n      controls[`c_${commandIndex}_${commandType}`] = createControl(\n        commandIndex,\n        command.length - 2,\n        false,\n        options,\n      );\n    }\n    switch (commandType) {\n      case 'C':\n        controls[`c_${commandIndex}_C_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex - 1,\n          indexFromPrevCommand(previousCommandType),\n        );\n        controls[`c_${commandIndex}_C_CP_2`] = createControl(\n          commandIndex,\n          3,\n          true,\n          options,\n          commandIndex,\n          5,\n        );\n        break;\n      case 'Q':\n        controls[`c_${commandIndex}_Q_CP_1`] = createControl(\n          commandIndex,\n          1,\n          true,\n          options,\n          commandIndex,\n          3,\n        );\n        break;\n    }\n    previousCommandType = commandType;\n  });\n  return controls;\n}\n","import { getFabricWindow } from '../env';\nimport { createCanvasElement, createCanvasElementFor } from '../util/misc/dom';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\n\nexport const isWebGLPipelineState = (\n  options: TWebGLPipelineState | T2DPipelineState,\n): options is TWebGLPipelineState => {\n  return (options as TWebGLPipelineState).webgl !== undefined;\n};\n\n/**\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n * drawImage should be faster, but is also bugged for a small combination of old hardware\n * and drivers.\n * putImageData is faster than drawImage for that specific operation.\n */\nexport const isPutImageFaster = (width: number, height: number): boolean => {\n  const targetCanvas = createCanvasElementFor({ width, height });\n  const sourceCanvas = createCanvasElement();\n  const gl = sourceCanvas.getContext('webgl')!;\n  // eslint-disable-next-line no-undef\n  const imageBuffer = new ArrayBuffer(width * height * 4);\n\n  const testContext = {\n    imageBuffer: imageBuffer,\n  } as unknown as Required<WebGLFilterBackend>;\n  const testPipelineState = {\n    destinationWidth: width,\n    destinationHeight: height,\n    targetCanvas: targetCanvas,\n  } as unknown as TWebGLPipelineState;\n  let startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\n    testContext,\n    gl,\n    testPipelineState,\n  );\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\n\n  return drawImageTime > putImageDataTime;\n};\n","export const highPsourceCode = `precision highp float`;\n\nexport const identityFragmentShader = `\n    ${highPsourceCode};\n    varying vec2 vTexCoord;\n    uniform sampler2D uTexture;\n    void main() {\n      gl_FragColor = texture2D(uTexture, vTexCoord);\n    }`;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    void main() {\n      vTexCoord = aPosition;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }`;\n","import { getEnv } from '../env';\nimport type {\n  T2DPipelineState,\n  TWebGLAttributeLocationMap,\n  TWebGLPipelineState,\n  TWebGLProgramCacheItem,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport {\n  highPsourceCode,\n  identityFragmentShader,\n  vertexSource,\n} from './shaders/baseFilter';\nimport type { Abortable } from '../typedefs';\nimport { FabricError } from '../util/internals/console';\nimport { createCanvasElementFor } from '../util/misc/dom';\n\nconst regex = new RegExp(highPsourceCode, 'g');\n\nexport class BaseFilter<\n  Name extends string,\n  OwnProps extends Record<string, any> = object,\n> {\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  get type(): Name {\n    return (this.constructor as typeof BaseFilter).type as Name;\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'BaseFilter';\n\n  /**\n   * Contains the uniform locations for the fragment shader.\n   * uStepW and uStepH are handled by the BaseFilter, each filter class\n   * needs to specify all the one that are needed\n   */\n  static uniformLocations: string[] = [];\n\n  declare static defaults: Record<string, unknown>;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor({\n    type,\n    ...options\n  }: { type?: never } & Partial<OwnProps> & Record<string, any> = {}) {\n    Object.assign(\n      this,\n      (this.constructor as typeof BaseFilter).defaults,\n      options,\n    );\n  }\n\n  protected getFragmentSource(): string {\n    return identityFragmentShader;\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram(\n    gl: WebGLRenderingContext,\n    fragmentSource: string = this.getFragmentSource(),\n    vertexSource: string = this.getVertexSource(),\n  ) {\n    const {\n      WebGLProbe: { GLPrecision = 'highp' },\n    } = getEnv();\n    if (GLPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(\n        regex,\n        highPsourceCode.replace('highp', GLPrecision),\n      );\n    }\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n\n    if (!vertexShader || !fragmentShader || !program) {\n      throw new FabricError(\n        'Vertex, fragment shader or program creation error',\n      );\n    }\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          vertexShader,\n        )}`,\n      );\n    }\n\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          fragmentShader,\n        )}`,\n      );\n    }\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new FabricError(\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`,\n      );\n    }\n\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n\n    return {\n      program,\n      attributeLocations: this.getAttributeLocations(gl, program),\n      uniformLocations,\n    };\n  }\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLAttributeLocationMap {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  }\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n  ): TWebGLUniformLocationMap {\n    const locations = (this.constructor as unknown as typeof BaseFilter<string>)\n      .uniformLocations;\n\n    const uniformLocations: Record<string, WebGLUniformLocation | null> = {};\n    for (let i = 0; i < locations.length; i++) {\n      uniformLocations[locations[i]] = gl.getUniformLocation(\n        program,\n        locations[i],\n      );\n    }\n    return uniformLocations;\n  }\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData(\n    gl: WebGLRenderingContext,\n    attributeLocations: Record<string, number>,\n    aPositionData: Float32Array,\n  ) {\n    const attributeLocation = attributeLocations.aPosition;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  }\n\n  _setupFrameBuffer(options: TWebGLPipelineState) {\n    const gl = options.context;\n    if (options.passes > 1) {\n      const width = options.destinationWidth;\n      const height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(\n          gl,\n          width,\n          height,\n        );\n      }\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        options.targetTexture,\n        0,\n      );\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  }\n\n  _swapTextures(options: TWebGLPipelineState) {\n    options.passes--;\n    options.pass++;\n    const temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  }\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isNeutralState(options?: any): boolean {\n    return false;\n  }\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(_options: T2DPipelineState): void {\n    // override by subclass\n  }\n\n  /**\n   * Returns a string that represent the current selected shader code for the filter.\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\n   * @type string\n   **/\n  getCacheKey(): string {\n    return this.type;\n  }\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   * @return {WebGLProgram} the compiled program shader\n   */\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\n    const key = this.getCacheKey();\n    if (!options.programCache[key]) {\n      options.programCache[key] = this.createProgram(options.context);\n    }\n    return options.programCache[key];\n  }\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context;\n    const shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  bindAdditionalTexture(\n    gl: WebGLRenderingContext,\n    texture: WebGLTexture,\n    textureUnit: number,\n  ) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} _gl The canvas context used to compile the shader program.\n   * @param {Object} _uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData(\n    _gl: WebGLRenderingContext,\n    _uniformLocations: TWebGLUniformLocationMap,\n  ): void {\n    // override by subclass\n  }\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer(options: T2DPipelineState) {\n    if (!options.helpLayer) {\n      const { sourceWidth, sourceHeight } = options;\n      const helpLayer = createCanvasElementFor({\n        width: sourceWidth,\n        height: sourceHeight,\n      });\n      options.helpLayer = helpLayer;\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * It will automatically export the default values of a filter,\n   * stored in the static defaults property.\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): { type: Name } & OwnProps {\n    const defaultKeys = Object.keys(\n      (this.constructor as typeof BaseFilter).defaults || {},\n    ) as (keyof OwnProps)[];\n\n    return {\n      type: this.type,\n      ...defaultKeys.reduce<OwnProps>((acc, key) => {\n        acc[key] = this[\n          key as keyof this\n        ] as unknown as (typeof acc)[typeof key];\n        return acc;\n      }, {} as OwnProps),\n    };\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  static async fromObject(\n    { type, ...filterOptions }: Record<string, any>,\n    _options: Abortable,\n  ): Promise<BaseFilter<string, object>> {\n    return new this(filterOptions);\n  }\n}\n","export const blendColorFragmentSource = {\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n  screen:\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n  exclusion:\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n  overlay: `\n    if (uColor.r < 0.5) {\n      gl_FragColor.r *= 2.0 * uColor.r;\n    } else {\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n    }\n    if (uColor.g < 0.5) {\n      gl_FragColor.g *= 2.0 * uColor.g;\n    } else {\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n    }\n    if (uColor.b < 0.5) {\n      gl_FragColor.b *= 2.0 * uColor.b;\n    } else {\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n    }\n    `,\n  tint: `\n    gl_FragColor.rgb *= (1.0 - uColor.a);\n    gl_FragColor.rgb += uColor.rgb;\n    `,\n} as const;\n","import { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { blendColorFragmentSource } from './shaders/blendColor';\n\nexport type TBlendMode =\n  | 'multiply'\n  | 'add'\n  | 'difference'\n  | 'screen'\n  | 'subtract'\n  | 'darken'\n  | 'lighten'\n  | 'overlay'\n  | 'exclusion'\n  | 'tint';\n\ntype BlendColorOwnProps = {\n  color: string;\n  mode: TBlendMode;\n  alpha: number;\n};\n\nexport const blendColorDefaultValues: BlendColorOwnProps = {\n  color: '#F95C63',\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Color Blend filter class\n * @example\n * const filter = new BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendColor extends BaseFilter<'BlendColor', BlendColorOwnProps> {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   * @type String\n   * @default\n   **/\n  declare color: BlendColorOwnProps['color'];\n\n  /**\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\n   * darken, lighten, overlay, exclusion, tint.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendColorOwnProps['mode'];\n  /**\n   * alpha value. represent the strength of the blend color operation.\n   * @type Number\n   * @default\n   **/\n  declare alpha: BlendColorOwnProps['alpha'];\n\n  static defaults = blendColorDefaultValues;\n\n  static type = 'BlendColor';\n\n  static uniformLocations = ['uColor'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  protected getFragmentSource(): string {\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec4 uColor;\n      varying vec2 vTexCoord;\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        gl_FragColor = color;\n        if (color.a > 0.0) {\n          ${blendColorFragmentSource[this.mode]}\n        }\n      }\n      `;\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const source = new Color(this.color).getSource();\n    const tr = source[0] * this.alpha;\n    const tg = source[1] * this.alpha;\n    const tb = source[2] * this.alpha;\n    const alpha1 = 1 - this.alpha;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          break;\n        case 'screen':\n          data[i] = 255 - ((255 - r) * (255 - tr)) / 255;\n          data[i + 1] = 255 - ((255 - g) * (255 - tg)) / 255;\n          data[i + 2] = 255 - ((255 - b) * (255 - tb)) / 255;\n          break;\n        case 'add':\n          data[i] = r + tr;\n          data[i + 1] = g + tg;\n          data[i + 2] = b + tb;\n          break;\n        case 'difference':\n          data[i] = Math.abs(r - tr);\n          data[i + 1] = Math.abs(g - tg);\n          data[i + 2] = Math.abs(b - tb);\n          break;\n        case 'subtract':\n          data[i] = r - tr;\n          data[i + 1] = g - tg;\n          data[i + 2] = b - tb;\n          break;\n        case 'darken':\n          data[i] = Math.min(r, tr);\n          data[i + 1] = Math.min(g, tg);\n          data[i + 2] = Math.min(b, tb);\n          break;\n        case 'lighten':\n          data[i] = Math.max(r, tr);\n          data[i + 1] = Math.max(g, tg);\n          data[i + 2] = Math.max(b, tb);\n          break;\n        case 'overlay':\n          data[i] =\n            tr < 128\n              ? (2 * r * tr) / 255\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\n          data[i + 1] =\n            tg < 128\n              ? (2 * g * tg) / 255\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\n          data[i + 2] =\n            tb < 128\n              ? (2 * b * tb) / 255\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\n          break;\n        case 'exclusion':\n          data[i] = tr + r - (2 * tr * r) / 255;\n          data[i + 1] = tg + g - (2 * tg * g) / 255;\n          data[i + 2] = tb + b - (2 * tb * b) / 255;\n          break;\n        case 'tint':\n          data[i] = tr + r * alpha1;\n          data[i + 1] = tg + g * alpha1;\n          data[i + 2] = tb + b * alpha1;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource();\n    source[0] = (this.alpha * source[0]) / 255;\n    source[1] = (this.alpha * source[1]) / 255;\n    source[2] = (this.alpha * source[2]) / 255;\n    source[3] = this.alpha;\n    gl.uniform4fv(uniformLocations.uColor, source);\n  }\n}\n\nclassRegistry.setClass(BlendColor);\n","import type { TBlendImageMode } from '../BlendImage';\n\nexport const fragmentSource: Record<TBlendImageMode, string> = {\n  multiply: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.rgba *= color2.rgba;\n      gl_FragColor = color;\n    }\n    `,\n  mask: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.a = color2.a;\n      gl_FragColor = color;\n    }\n    `,\n} as const;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    uniform mat3 uTransformMatrix;\n    void main() {\n      vTexCoord = aPosition;\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ` as const;\n","import { FabricImage } from '../shapes/Image';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource, vertexSource } from './shaders/blendImage';\n\nexport type TBlendImageMode = 'multiply' | 'mask';\n\ntype BlendImageOwnProps = {\n  mode: TBlendImageMode;\n  alpha: number;\n};\n\nexport const blendImageDefaultValues: BlendImageOwnProps = {\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Image Blend filter class\n * @example\n * const filter = new filters.BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply'\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendImage extends BaseFilter<'BlendImage', BlendImageOwnProps> {\n  /**\n   * Image to make the blend operation with.\n   **/\n  declare image: FabricImage;\n\n  /**\n   * Blend mode for the filter: either 'multiply' or 'mask'. 'multiply' will\n   * multiply the values of each channel (R, G, B, and A) of the filter image by\n   * their corresponding values in the base image. 'mask' will only look at the\n   * alpha channel of the filter image, and apply those values to the base\n   * image's alpha channel.\n   * @type String\n   * @default\n   **/\n  declare mode: BlendImageOwnProps['mode'];\n\n  /**\n   * alpha value. represent the strength of the blend image operation.\n   * not implemented.\n   **/\n  declare alpha: BlendImageOwnProps['alpha'];\n\n  static type = 'BlendImage';\n\n  static defaults = blendImageDefaultValues;\n\n  static uniformLocations = ['uTransformMatrix', 'uImage'];\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource[this.mode];\n  }\n\n  getVertexSource(): string {\n    return vertexSource;\n  }\n\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context,\n      texture = this.createTexture(options.filterBackend, this.image);\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\n    super.applyToWebGL(options);\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n  }\n\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\n  }\n\n  /**\n   * Calculate a transformMatrix to adapt the image to blend over\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  calculateMatrix() {\n    const image = this.image,\n      { width, height } = image.getElement();\n    return [\n      1 / image.scaleX,\n      0,\n      0,\n      0,\n      1 / image.scaleY,\n      0,\n      -image.left / width,\n      -image.top / height,\n      1,\n    ];\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({\n    imageData: { data, width, height },\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const image = this.image;\n    if (!resources.blendImage) {\n      resources.blendImage = createCanvasElement();\n    }\n    const canvas1 = resources.blendImage;\n    const context = canvas1.getContext('2d')!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas1.width = width;\n      canvas1.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    context.setTransform(\n      image.scaleX,\n      0,\n      0,\n      image.scaleY,\n      image.left,\n      image.top,\n    );\n    context.drawImage(image.getElement(), 0, 0, width, height);\n    const blendData = context.getImageData(0, 0, width, height).data;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const a = data[i + 3];\n\n      const tr = blendData[i];\n      const tg = blendData[i + 1];\n      const tb = blendData[i + 2];\n      const ta = blendData[i + 3];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          data[i + 3] = (a * ta) / 255;\n          break;\n        case 'mask':\n          data[i + 3] = ta;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const matrix = this.calculateMatrix();\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * TODO: Handle the possibility of missing image better.\n   * As of now a BlendImage filter without image can't be used with fromObject\n   * @return {Object} Object representation of an instance\n   */\n  toObject(): {\n    type: 'BlendImage';\n    image: ReturnType<FabricImage['toObject']>;\n  } & BlendImageOwnProps {\n    return {\n      ...super.toObject(),\n      image: this.image && this.image.toObject(),\n    };\n  }\n\n  /**\n   * Create filter instance from an object representation\n   * @static\n   * @param {object} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<BlendImage>}\n   */\n  static async fromObject(\n    { type, image, ...filterOptions }: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<BaseFilter<'BlendImage', BlendImageOwnProps>> {\n    return FabricImage.fromObject(image, options).then(\n      (enlivedImage) =>\n        new this({ ...filterOptions, image: enlivedImage }) as BlendImage,\n    );\n  }\n}\n\nclassRegistry.setClass(BlendImage);\n","export const fragmentSource = `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n    const float nSamples = 15.0;\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n    float random(vec3 scale) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n    }\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      float offset = random(v3offset);\n      for (float t = -nSamples; t <= nSamples; t++) {\n        float percent = (t + offset - 0.5) / nSamples;\n        float weight = 1.0 - abs(percent);\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\n        total += weight;\n      }\n      gl_FragColor = color / total;\n    }\n  ` as const;\n","import { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  TWebGLPipelineState,\n  T2DPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blur';\n\ntype BlurOwnProps = {\n  blur: number;\n};\n\nexport const blurDefaultValues: BlurOwnProps = {\n  blur: 0,\n};\n\n/**\n * Blur filter class\n * @example\n * const filter = new Blur({\n *   blur: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Blur extends BaseFilter<'Blur', BlurOwnProps> {\n  /**\n   * blur value, in percentage of image dimensions.\n   * specific to keep the image blur constant at different resolutions\n   * range between 0 and 1.\n   * @type Number\n   * @default\n   */\n  declare blur: BlurOwnProps['blur'];\n\n  declare horizontal: boolean;\n  declare aspectRatio: number;\n\n  static type = 'Blur';\n\n  static defaults = blurDefaultValues;\n\n  static uniformLocations = ['uDelta'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      // this aspectRatio is used to give the same blur to vertical and horizontal\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\n      options.passes++;\n      this._setupFrameBuffer(options);\n      this.horizontal = true;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n      this._setupFrameBuffer(options);\n      this.horizontal = false;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(options: T2DPipelineState) {\n    options.imageData = this.simpleBlur(options);\n  }\n\n  simpleBlur({\n    ctx,\n    imageData,\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const { width, height } = imageData;\n    if (!resources.blurLayer1) {\n      resources.blurLayer1 = createCanvasElement();\n      resources.blurLayer2 = createCanvasElement();\n    }\n    const canvas1 = resources.blurLayer1!;\n    const canvas2 = resources.blurLayer2!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas2.width = canvas1.width = width;\n      canvas2.height = canvas1.height = height;\n    }\n    const ctx1 = canvas1.getContext('2d')!,\n      ctx2 = canvas2.getContext('2d')!,\n      nSamples = 15,\n      blur = this.blur * 0.06 * 0.5;\n    let random, percent, j, i;\n\n    // load first canvas\n    ctx1.putImageData(imageData, 0, 0);\n    ctx2.clearRect(0, 0, width, height);\n\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * width + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, j, random);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * height + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, random, j);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    ctx.drawImage(canvas1, 0, 0);\n    const newImageData = ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n    ctx1.globalAlpha = 1;\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    return newImageData;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const delta = this.chooseRightDelta();\n    gl.uniform2fv(uniformLocations.uDelta, delta);\n  }\n\n  isNeutralState() {\n    return this.blur === 0;\n  }\n\n  /**\n   * choose right value of image percentage to blur with\n   * @returns {Array} a numeric array with delta values\n   */\n  chooseRightDelta() {\n    let blurScale = 1;\n    const delta = [0, 0];\n    if (this.horizontal) {\n      if (this.aspectRatio > 1) {\n        // image is wide, i want to shrink radius horizontal\n        blurScale = 1 / this.aspectRatio;\n      }\n    } else {\n      if (this.aspectRatio < 1) {\n        // image is tall, i want to shrink radius vertical\n        blurScale = this.aspectRatio;\n      }\n    }\n    const blur = blurScale * this.blur * 0.12;\n    if (this.horizontal) {\n      delta[0] = blur;\n    } else {\n      delta[1] = blur;\n    }\n    return delta;\n  }\n}\n\nclassRegistry.setClass(Blur);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBrightness;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += uBrightness;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/brightness';\n\ntype BrightnessOwnProps = {\n  brightness: number;\n};\n\nexport const brightnessDefaultValues: BrightnessOwnProps = {\n  brightness: 0,\n};\n\n/**\n * Brightness filter class\n * @example\n * const filter = new Brightness({\n *   brightness: 0.05\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Brightness extends BaseFilter<'Brightness', BrightnessOwnProps> {\n  /**\n   * Brightness value, from -1 to 1.\n   * translated to -255 to 255 for 2d\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Number} brightness\n   * @default\n   */\n  declare brightness: BrightnessOwnProps['brightness'];\n\n  static type = 'Brightness';\n\n  static defaults = brightnessDefaultValues;\n\n  static uniformLocations = ['uBrightness'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const brightness = Math.round(this.brightness * 255);\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = data[i] + brightness;\n      data[i + 1] = data[i + 1] + brightness;\n      data[i + 2] = data[i + 2] + brightness;\n    }\n  }\n\n  isNeutralState() {\n    return this.brightness === 0;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n  }\n}\n\nclassRegistry.setClass(Brightness);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  varying vec2 vTexCoord;\n  uniform mat4 uColorMatrix;\n  uniform vec4 uConstants;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color *= uColorMatrix;\n    color += uConstants;\n    gl_FragColor = color;\n  }`;\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TMatColorMatrix,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\n\ntype ColorMatrixOwnProps = {\n  matrix: TMatColorMatrix;\n  colorsOnly: boolean;\n};\n\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n  colorsOnly: true,\n};\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix<\n  Name extends string = 'ColorMatrix',\n  OwnProps extends object = ColorMatrixOwnProps,\n> extends BaseFilter<Name, OwnProps> {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: ColorMatrixOwnProps['matrix'];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      if (colorsOnly) {\n        data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n        data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      } else {\n        const a = data[i + 3];\n        data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n        data[i + 2] =\n          r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n\n  toObject() {\n    return {\n      ...super.toObject(),\n      matrix: [...this.matrix] as TMatColorMatrix,\n    };\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n","import { ColorMatrix } from './ColorMatrix';\nimport { classRegistry } from '../ClassRegistry';\nimport type { TMatColorMatrix } from './typedefs';\n\ntype FixedFiltersOwnProps = {\n  colorsOnly: boolean;\n};\n\nexport function createColorMatrixFilter(key: string, matrix: TMatColorMatrix) {\n  const newClass = class extends ColorMatrix<typeof key, FixedFiltersOwnProps> {\n    static type = key;\n\n    static defaults = {\n      colorsOnly: false,\n      matrix,\n    };\n\n    //@ts-expect-error TS wants matrix to be exported.\n    toObject(): { type: string } & FixedFiltersOwnProps {\n      return { type: this.type, colorsOnly: this.colorsOnly };\n    }\n  };\n  classRegistry.setClass(newClass, key);\n  return newClass as typeof ColorMatrix<typeof key, FixedFiltersOwnProps>;\n}\n\nexport const Brownie = createColorMatrixFilter(\n  'Brownie',\n  [\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Vintage = createColorMatrixFilter(\n  'Vintage',\n  [\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Kodachrome = createColorMatrixFilter(\n  'Kodachrome',\n  [\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Technicolor = createColorMatrixFilter(\n  'Technicolor',\n  [\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Polaroid = createColorMatrixFilter(\n  'Polaroid',\n  [\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\n    1.483, 0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const Sepia = createColorMatrixFilter(\n  'Sepia',\n  [\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\n    0, 0, 0, 0, 0, 1, 0,\n  ],\n);\n\nexport const BlackWhite = createColorMatrixFilter(\n  'BlackWhite',\n  [\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\n    1, 0,\n  ],\n);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\n\ntype ComposedOwnProps = {\n  subFilters: BaseFilter<string, object>[];\n};\n\n/**\n * A container class that knows how to apply a sequence of filters to an input image.\n */\nexport class Composed extends BaseFilter<'Composed', ComposedOwnProps> {\n  /**\n   * A non sparse array of filters to apply\n   */\n  declare subFilters: ComposedOwnProps['subFilters'];\n\n  static type = 'Composed';\n\n  constructor(\n    options: { subFilters?: BaseFilter<string, object>[] } & Record<\n      string,\n      any\n    > = {},\n  ) {\n    super(options);\n    this.subFilters = options.subFilters || [];\n  }\n\n  /**\n   * Apply this container's filters to the input image provided.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be applied.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      options.passes += this.subFilters.length - 1;\n    }\n    this.subFilters.forEach((filter) => {\n      filter.applyTo(options);\n    });\n  }\n\n  /**\n   * Serialize this filter into JSON.\n   * @returns {Object} A JSON representation of this filter.\n   */\n  //@ts-expect-error TS doesn't like this toObject\n  toObject(): {\n    type: 'Composed';\n    subFilters: ReturnType<BaseFilter<string, object>['toObject']>[];\n  } {\n    return {\n      type: this.type,\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\n    };\n  }\n\n  isNeutralState() {\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\n  }\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   * @static\n   * @param {oject} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<Composed>}\n   */\n  static fromObject(\n    object: Record<string, any>,\n    options: { signal: AbortSignal },\n  ): Promise<Composed> {\n    return Promise.all(\n      ((object.subFilters || []) as BaseFilter<string, object>[]).map(\n        (filter) =>\n          classRegistry\n            .getClass<typeof BaseFilter>(filter.type)\n            .fromObject(filter, options),\n      ),\n    ).then(\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as Composed,\n    );\n  }\n}\n\nclassRegistry.setClass(Composed);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uContrast;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n    gl_FragColor = color;\n  }`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\n\ntype ContrastOwnProps = {\n  contrast: number;\n};\n\nexport const contrastDefaultValues: ContrastOwnProps = {\n  contrast: 0,\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: ContrastOwnProps['contrast'];\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  static uniformLocations = ['uContrast'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  isNeutralState() {\n    return this.contrast === 0;\n  }\n\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n","export const fragmentSource = {\n  Convolute_3_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_3_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_5_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_5_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_7_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_7_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_9_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_9_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/convolute';\n\nexport type ConvoluteOwnProps = {\n  opaque: boolean;\n  matrix: number[];\n};\n\nexport const convoluteDefaultValues: ConvoluteOwnProps = {\n  opaque: false,\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n};\n\n/**\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n * @example <caption>Sharpen filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 0, -1,  0,\n *            -1,  5, -1,\n *             0, -1,  0 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Blur filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter with opaqueness</caption>\n * const filter = new Convolute({\n *   opaque: true,\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Convolute extends BaseFilter<'Convolute', ConvoluteOwnProps> {\n  /*\n   * Opaque value (true/false)\n   */\n  declare opaque: ConvoluteOwnProps['opaque'];\n\n  /*\n   * matrix for the filter, max 9x9\n   */\n  declare matrix: ConvoluteOwnProps['matrix'];\n\n  static type = 'Convolute';\n\n  static defaults = convoluteDefaultValues;\n\n  static uniformLocations = ['uMatrix', 'uOpaque', 'uHalfSize', 'uSize'];\n\n  getCacheKey() {\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\n      this.opaque ? 1 : 0\n    }` as keyof typeof fragmentSource;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.getCacheKey()];\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      weights = this.matrix,\n      side = Math.round(Math.sqrt(weights.length)),\n      halfSide = Math.floor(side / 2),\n      sw = imageData.width,\n      sh = imageData.height,\n      output = options.ctx.createImageData(sw, sh),\n      dst = output.data,\n      // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0;\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n\n    for (y = 0; y < sh; y++) {\n      for (x = 0; x < sw; x++) {\n        dstOff = (y * sw + x) * 4;\n        // calculate the weighed sum of the source image pixels that\n        // fall under the convolution matrix\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 0;\n\n        for (cy = 0; cy < side; cy++) {\n          for (cx = 0; cx < side; cx++) {\n            scy = y + cy - halfSide;\n            scx = x + cx - halfSide;\n\n            // eslint-disable-next-line max-depth\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n              continue;\n            }\n\n            srcOff = (scy * sw + scx) * 4;\n            wt = weights[cy * side + cx];\n\n            r += data[srcOff] * wt;\n            g += data[srcOff + 1] * wt;\n            b += data[srcOff + 2] * wt;\n            // eslint-disable-next-line max-depth\n            if (!alphaFac) {\n              a += data[srcOff + 3] * wt;\n            }\n          }\n        }\n        dst[dstOff] = r;\n        dst[dstOff + 1] = g;\n        dst[dstOff + 2] = b;\n        if (!alphaFac) {\n          dst[dstOff + 3] = a;\n        } else {\n          dst[dstOff + 3] = data[dstOff + 3];\n        }\n      }\n    }\n    options.imageData = output;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      opaque: this.opaque,\n      matrix: [...this.matrix],\n    };\n  }\n}\n\nclassRegistry.setClass(Convolute);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform vec3 uGamma;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    vec3 correction = (1.0 / uGamma);\n    color.r = pow(color.r, correction.r);\n    color.g = pow(color.g, correction.g);\n    color.b = pow(color.b, correction.b);\n    gl_FragColor = color;\n    gl_FragColor.rgb *= color.a;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/gamma';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nconst GAMMA = 'Gamma' as const;\n\nexport type GammaInput = [number, number, number];\n\nexport type GammaOwnProps = {\n  gamma: GammaInput;\n};\n\nexport const gammaDefaultValues: GammaOwnProps = {\n  gamma: [1, 1, 1],\n};\n\n/**\n * Gamma filter class\n * @example\n * const filter = new Gamma({\n *   gamma: [1, 0.5, 2.1]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Gamma extends BaseFilter<typeof GAMMA, GammaOwnProps> {\n  /**\n   * Gamma array value, from 0.01 to 2.2.\n   * @param {Array} gamma\n   * @default\n   */\n  declare gamma: GammaOwnProps['gamma'];\n  declare rgbValues?: {\n    r: Uint8Array;\n    g: Uint8Array;\n    b: Uint8Array;\n  };\n\n  static type = GAMMA;\n\n  static defaults = gammaDefaultValues;\n\n  static uniformLocations = ['uGamma'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  constructor(options: { gamma?: GammaInput } = {}) {\n    super(options);\n    this.gamma =\n      options.gamma ||\n      ((\n        this.constructor as typeof Gamma\n      ).defaults.gamma.concat() as GammaInput);\n  }\n\n  /**\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const gamma = this.gamma,\n      rInv = 1 / gamma[0],\n      gInv = 1 / gamma[1],\n      bInv = 1 / gamma[2];\n\n    if (!this.rgbValues) {\n      this.rgbValues = {\n        r: new Uint8Array(256),\n        g: new Uint8Array(256),\n        b: new Uint8Array(256),\n      };\n    }\n\n    // This is an optimization - pre-compute a look-up table for each color channel\n    // instead of performing these pow calls for each pixel in the image.\n    const rgb = this.rgbValues;\n    for (let i = 0; i < 256; i++) {\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\n    }\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = rgb.r[data[i]];\n      data[i + 1] = rgb.g[data[i + 1]];\n      data[i + 2] = rgb.b[data[i + 2]];\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n  }\n\n  isNeutralState() {\n    const { gamma } = this;\n    return gamma[0] === 1 && gamma[1] === 1 && gamma[2] === 1;\n  }\n\n  toObject(): { type: typeof GAMMA; gamma: GammaInput } {\n    return {\n      type: GAMMA,\n      gamma: this.gamma.concat() as GammaInput,\n    };\n  }\n}\n\nclassRegistry.setClass(Gamma);\n","import type { TGrayscaleMode } from '../Grayscale';\n\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\n  average: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      float average = (color.r + color.b + color.g) / 3.0;\n      gl_FragColor = vec4(average, average, average, color.a);\n    }\n    `,\n  lightness: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n  luminosity: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n};\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/grayscale';\n\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\n\ntype GrayscaleOwnProps = {\n  mode: TGrayscaleMode;\n};\n\nexport const grayscaleDefaultValues: GrayscaleOwnProps = {\n  mode: 'average',\n};\n\n/**\n * Grayscale image filter class\n * @example\n * const filter = new Grayscale();\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Grayscale extends BaseFilter<'Grayscale', GrayscaleOwnProps> {\n  declare mode: TGrayscaleMode;\n\n  static type = 'Grayscale';\n\n  static defaults = grayscaleDefaultValues;\n\n  static uniformLocations = ['uMode'];\n\n  /**\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0, value: number; i < data.length; i += 4) {\n      switch (this.mode) {\n        case 'average':\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          break;\n        case 'lightness':\n          value =\n            (Math.min(data[i], data[i + 1], data[i + 2]) +\n              Math.max(data[i], data[i + 1], data[i + 2])) /\n            2;\n          break;\n        case 'luminosity':\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n          break;\n      }\n\n      data[i] = value;\n      data[i + 1] = value;\n      data[i + 2] = value;\n    }\n  }\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.mode];\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const mode = 1;\n    gl.uniform1i(uniformLocations.uMode, mode);\n  }\n\n  /**\n   * Grayscale filter isNeutralState implementation\n   * The filter is never neutral\n   * on the image\n   **/\n  isNeutralState() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Grayscale);\n","import { cos } from '../util/misc/cos';\nimport { sin } from '../util/misc/sin';\nimport { ColorMatrix } from './ColorMatrix';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\n\nexport type HueRotationOwnProps = {\n  rotation: number;\n};\n\nexport const hueRotationDefaultValues: HueRotationOwnProps = {\n  rotation: 0,\n};\n\n/**\n * HueRotation filter class\n * @example\n * const filter = new HueRotation({\n *   rotation: -0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class HueRotation extends ColorMatrix<\n  'HueRotation',\n  HueRotationOwnProps\n> {\n  /**\n   * HueRotation value, from -1 to 1.\n   */\n  declare rotation: HueRotationOwnProps['rotation'];\n\n  static type = 'HueRotation';\n\n  static defaults = hueRotationDefaultValues;\n\n  calculateMatrix() {\n    const rad = this.rotation * Math.PI,\n      cosine = cos(rad),\n      sine = sin(rad),\n      aThird = 1 / 3,\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\n      OneMinusCos = 1 - cosine;\n    this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n    this.matrix[0] = cosine + OneMinusCos / 3;\n    this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[6] = cosine + aThird * OneMinusCos;\n    this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[12] = cosine + aThird * OneMinusCos;\n  }\n\n  isNeutralState() {\n    return this.rotation === 0;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    this.calculateMatrix();\n    super.applyTo(options);\n  }\n\n  //@ts-expect-error TS and classes with different methods\n  toObject(): { type: 'HueRotation'; rotation: number } {\n    return {\n      type: this.type,\n      rotation: this.rotation,\n    };\n  }\n}\n\nclassRegistry.setClass(HueRotation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform int uInvert;\n  uniform int uAlpha;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    if (uInvert == 1) {\n      if (uAlpha == 1) {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\n      } else {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n      }\n    } else {\n      gl_FragColor = color;\n    }\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport type InvertOwnProps = {\n  alpha: boolean;\n  invert: boolean;\n};\n\nexport const invertDefaultValues: InvertOwnProps = {\n  alpha: false,\n  invert: true,\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: InvertOwnProps['alpha'];\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: InvertOwnProps['invert'];\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  static uniformLocations = ['uInvert', 'uAlpha'];\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uStepH;\n  uniform float uNoise;\n  uniform float uSeed;\n  varying vec2 vTexCoord;\n  float rand(vec2 co, float seed, float vScale) {\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n  }\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport type NoiseOwnProps = {\n  noise: number;\n};\n\nexport const noiseDefaultValues: NoiseOwnProps = {\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter<'Noise', NoiseOwnProps> {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: NoiseOwnProps['noise'];\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  static uniformLocations = ['uNoise', 'uSeed'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  isNeutralState() {\n    return this.noise === 0;\n  }\n}\n\nclassRegistry.setClass(Noise);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBlocksize;\n  uniform float uStepW;\n  uniform float uStepH;\n  varying vec2 vTexCoord;\n  void main() {\n    float blockW = uBlocksize * uStepW;\n    float blockH = uBlocksize * uStepH;\n    int posX = int(vTexCoord.x / blockW);\n    int posY = int(vTexCoord.y / blockH);\n    float fposX = float(posX);\n    float fposY = float(posY);\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n    vec4 color = texture2D(uTexture, squareCoords);\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/pixelate';\n\nexport type PixelateOwnProps = {\n  blocksize: number;\n};\n\nexport const pixelateDefaultValues: PixelateOwnProps = {\n  blocksize: 4,\n};\n\n/**\n * Pixelate filter class\n * @example\n * const filter = new Pixelate({\n *   blocksize: 8\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Pixelate extends BaseFilter<'Pixelate', PixelateOwnProps> {\n  declare blocksize: PixelateOwnProps['blocksize'];\n\n  static type = 'Pixelate';\n\n  static defaults = pixelateDefaultValues;\n\n  static uniformLocations = ['uBlocksize'];\n\n  /**\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    for (let i = 0; i < height; i += this.blocksize) {\n      for (let j = 0; j < width; j += this.blocksize) {\n        const index = i * 4 * width + j * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        const a = data[index + 3];\n\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\n            const index = _i * 4 * width + _j * 4;\n            data[index] = r;\n            data[index + 1] = g;\n            data[index + 2] = b;\n            data[index + 3] = a;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicate when the filter is not gonna apply changes to the image\n   **/\n  isNeutralState() {\n    return this.blocksize === 1;\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n  }\n}\n\nclassRegistry.setClass(Pixelate);\n","export const fragmentShader = `\nprecision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoord);\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n    gl_FragColor.a = 0.0;\n  }\n}\n`;\n","import { classRegistry } from '../ClassRegistry';\nimport { Color } from '../color/Color';\nimport { BaseFilter } from './BaseFilter';\nimport { fragmentShader } from './shaders/removeColor';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\n\nexport type RemoveColorOwnProps = {\n  color: string;\n  distance: number;\n  useAlpha: boolean;\n};\n\nexport const removeColorDefaultValues: RemoveColorOwnProps = {\n  color: '#FFFFFF',\n  distance: 0.02,\n  useAlpha: false,\n};\n\n/**\n * Remove white filter class\n * @example\n * const filter = new RemoveColor({\n *   threshold: 0.2,\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class RemoveColor extends BaseFilter<\n  'RemoveColor',\n  RemoveColorOwnProps\n> {\n  /**\n   * Color to remove, in any format understood by {@link Color}.\n   * @param {String} type\n   * @default\n   */\n  declare color: RemoveColorOwnProps['color'];\n\n  /**\n   * distance to actual color, as value up or down from each r,g,b\n   * between 0 and 1\n   **/\n  declare distance: RemoveColorOwnProps['distance'];\n\n  /**\n   * For color to remove inside distance, use alpha channel for a smoother deletion\n   * NOT IMPLEMENTED YET\n   **/\n  declare useAlpha: RemoveColorOwnProps['useAlpha'];\n\n  static type = 'RemoveColor';\n\n  static defaults = removeColorDefaultValues;\n\n  static uniformLocations = ['uLow', 'uHigh'];\n\n  getFragmentSource() {\n    return fragmentShader;\n  }\n\n  /**\n   * Applies filter to canvas element\n   * @param {Object} canvasEl Canvas element to apply filter to\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const distance = this.distance * 255,\n      source = new Color(this.color).getSource(),\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n      highC = [\n        source[0] + distance,\n        source[1] + distance,\n        source[2] + distance,\n      ];\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      if (\n        r > lowC[0] &&\n        g > lowC[1] &&\n        b > lowC[2] &&\n        r < highC[0] &&\n        g < highC[1] &&\n        b < highC[2]\n      ) {\n        data[i + 3] = 0;\n      }\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    const source = new Color(this.color).getSource(),\n      distance = this.distance,\n      lowC = [\n        0 + source[0] / 255 - distance,\n        0 + source[1] / 255 - distance,\n        0 + source[2] / 255 - distance,\n        1,\n      ],\n      highC = [\n        source[0] / 255 + distance,\n        source[1] / 255 + distance,\n        source[2] / 255 + distance,\n        1,\n      ];\n    gl.uniform4fv(uniformLocations.uLow, lowC);\n    gl.uniform4fv(uniformLocations.uHigh, highC);\n  }\n}\n\nclassRegistry.setClass(RemoveColor);\n","import { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { XY } from '../Point';\n\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\n\nexport type ResizeOwnProps = {\n  resizeType: TResizeType;\n  scaleX: number;\n  scaleY: number;\n  lanczosLobes: number;\n};\n\nexport const resizeDefaultValues: ResizeOwnProps = {\n  resizeType: 'hermite',\n  scaleX: 1,\n  scaleY: 1,\n  lanczosLobes: 3,\n};\n\ntype ResizeDuring2DResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n};\n\ntype ResizeDuringWEBGLResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n  horizontal: boolean;\n  width: number;\n  height: number;\n  taps: number[];\n  tempScale: number;\n  dH: number;\n  dW: number;\n};\n\n/**\n * Resize image filter class\n * @example\n * const filter = new Resize();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Resize extends BaseFilter<'Resize', ResizeOwnProps> {\n  /**\n   * Resize type\n   * for webgl resizeType is just lanczos, for canvas2d can be:\n   * bilinear, hermite, sliceHack, lanczos.\n   * @default\n   */\n  declare resizeType: ResizeOwnProps['resizeType'];\n\n  /**\n   * Scale factor for resizing, x axis\n   * @param {Number} scaleX\n   * @default\n   */\n  declare scaleX: ResizeOwnProps['scaleX'];\n\n  /**\n   * Scale factor for resizing, y axis\n   * @param {Number} scaleY\n   * @default\n   */\n  declare scaleY: ResizeOwnProps['scaleY'];\n\n  /**\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n   * @param {Number} lanczosLobes\n   * @default\n   */\n  declare lanczosLobes: ResizeOwnProps['lanczosLobes'];\n\n  static type = 'Resize';\n\n  static defaults = resizeDefaultValues;\n\n  static uniformLocations = ['uDelta', 'uTaps'];\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    this: ResizeDuringWEBGLResize,\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform2fv(\n      uniformLocations.uDelta,\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height],\n    );\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\n  }\n\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\n    const scale = this.tempScale;\n    return Math.ceil(this.lanczosLobes / scale);\n  }\n\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return `${this.type}_${filterWindow}`;\n  }\n\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return this.generateShader(filterWindow);\n  }\n\n  getTaps(this: ResizeDuringWEBGLResize) {\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\n      scale = this.tempScale,\n      filterWindow = this.getFilterWindow(),\n      taps = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      taps[i - 1] = lobeFunction(i * scale);\n    }\n    return taps;\n  }\n\n  /**\n   * Generate vertex and shader sources from the necessary steps numbers\n   * @param {Number} filterWindow\n   */\n  generateShader(filterWindow: number) {\n    const offsets = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      offsets[i - 1] = `${i}.0 * uDelta`;\n    }\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec2 uDelta;\n      varying vec2 vTexCoord;\n      uniform float uTaps[${filterWindow}];\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        float sum = 1.0;\n        ${offsets\n          .map(\n            (offset, i) => `\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\n              sum += 2.0 * uTaps[${i}];\n            `,\n          )\n          .join('\\n')}\n        gl_FragColor = color / sum;\n      }\n    `;\n  }\n\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\n    options.passes++;\n    this.width = options.sourceWidth;\n    this.horizontal = true;\n    this.dW = Math.round(this.width * this.scaleX);\n    this.dH = options.sourceHeight;\n    this.tempScale = this.dW / this.width;\n    this.taps = this.getTaps();\n    options.destinationWidth = this.dW;\n    super.applyTo(options);\n    options.sourceWidth = options.destinationWidth;\n\n    this.height = options.sourceHeight;\n    this.horizontal = false;\n    this.dH = Math.round(this.height * this.scaleY);\n    this.tempScale = this.dH / this.height;\n    this.taps = this.getTaps();\n    options.destinationHeight = this.dH;\n    super.applyTo(options);\n    options.sourceHeight = options.destinationHeight;\n  }\n\n  /**\n   * Apply the resize filter to the image\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\n    } else {\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\n    }\n  }\n\n  isNeutralState() {\n    return this.scaleX === 1 && this.scaleY === 1;\n  }\n\n  lanczosCreate(lobes: number) {\n    return (x: number) => {\n      if (x >= lobes || x <= -lobes) {\n        return 0.0;\n      }\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n        return 1.0;\n      }\n      x *= Math.PI;\n      const xx = x / lobes;\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\n    };\n  }\n\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\n    const imageData = options.imageData,\n      scaleX = this.scaleX,\n      scaleY = this.scaleY;\n\n    this.rcpScaleX = 1 / scaleX;\n    this.rcpScaleY = 1 / scaleY;\n\n    const oW = imageData.width;\n    const oH = imageData.height;\n    const dW = Math.round(oW * scaleX);\n    const dH = Math.round(oH * scaleY);\n    let newData: ImageData;\n\n    if (this.resizeType === 'sliceHack') {\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'hermite') {\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'bilinear') {\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'lanczos') {\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\n    } else {\n      // this should never trigger, is here just for safety net.\n      newData = new ImageData(dW, dH);\n    }\n    options.imageData = newData;\n  }\n\n  /**\n   * Filter sliceByTwo\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  sliceByTwo(\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const imageData = options.imageData;\n    const mult = 0.5;\n    let doneW = false;\n    let doneH = false;\n    let stepW = oW * mult;\n    let stepH = oH * mult;\n    const resources = options.filterBackend.resources;\n    let sX = 0;\n    let sY = 0;\n    const dX = oW;\n    let dY = 0;\n    if (!resources.sliceByTwo) {\n      resources.sliceByTwo = createCanvasElement();\n    }\n    const tmpCanvas = resources.sliceByTwo;\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n      tmpCanvas.width = oW * 1.5;\n      tmpCanvas.height = oH;\n    }\n    const ctx = tmpCanvas.getContext('2d')!;\n    ctx.clearRect(0, 0, oW * 1.5, oH);\n    ctx.putImageData(imageData, 0, 0);\n\n    dW = Math.floor(dW);\n    dH = Math.floor(dH);\n\n    while (!doneW || !doneH) {\n      oW = stepW;\n      oH = stepH;\n      if (dW < Math.floor(stepW * mult)) {\n        stepW = Math.floor(stepW * mult);\n      } else {\n        stepW = dW;\n        doneW = true;\n      }\n      if (dH < Math.floor(stepH * mult)) {\n        stepH = Math.floor(stepH * mult);\n      } else {\n        stepH = dH;\n        doneH = true;\n      }\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n      sX = dX;\n      sY = dY;\n      dY += stepH;\n    }\n    return ctx.getImageData(sX, sY, dW, dH);\n  }\n\n  /**\n   * Filter lanczosResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  lanczosResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ): ImageData {\n    function process(u: number): ImageData {\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n      center.x = (u + 0.5) * ratioX;\n      icenter.x = Math.floor(center.x);\n      for (v = 0; v < dH; v++) {\n        center.y = (v + 0.5) * ratioY;\n        icenter.y = Math.floor(center.y);\n        a = 0;\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n          if (i < 0 || i >= oW) {\n            continue;\n          }\n          fX = Math.floor(1000 * Math.abs(i - center.x));\n          if (!cacheLanc[fX]) {\n            cacheLanc[fX] = {};\n          }\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n            if (j < 0 || j >= oH) {\n              continue;\n            }\n            fY = Math.floor(1000 * Math.abs(j - center.y));\n            if (!cacheLanc[fX][fY]) {\n              cacheLanc[fX][fY] = lanczos(\n                Math.sqrt(\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2),\n                ) / 1000,\n              );\n            }\n            weight = cacheLanc[fX][fY];\n            if (weight > 0) {\n              idx = (j * oW + i) * 4;\n              a += weight;\n              red += weight * srcData[idx];\n              green += weight * srcData[idx + 1];\n              blue += weight * srcData[idx + 2];\n              alpha += weight * srcData[idx + 3];\n            }\n          }\n        }\n        idx = (v * dW + u) * 4;\n        destData[idx] = red / a;\n        destData[idx + 1] = green / a;\n        destData[idx + 2] = blue / a;\n        destData[idx + 3] = alpha / a;\n      }\n\n      if (++u < dW) {\n        return process(u);\n      } else {\n        return destImg;\n      }\n    }\n\n    const srcData = options.imageData.data,\n      destImg = options.ctx.createImageData(dW, dH),\n      destData = destImg.data,\n      lanczos = this.lanczosCreate(this.lanczosLobes),\n      ratioX = this.rcpScaleX,\n      ratioY = this.rcpScaleY,\n      rcpRatioX = 2 / this.rcpScaleX,\n      rcpRatioY = 2 / this.rcpScaleY,\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\n      cacheLanc: Record<number, Record<number, number>> = {},\n      center: XY = { x: 0, y: 0 },\n      icenter: XY = { x: 0, y: 0 };\n\n    return process(0);\n  }\n\n  /**\n   * bilinearFiltering\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  bilinearFiltering(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let x;\n    let y;\n    let i;\n    let j;\n    let xDiff;\n    let yDiff;\n    let chnl;\n    let color;\n    let offset = 0;\n    let origPix;\n    const ratioX = this.rcpScaleX;\n    const ratioY = this.rcpScaleY;\n    const w4 = 4 * (oW - 1);\n    const img = options.imageData;\n    const pixels = img.data;\n    const destImage = options.ctx.createImageData(dW, dH);\n    const destPixels = destImage.data;\n    for (i = 0; i < dH; i++) {\n      for (j = 0; j < dW; j++) {\n        x = Math.floor(ratioX * j);\n        y = Math.floor(ratioY * i);\n        xDiff = ratioX * j - x;\n        yDiff = ratioY * i - y;\n        origPix = 4 * (y * oW + x);\n\n        for (chnl = 0; chnl < 4; chnl++) {\n          a = pixels[origPix + chnl];\n          b = pixels[origPix + 4 + chnl];\n          c = pixels[origPix + w4 + chnl];\n          d = pixels[origPix + w4 + 4 + chnl];\n          color =\n            a * (1 - xDiff) * (1 - yDiff) +\n            b * xDiff * (1 - yDiff) +\n            c * yDiff * (1 - xDiff) +\n            d * xDiff * yDiff;\n          destPixels[offset++] = color;\n        }\n      }\n    }\n    return destImage;\n  }\n\n  /**\n   * hermiteFastResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  hermiteFastResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number,\n  ) {\n    const ratioW = this.rcpScaleX,\n      ratioH = this.rcpScaleY,\n      ratioWHalf = Math.ceil(ratioW / 2),\n      ratioHHalf = Math.ceil(ratioH / 2),\n      img = options.imageData,\n      data = img.data,\n      img2 = options.ctx.createImageData(dW, dH),\n      data2 = img2.data;\n    for (let j = 0; j < dH; j++) {\n      for (let i = 0; i < dW; i++) {\n        const x2 = (i + j * dW) * 4;\n        let weight = 0;\n        let weights = 0;\n        let weightsAlpha = 0;\n        let gxR = 0;\n        let gxG = 0;\n        let gxB = 0;\n        let gxA = 0;\n        const centerY = (j + 0.5) * ratioH;\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\n            centerX = (i + 0.5) * ratioW,\n            w0 = dy * dy;\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\n            const w = Math.sqrt(w0 + dx * dx);\n            /* eslint-disable max-depth */\n            if (w > 1 && w < -1) {\n              continue;\n            }\n            //hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1;\n            if (weight > 0) {\n              dx = 4 * (xx + yy * oW);\n              //alpha\n              gxA += weight * data[dx + 3];\n              weightsAlpha += weight;\n              //colors\n              if (data[dx + 3] < 255) {\n                weight = (weight * data[dx + 3]) / 250;\n              }\n              gxR += weight * data[dx];\n              gxG += weight * data[dx + 1];\n              gxB += weight * data[dx + 2];\n              weights += weight;\n            }\n            /* eslint-enable max-depth */\n          }\n        }\n        data2[x2] = gxR / weights;\n        data2[x2 + 1] = gxG / weights;\n        data2[x2 + 2] = gxB / weights;\n        data2[x2 + 3] = gxA / weightsAlpha;\n      }\n    }\n    return img2;\n  }\n}\n\nclassRegistry.setClass(Resize);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uSaturation;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float rgMax = max(color.r, color.g);\n    float rgbMax = max(rgMax, color.b);\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/saturation';\n\nexport type SaturationOwnProps = {\n  saturation: number;\n};\n\nexport const saturationDefaultValues: SaturationOwnProps = {\n  saturation: 0,\n};\n\n/**\n * Saturate filter class\n * @example\n * const filter = new Saturation({\n *   saturation: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Saturation extends BaseFilter<'Saturation', SaturationOwnProps> {\n  /**\n   * Saturation value, from -1 to 1.\n   * Increases/decreases the color saturation.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} saturation\n   * @default\n   */\n  declare saturation: SaturationOwnProps['saturation'];\n\n  static type = 'Saturation';\n\n  static defaults = saturationDefaultValues;\n\n  static uniformLocations = ['uSaturation'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.saturation;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n  }\n\n  isNeutralState() {\n    return this.saturation === 0;\n  }\n}\n\nclassRegistry.setClass(Saturation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uVibrance;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float max = max(color.r, max(color.g, color.b));\n    float avg = (color.r + color.g + color.b) / 3.0;\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport type VibranceOwnProps = {\n  vibrance: number;\n};\n\nexport const vibranceDefaultValues: VibranceOwnProps = {\n  vibrance: 0,\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter<'Vibrance', VibranceOwnProps> {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: VibranceOwnProps['vibrance'];\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  static uniformLocations = ['uVibrance'];\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\n    }\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {TWebGLUniformLocationMap} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap,\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n\n  isNeutralState() {\n    return this.vibrance === 0;\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["BaseConfiguration","constructor","_defineProperty","window","devicePixelRatio","Configuration","config","configure","arguments","length","undefined","Object","assign","addFonts","paths","fontPaths","_objectSpread","removeFonts","fontFamilys","forEach","fontFamily","clearFonts","restoreDefaults","keys","defaults","reduce","acc","key","log","severity","_len","optionalParams","Array","_key","console","FabricError","Error","message","options","concat","SignalAbortedError","context","GLProbe","WebGLProbe","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","canvas","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","textureSize","copyPasteData","getEnv","document","isTouchSupported","navigator","maxTouchPoints","dispose","env","setEnv","value","getBrowserEnv","getFabricDocument","getFabricWindow","getDevicePixelRatio","_config$devicePixelRa","Math","max","Cache","getFontCache","_ref","fontStyle","fontWeight","toLowerCase","charWidthsCache","fontCache","cacheKey","clearFontCache","limitDimsByArea","ar","perfLimitSizeTotal","roughWidth","sqrt","floor","cache","VERSION","version","noop","halfPI","PI","twoMathPi","PiBy180","iMatrix","freeze","DEFAULT_SVG_FONT_SIZE","ALIASING_LIMIT","kRect","CENTER","LEFT","TOP","BOTTOM","RIGHT","NONE","reNewline","MOVING","SCALING","ROTATING","ROTATE","SKEWING","RESIZING","MODIFY_POLY","MODIFY_PATH","CHANGED","SCALE","SCALE_X","SCALE_Y","SKEW_X","SKEW_Y","FILL","STROKE","MODIFIED","JSON","SVG","ClassRegistry","Map","has","classType","getClass","get","setClass","classConstructor","set","type","getSVGClass","SVGTagName","setSVGClass","classRegistry","AnimationRegistry","remove","index","indexOf","splice","cancelAll","animations","animation","abort","cancelByCanvas","filter","_animation$target","target","cancelByTarget","runningAnimations","Observable","on","arg0","handler","__eventListeners","entries","eventName","off","push","once","disposers","_ref2","d","disposer","onceHandler","args","call","_removeEventListener","eventListener","_ref3","fire","_this$__eventListener","listenersForEvent","i","removeFromArray","array","idx","cos","angle","angleSlice","abs","sin","sign","Point","y","x","add","that","addEquals","scalarAdd","scalar","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","t","min","distanceFrom","dx","dy","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","radians","origin","ZERO","sinus","cosinus","p","rotated","transform","ignoreOffset","isCollection","fabricObject","isArray","_objects","createCollectionMixin","Base","Collection","_onObjectAdded","object","_onObjectRemoved","_onStackOrderChanged","objects","size","insertAt","_len2","_key2","removed","_len3","_key3","forEachObject","callback","getObjects","_len4","types","_key4","o","isType","item","isEmpty","contains","deep","includes","some","obj","complexity","memo","current","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","intersecting","newIdx","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","tl","br","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","CommonMethods","_setOptions","prop","_setObject","_set","toggle","property","requestAnimFrame","requestAnimationFrame","cancelAnimFrame","handle","cancelAnimationFrame","id","uid","createCanvasElement","element","createElement","createImage","copyCanvasElement","_newCanvas$getContext","newCanvas","createCanvasElementFor","drawImage","toDataURL","canvasEl","format","quality","isHTMLCanvas","degreesToRadians","degrees","radiansToDegrees","isIdentityMatrix","mat","every","transformPoint","invertTransform","a","r","multiplyTransformMatrices","b","is2x2","multiplyTransformMatrixArray","matrices","reduceRight","product","curr","calcPlaneRotation","atan2","qrDecompose","denom","pow","scaleX","scaleY","skewX","skewY","translateX","translateY","createTranslateMatrix","createRotateMatrix","angleRadiant","cosValue","sinValue","createScaleMatrix","angleToSkew","tan","createSkewXMatrix","skewValue","createSkewYMatrix","calcDimensionsMatrix","flipX","flipY","matrix","composeMatrix","scaleMatrix","loadImage","url","signal","crossOrigin","Promise","resolve","reject","aborted","img","err","src","addEventListener","done","onload","onerror","removeEventListener","enlivenObjects","reviver","instances","all","map","fromObject","then","fabricInstance","catch","error","instance","finally","enlivenObjectEnlivables","serializedObject","promises","values","enlived","pick","source","pickBy","predicate","ColorNameMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","reRGBa","reHSLa","reHex","hue2rgb","q","rgb2Hsl","g","maxValue","minValue","h","s","l","round","fromAlphaToFloat","parseFloat","endsWith","hexify","toUpperCase","padStart","greyAverage","avg","Color","color","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","isUnrecognised","getSource","toRgb","toRgba","join","toHsl","toHsla","toHex","fullHex","toHexa","slice","getAlpha","setAlpha","alpha","toGrayscale","toBlackWhite","threshold","average","bOrW","overlayWith","otherColor","otherAlpha","otherSource","R","G","B","fromRgb","fromRgba","match","parsedValue","fromHsl","fromHsla","match1degrees","parseAngletoDegrees","fromHex","isShortNotation","expandedValue","split","hex","hexCouple","parseInt","lowercase","numeric","toFixed","number","fractionDigits","Number","getSvgAttributes","commonAttributes","parseUnit","fontSize","unit","exec","dpi","DPI","parseAlign","align","parsePreserveAspectRatioAttribute","attribute","firstPart","secondPart","trim","alignX","alignY","meetOrSlice","matrixToSVG","NUM_FRACTION_DIGITS","colorPropToSVG","inlineStyle","colorValue","opacityValue","toLive","opacity","createSVGRect","svgColor","w","isFiller","filler","isSerializableFiller","toObject","isPattern","offsetX","isTextObject","_renderText","isPath","_renderPathCommands","isActiveSelection","getScrollLeftTop","doc","getDocumentFromElement","elementLoop","docElement","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","el","ownerDocument","getWindowFromElement","_el$ownerDocument","defaultView","setCanvasDimensions","ctx","retinaScaling","setAttribute","scale","setCSSDimensions","getElementOffset","_getWindowFromElement","offset","elemStyle","getComputedStyle","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","box","docElem","getBoundingClientRect","scrollLeftTop","clientLeft","clientTop","makeElementUnselectable","onselectstart","userSelect","StaticCanvasDOMManager","createLowerCanvas","lower","getElementById","hasAttribute","_originalCanvasStyle","cssText","classList","cleanupDOM","removeAttribute","setDimensions","calcOffset","staticCanvasDefaults","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","StaticCanvas","lowerCanvasEl","_this$elements$lower","elements","contextContainer","_this$elements$lower2","getDefaults","ownDefaults","initElements","_setDimensionsImpl","skipControlsDrawing","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","dimensions","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","vpt","zoomToPoint","point","before","newPoint","after","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","backgroundImage","overlayImage","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","iVpt","vptCoords","tr","bl","drawControls","_ctx","v","path","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","len","render","_renderBackgroundOrOverlay","fill","needsVpt","isAFiller","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","m","gradientTransform","patternTransform","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","__serializeBgOverlay","originalValue","data","bgImage","bgColor","background","overlay","toSVG","markup","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","optViewBox","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","additionalTransform","fontList","styles","styleRow","fontListMarkup","_setSVGObject","bgOrOverlay","repeat","finalWidth","finalHeight","shouldInvert","loadFromJSON","json","serialized","parse","enlivedMap","properties","cloneWithoutData","multiplier","finalMultiplier","toCanvasElement","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","originalSkipControlsDrawing","newZoom","vp","newVp","originalRetina","objectsToRender","task","destroy","kill","touchEvents","getTouchInfo","event","touchProp","changedTouches","getPointer","scroll","_evt","clientX","clientY","isTouchEvent","pointerType","stopEvent","e","preventDefault","stopPropagation","makeBoundingBoxFromPoints","points","removeTransformFromObject","inverted","finalTransform","calcOwnMatrix","applyTransformToObject","addTransformToObject","_qrDecompose","otherOptions","_objectWithoutProperties","_excluded","setPositionByOrigin","resetObjectTransform","saveObjectTransform","sizeAfterTransform","dimX","dimY","bbox","calcPlaneChangeMatrix","from","to","sendPointToPlane","sendVectorToPlane","sendObjectToPlane","fireEvent","_target$canvas","originOffset","bottom","right","resolveOrigin","originValue","NOT_ALLOWED_CURSOR","getActionFromCorner","alreadySelected","corner","control","controls","getActionName","isTransformCentered","originX","originY","invertOrigin","isLocked","lockingKey","commonEventInfo","eventData","pointer","findCornerQuadrant","getTotalAngle","cornerAngle","normalizePoint","getRelativeCenterPoint","translateToGivenOrigin","p2","getLocalPoint","padding","localPoint","dragHandler","newLeft","newTop","moveX","moveY","FabricObjectSVGExportMixin","getSvgStyles","skipShadow","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","visibility","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","full","calcTransformMatrix","svgTransform","_toSVG","_reviver","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","strokeUniform","absoluteClipPath","absolutePositioned","clipPathMarkup","addPaintOrder","paintFirst","getSvgRegex","arr","RegExp","reNum","String","raw","_templateObject","_taggedTemplateLiteral","svgNS","reFontDeclaration","svgValidTagNames","svgViewBoxElements","svgInvalidAncestors","svgValidParents","attributesMap","cx","cy","display","fSize","cPath","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgValidParentsRegEx","reViewBoxAttrValue","unitVectorX","zero","rotateVector","vector","createVector","magnitude","calcAngleBetweenVectors","crossProduct","dotProduct","calcVectorRotation","getUnitVector","getOrthonormalVector","counterClockwise","isBetweenVectors","AxB","AxT","BxT","shadowOffsetRegex","reOffsetsAndBlur","shadowDefaultValues","blur","affectStroke","nonScaling","Shadow","parseShadow","shadowStr","replace","BLUR_BOX","fBoxX","fBoxY","capValue","stateProperties","cacheProperties","fabricObjectDefaultValues","minScaleLimit","objectCaching","centeredRotation","centeredScaling","dirty","interactiveObjectDefaultValues","noScaleCache","lockMovementX","lockMovementY","lockRotation","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","cornerSize","touchCornerSize","transparentCorners","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","hasControls","borderColor","borderDashArray","borderOpacityWhenMoving","borderScaleFactor","hasBorders","selectionBackgroundColor","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","normalize","c","asin","elastic","defaultEasing","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","normA","normS","normP","easeOutElastic","normC","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeOutBounce","easeInBounce","easeInOutBounce","easeInQuad","easeOutQuad","easeInOutQuad","defaultAbort","AnimationBase","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","endValue","calculate","state","_state","isDone","start","firstTick","timestamp","startTime","Date","register","setTimeout","durationMs","boundDurationMs","durationProgress","valueProgress","unregister","ValueAnimation","timeElapsed","ArrayAnimation","defaultColorEasing","wrapColorCallback","rgba","ColorAnimation","startColor","endColor","isArrayAnimation","animate","animateColor","Intersection","status","append","isPointContained","T","A","infinite","AB","AT","isPointInPolygon","other","hits","inter","intersectSegmentSegment","intersectLineLine","a1","a2","b1","b2","aInfinite","bInfinite","a2xa1x","a2ya1y","b2xb1x","b2yb1y","a1xb1x","a1yb1y","uaT","ubT","uB","ua","ub","segmentsCoincide","intersectSegmentLine","s1","s2","l1","l2","intersectLinePolygon","result","intersectSegmentPolygon","intersectPolygonPolygon","points1","points2","coincidences","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","ObjectGeometry","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","relativePosition","getRelativeXY","group","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","coords","intersection","intersectsWithObject","isContainedWithinObject","getBoundingRect","isOnScreen","isPartiallyOnScreen","allPointsAreOutside","getScaledWidth","_getTransformedDimensions","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","getCanvasRetinaScaling","_this$canvas","getViewportTransform","_this$canvas2","rotateMatrix","tMatrix","finalMatrix","dim","transformMatrixKey","skipGroup","prefix","matrixCache","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","dimOptions","preScalingStrokeValue","postScalingStrokeValue","noSkew","finalDimensions","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","translateToOriginPoint","relCenter","getPointByOrigin","pos","_getLeftTopCoords","FabricObject","name","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maxCacheSideLimit","minCacheSideLimit","limX","limY","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","minCacheSize","dimensionsChanged","zoomChanged","drawingWidth","drawingHeight","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","getHeightOfLine","ceil","setTransform","translate","needFullTransform","contextTop","getObjectScaling","retina","getObjectOpacity","_constrainScale","isChanged","parent","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","parentClipPaths","hasStroke","hasFill","needsItsOwnCache","ownCaching","isOnACache","willDrawShadow","drawClipPathOnCache","canvasWithClipPath","originalFill","originalStroke","_setClippingProperties","_render","_drawClipPath","createClipPathLayer","prevClipPath","skipCanvas","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","decl","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","dashArray","setLineDash","sx","sy","multX","multY","scaling","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","_pCtx$createPattern","pCanvas","pCtx","createPattern","_findCenterFromElement","objectForm","cloneAsImage","ImageClass","origParams","originalGroup","originalShadow","canvasProvider","withoutTransform","withoutShadow","boundingRect","shadowOffset","originalCanvas","setOnGroup","animatable","_animate","propIsColor","colorProperties","animationOptions","isDescendantOf","getAncestors","ancestors","findCommonAncestors","fork","otherFork","common","otherAncestors","ancestor","j","hasCommonAncestors","commonAncestors","isInFrontOf","ancestorData","firstCommonAncestor","headOfFork","pop","headOfOtherFork","thisIndex","otherIndex","propertiesToSerialize","customProperties","toFixedBound","val","_removeDefaultValues","hasStaticDefaultValues","baseValues","getPrototypeOf","baseValue","_fromObject","serializedObjectOptions","_ref4","extraParam","_excluded2","enlivedObjectOptions","wrapWithFireEvent","actionHandler","extraEventInfo","actionPerformed","wrapWithFixedAnchor","centerPoint","constraint","changeObjectWidth","strokePadding","oldWidth","newWidth","changeWidth","renderCircleControl","styleOverride","xSize","sizeX","ySize","sizeY","myLeft","myTop","arc","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","shouldActivate","controlKey","_fabricObject$canvas","getActiveObject","isControlVisible","getActionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","actionName","getVisibility","_fabricObject$_contro","_fabricObject$_contro2","_controlsVisibility","setVisibility","positionHandler","currentControl","calcCornerCoords","objectCornerSize","centerX","centerY","isTouch","touchSizeX","touchSizeY","rotationStyleHandler","rotateObjectWithSnapping","ex","ey","theta","pivotPoint","lastAngle","curAngle","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","hasRotated","rotationWithSnapping","scaleIsProportional","uniformIsToggled","uniScaleKey","uniformScaling","scalingIsForbidden","by","scaleProportionally","lockX","lockY","scaleMap","scaleCursorStyleHandler","n","scaleObject","forbidScaling","signX","signY","gestureScale","distance","original","originalDistance","oldScaleX","oldScaleY","scaleObjectFromCorner","scaleObjectX","scaleObjectY","scalingEqually","scalingX","scalingY","AXIS_KEYS","counterAxis","skew","lockSkewing","flip","skewMap","skewCursorStyleHandler","skewObject","axis","skewingSide","skewKey","skewingBefore","skewingStart","shearingStart","shearing","skewing","atan","changed","dimBefore","dimAfter","compensationFactor","skewHandler","originKey","lockSkewingKey","flipKey","counterOriginKey","counterFlipKey","counterOriginFactor","skewingDirection","finalHandler","skewHandlerX","skewHandlerY","isAltAction","altActionKey","scaleOrSkewActionName","isAlternative","scaleSkewCursorStyleHandler","scalingXOrSkewingY","scalingYOrSkewingX","createObjectDefaultControls","ml","mr","mb","mt","mtr","withConnection","createResizeControls","createTextboxDefaultControls","InteractiveFabricObject","createControls","targetCanvas","_currentTransform","action","startsWith","getActiveControl","__corner","coord","oCoords","findControl","forTouch","cornerEntries","touchCorner","calcOCoords","rMatrix","positionMatrix","startMatrix","transformOptions","forEachControl","_calcCornerCoords","fn","_activeObject","wh","strokeBorders","_drawBorders","drawControlsConnectingLines","_renderControls","styleOptions","shouldDrawBorders","shouldDrawControls","isMoving","drawBorders","forActiveSelection","shouldStroke","setControlVisible","setControlsVisibility","clearContextTop","restoreManually","onDeselect","_options","onSelect","shouldStartDragging","_e","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","isTransparent","tolerance","getImageData","alphaChannel","rotatePoint","findIndexRight","StrokeProjectionsBase","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","unitVector","zeroVector","StrokeLineJoinProjections","getOrthogonalRotationFactor","vector1","vector2","C","AC","bisector","orthogonalProjection","correctSide","projectBevel","projections","projectMiter","hypotUnitScalar","miterVector","projectRoundNoSkew","startCircle","endCircle","radiusOnAxisX","radiusOnAxisY","projectRoundWithSkew","circleRadius","newY","furthestY","newX","furthestX","projectRound","isStraightLine","newOrigin","proj0","proj1","comparisonVector","isProj0Start","projectPoints","project","originPoint","projectedPoint","StrokeLineCapProjections","projectButt","projection","projectSquare","strokePointingOut","projectedA","projectStrokeOnPoints","openPath","reduced","cloneStyles","newObj","keyInner","capitalize","string","firstLetterOnly","charAt","escapeXml","graphemeSplit","textstring","graphemes","chr","getWholeChar","str","code","charCodeAt","isNaN","next","prev","hasStyleChanged","prevStyle","thisStyle","forTextSpans","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","text","textLines","stylesArray","charIndex","chars","end","stylesFromArray","stylesObject","styleIndex","SHARED_ATTRIBUTES","selectorMatches","selector","nodeName","classNames","getAttribute","azAz","matcher","splitClassNames","doesSomeParentMatch","selectors","parentMatching","parentElement","elementMatchesRule","firstMatching","getGlobalStylesForElement","cssRules","rule","normalizeAttr","attr","_attributesMap","regex","cleanupSvgAttribute","attributeValue","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","transforms","transformList","_templateObject7","reTransformList","reTransform","reTransformAll","parseTransformAttribute","test","matchAll","transformMatch","matchedParams","operation","rawArgs","arg1","arg2","arg3","arg4","arg5","arg","normalizeValue","parentAttributes","parsed","ouputValue","transformMatrix","fillIndex","strokeIndex","parseFontDeclaration","oStyle","lineHeight","parseStyleObject","parseStyleString","chunk","parseStyleAttribute","colorAttributesMap","setStrokeFillOpacity","attributes","colorAttr","parseAttributes","parentFontSize","ownAttributes","normalizedStyle","normalizedAttr","normalizedValue","font","mergedAttrs","rectDefaultValues","rx","ry","RECT_PROPS","Rect","_initRxRy","isRounded","bezierCurveTo","fromElement","_parseAttributes","ATTRIBUTE_NAMES","restOfparsedAttributes","Boolean","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","LAYOUT_TYPE_IMPERATIVE","LAYOUT_TYPE_OBJECT_MODIFIED","LAYOUT_TYPE_OBJECT_MODIFYING","getObjectBounds","destinationGroup","currentGroup","objectCenter","accountForStroke","strokeUniformVector","scalingStrokeWidth","sizeVector","LayoutStrategy","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","bboxSize","bboxLeftTop","bboxCenter","actualSize","relativeCorrection","FitContentLayout","LAYOUT_MANAGER","LayoutManager","_subscriptions","performLayout","strictContext","bubbles","_prevLayoutStrategy","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","attachHandlers","trigger","subscribe","unsubscribe","_context","delete","unsubscribeTargets","targets","subscribeTargets","tricklingContext","layoutManager","prevCenter","nextCenter","correction","layoutObjects","_context$x","_context$y","layoutObject","_","bubblingContext","NoopLayoutManager","groupDefaultValues","subTargetCheck","interactive","Group","groupInit","_options$layoutManage","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","allowedObjects","_onAfterObjectsChange","removeParentTransform","exitGroup","_shouldSetNestedCoords","removeAll","_activeObjects","selected","activeObjects","_watchObject","watch","_enterGroup","activeObject","_exitGroup","ownCache","preserveObjectStacking","triggerLayout","__serializeObjects","method","_includeDefaultValues","originalDefaults","_createSVGBgRect","fillStroke","commons","svgString","bg","abortable","hydratedOptions","layoutClass","strategyClass","groupSVGElements","findScaleToFit","destination","findScaleToCover","commaWsp","reArcCommandPoints","rePathCommand","repeatedCommands","M","segmentToBezier","theta1","theta2","cosTh","sinTh","cx1","cy1","mT","fromX","fromY","costh1","sinth1","costh2","sinth2","toX","toY","cp1X","cp1Y","cp2X","cp2Y","arcToSegments","large","sweep","rotateX","root","sinTheta","px","py","rx2","ry2","py2","px2","pl","_rx","_ry","mTheta","calcVectorAngle","dtheta","segments","mDelta","th3","ux","uy","vx","vy","ta","tb","CB1","CB2","CB3","CB4","getBoundsOfCurve","begx","begy","cp1x","cp1y","cp2x","cp2y","endx","endy","argsString","cachesBoundsOfCurve","boundsOfCurveCache","tvalues","bounds","b2ac","sqrtb2ac","t1","t2","jlen","iterator","getPointOnCubicBezierIterator","fromArcToBeziers","fx","fy","rot","tx","ty","segsNorm","makePathSimpler","x1","y1","destinationPath","previous","controlX","controlY","parsedCommand","converted","calcLineLength","x2","y2","pct","c1","c2","c3","c4","QB1","QB2","QB3","getTangentCubicIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","qb1","qb2","qb3","tangentX","tangentY","getPointOnQuadraticBezierIterator","getTangentQuadraticIterator","invT","pathIterator","tempP","tmpLen","perc","findPercentageForDistance","segInfo","nextLen","nextStep","lastPerc","angleFinder","getPathSegmentsInfo","totalLength","tempInfo","info","basicInfo","command","destX","destY","getPointOnPath","infos","segPercent","segment","rePathCmdAll","regExpArcCommandPoints","reMyNum","commandLengths","parsePath","pathString","_pathString$match","chain","matchStr","commandLetter","commandLength","paramArr","lastIndex","out","newCommand","transformedCommand","getSmoothPathFromPoints","p1","multSignX","multSignY","manyPoints","midPoint","transformPath","pathOffset","pathSegment","newSegment","getRegularPolygonPath","numVertexes","radius","interiorAngle","rotationAdjustment","rad","joinPath","pathData","setStyle","elementStyle","setProperty","mergeClipPaths","_b$group","getRandomInt","random","request","xhr","XMLHttpRequest","removeListener","ontimeout","onreadystatechange","readyState","open","send","_assignTransformMatrixProps","removeTransformMatrixForSvgParsing","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","CanvasDOMManager","containerClass","upperCanvasEl","createUpperCanvas","upper","applyCanvasStyle","container","createContainerElement","replaceChild","className","removeChild","canvasDefaults","centeredKey","selection","selectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","targetFindTolerance","skipTargetFind","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","SelectableCanvas","_this$elements$upper","_this$elements$upper2","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","_drawSelection","renderTop","setTargetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","selectionBgc","enhancedTolerance","_isSelectionKeyPressed","sKey","_shouldClearSelection","getActiveObjects","_shouldCenterTransform","modifierKeyPressed","centerTransform","_getOriginFromCorner","controlName","_setupCurrentTransform","_control$getActionHan","getScenePoint","altKey","lastX","lastY","shiftKey","setCursor","cursor","deltaX","extent","strokeOffset","minX","minY","maxX","maxY","findTarget","getViewportPoint","aObjects","searchPossibleTargets","subTargets","altSelectionKey","_pointIsInObjectSelectionArea","viewportZoom","angleRadians","cosP","sinP","cosPSinP","cosPMinusSinP","_checkTarget","isEditing","_searchPossibleTargets","subTarget","_pointer","_absolutePointer","fromViewport","boundsWidth","boundsHeight","cssScale","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","active","_fireSelectionEvents","oldObjects","somethingChanged","invalidate","added","setActiveObject","currentActives","_setActiveObject","prevActiveObject","endCurrentTransform","discardActiveObject","discarded","_finalizeCurrentTransform","_scaling","originalProperties","_realizeGroupTransformOnObject","layoutProps","originalValues","TextEditingManager","cb","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","_this$target","updateSelectionOnMouseMove","addEventOptions","passive","getEventPoints","viewportPoint","scenePoint","absolutePointer","addListener","syntheticEventConfig","mouse","in","targetIn","targetOut","canvasIn","canvasOut","drag","Canvas","eventHandler","addOrRemove","_getEventPrefix","functor","_eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","clearTimeout","_willAddMouseDown","__onMouseWheel","shared","nestedTarget","_isClick","_dragSource","_onDragProgress","_renderDragEffects","dropTarget","_dropTarget","didDrop","dataTransfer","dropEffect","dragSource","_draggedoverTarget","findDragTargets","eventType","_fireEnterLeaveEvents","_basicEventHandler","_cacheTransformEventData","_handleEvent","getPointerId","evt","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","shouldPreventScrolling","currentActiveObject","__onMouseDown","_target","__onMouseUp","__onMouseMove","_shouldRender","_this$_activeObject","isClick","button","_onMouseUpInDrawingMode","shouldRender","targetWasActive","handleSelection","found","originalControl","originalMouseUpHandler","_setCursorFromEvent","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","_onMouseMoveInDrawingMode","onMouseUp","grouped","handleMultiSelection","groupSelector","_fireOverOutEvents","_transformObject","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","draggedoverTarget","targetChanged","outOpt","nextTarget","inOpt","previousTarget","localPointer","_performTransformAction","activeSelection","reverse","isAS","prevActiveObjects","multiSelectAdd","klass","newActiveSelection","point1","point2","collectedObjects","linearDefaultCoords","radialDefaultCoords","ifNaN","valueIfNaN","RE_PERCENT","isPercent","parsePercent","NaN","RE_KEY_VALUE_PAIRS","RE_KEY_VALUE","parseColorStop","keyValuePairs","parseColorStops","opacityAttr","colorStops","colorStopEls","getElementsByTagName","parseType","parseGradientUnits","convertPercentUnitsToValues","valuesToConvert","finalValue","propValue","getValue","parseLinearCoords","parseRadialCoords","parseCoords","Gradient","addColorStop","colorStop","preTransform","sort","needsSwap","minRadius","maxRadius","percentageShift","gradient","createLinearGradient","createRadialGradient","svgOptions","viewBoxWidth","viewBoxHeight","Pattern","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","patternSource","patternOffsetX","patternOffsetY","patternWidth","patternHeight","BaseBrush","_saveAndTransform","needsFullRender","_resetShadow","_isOutSideCanvas","Path","_setPath","adjustPosition","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","pathCmd","sourcePath","_getOffsetTransform","digits","_calcDimensions","subpathStartX","subpathStartY","parsedAttributes","isEmptySVGPath","PencilBrush","_points","_hasStraightLine","drawSegment","drawStraightLine","straightLineKey","_prepareForDrawing","_addPoint","limitedToCanvasSize","oldEnd","_finalizeAndAddPath","_reset","convertPointsToSVGPath","createPath","decimatePoints","lastPoint","cDistance","adjustedDistance","newPoints","decimate","CIRCLE_PROPS","circleDefaultValues","startAngle","endAngle","Circle","setRadius","getRadiusX","getRadiusY","startX","startY","endX","endY","largeFlag","sweepFlag","otherParsedAttributes","CircleBrush","drawDot","addPoint","dot","originalRenderOnAddRemove","circles","circle","pointerPoint","getUniqueRects","rects","uniqueRects","uniqueRectsArray","SprayBrush","sprayChunks","sprayChunk","addSprayChunk","renderChunck","chunck","rect","optimizeOverlapping","sprayChunck","density","dotWidthVariance","dotWidth","randomOpacity","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPattern","pattern","topLeft","coordProps","Line","_setWidthHeight","calcLinePoints","origStrokeStyle","_this$stroke","_x1","_x2","_y1","_y2","xMult","yMult","triangleDefaultValues","Triangle","widthBy2","heightBy2","ellipseDefaultValues","ELLIPSE_PROPS","Ellipse","getRx","getRy","parsePointsAttribute","pointsSplit","parsedPoints","polylineDefaultValues","exactBoundingBox","Polyline","initialized","isOpen","_projectStrokeOnPoints","strokeDiff","bboxNoStroke","layoutProperties","_options$width","_options$height","_options$width2","_options$height2","output","diffX","diffY","Polygon","fontProperties","textDecorationProperties","textLayoutProperties","additionalProps","styleProperties","textDefaultValues","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","offsets","_fontSizeMult","charSpacing","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","JUSTIFY","JUSTIFY_LEFT","JUSTIFY_RIGHT","JUSTIFY_CENTER","StyledText","isEmptyStyles","lineIndex","line","p3","styleHas","cleanStyle","stylesCount","letterCount","stylePropertyValue","allStyleObjectPropertiesMatch","graphemeCount","styleObject","stylePropertyHasBeenSet","_textLines","removeStyle","lineNum","charNum","_extendStyles","get2DCursorLocation","_getLineStyle","_setLineStyle","newStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","startIndex","endIndex","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_lineStyle$charIndex","lineStyle","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","multipleSpacesRegex","dblQuoteRegex","createSVGInlineRect","TextSVGExportMixin","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","noShadow","textDecoration","getSvgTextDecoration","textTopOffset","textLeftOffset","lineOffset","_getLineLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","char","styleDecl","styleProps","getSvgSpanStyles","fillStyles","dySpan","isJustify","actualStyle","nextStyle","charsToRender","charBox","boxWidth","timeToRender","__charBounds","kernedWidth","leftOffset","heightOfLine","boxStart","currentColor","lastColor","getValueOfPropertyAt","_getSVGLineTopOffset","lineTopOffset","lastHeight","useWhiteSpace","decoration","measuringContext","getMeasuringContext","FabricText","setPathInfo","initDimensions","segmentsInfo","_splitText","newLines","_splitTextIntoLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","missingNewlineOffset","_lineIndex","selectionStart","skipWrapping","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","_getLeftOffset","_getTopOffset","lineLeftOffset","drawStart","renderLeft","_measureChar","_char","previousChar","prevCharStyle","fontDeclaration","couple","stylesAreEqual","fontMultiplier","coupleWidth","previousWidth","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","prevGrapheme","graphemeInfo","llength","lineBounds","grapheme","_getGraphemeBox","positionInPath","totalPathLength","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","shortCut","isLtr","currentDirection","drawingLeft","_renderChar","_applyPatternGradientTransformText","handleFiller","fullDecl","shouldFill","fillOffsets","fillText","strokeOffsets","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","lineDiff","__lineWidths","_charStyle$property","topOffset","lastDecoration","lastFill","currentDecoration","currentFill","currentSize","currentDy","parsedFontFamily","genericFonts","newLine","newText","needsDims","isAddingPath","_options$parsedAttrib","textAnchor","restOfOptions","textContent","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","DraggableTextDelegate","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","newSelection","getSelectionStartFromPointer","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_e$dataTransfer","flipFactor","boundaries","_getCursorBoundaries","selectionPosition","diff","bgc","dragImage","border","__dragImageDisposer","appendChild","setData","stringify","effectAllowed","abortCursorAnimation","editable","defaultPrevented","dragStartSelection","targetCanDrop","ev","_e$dataTransfer2","insert","getData","trailing","selectionStartOffset","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","_e$dataTransfer3","reNonWord","ITextBehavior","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_this$_currentTickCom","_currentTickCompleteState","restart","cursorDelay","shouldClear","cursorAnimation","restartCursorIfNeeded","selectAll","_fireSelectionChanged","getSelectedText","findWordBoundaryLeft","startFrom","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditingImpl","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","currentStart","currentEnd","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","graphemeEnd","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","textarea","_calcTextareaPosition","desiredPosition","compositionStart","cursorLocation","charHeight","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","_exitEditing","exitEditingImpl","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","newLineStyles","originalLineLength","isEndOfLine","someStyleIsCarryingOver","currentCharStyle","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","_selectionDirection","ITextKeyBehavior","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keyMap","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","updateAndFire","nextText","charCount","nextCharCount","removedText","charDiff","removeFrom","removeTo","textareaSelection","backDelete","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","widthBeforeCursor","bound","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","textBeforeCursor","widthOfCharsOnLine","indexOnLine","charWidth","foundMatch","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","newValue","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","notALeftClick","ITextClickBehavior","_mouseDownHandler","_mouseDownHandlerBefore","doubleClickHandler","tripleClickHandler","__lastClickTime","__lastLastClickTime","__lastPointer","draggableTextDelegate","__newClickTime","newPointer","isTripleClick","__lastSelected","didDrag","mouseOffset","charLength","widthAfter","MOVE_CURSOR_UP","MOVE_CURSOR_DOWN","MOVE_CURSOR_LEFT","MOVE_CURSOR_RIGHT","EXIT_EDITING","protectedDefaultValues","iTextDefaultValues","cursorColor","caching","IText","setSelectionStart","_updateAndFire","setSelectionEnd","renderCursor","renderSelection","skipCaching","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","getCursorRenderingData","_renderSelection","dragSelection","startLine","endLine","startChar","endChar","realLineHeight","boxEnd","drawHeight","extraTop","drawWidth","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","cursorPosition","textboxDefaultValues","minWidth","dynamicMinWidth","_wordJoiners","splitByGrapheme","Textbox","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextLineIndex","nextOffset","shouldLimit","mapNextLine","p2Number","_wrapText","desiredWidth","getGraphemeDataForRender","wrapped","wordsData","_wrapLine","infix","largestWordWidth","wordsOrGraphemes","wordSplit","word","graphemeArray","_measureWord","charOffset","reservedSpace","additionalSpace","infixWidth","lineJustStarted","wordWidth","getMinWidth","linesToKeep","propNumber","ClipPathLayout","clipPathCenter","FixedLayout","ActiveSelectionLayoutManager","parents","Set","selectedObjects","activeSelectionDefaultValues","multiSelectionStacking","ActiveSelection","findIndex","groups","childrenOverride","Canvas2dFilterBackend","applyFilters","filters","sourceElement","sourceWidth","sourceHeight","imageData","originalImageData","pipelineState","originalEl","filterBackend","applyTo","imageDataPostFilter","putImageData","WebGLFilterBackend","tileSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","resizeCanvasIfNeeded","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texture","texParameteri","texImage2D","uniqueId","evictCachesForKey","glCanvas","sourceY","copyGLTo2DPutImageData","dWidth","dHeight","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","imgData","ImageData","gpuInfo","renderer","vendor","ext","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","initFilterBackend","enableGLFiltering","getFilterBackend","strict","setFilterBackend","backend","imageDefaultValues","srcFromAttribute","minimumScaleTrigger","imageSmoothing","IMAGE_PROPS","FabricImage","setElement","_element","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","elementKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","imageRendering","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","pAR","preserveAspectRatio","pWidth","pHeight","rWidth","rHeight","f","rf","hydratedProps","fromURL","imageOptions","applyViewboxTransform","viewBoxAttr","widthAttr","heightAttr","goodViewbox","missingViewBox","missingDimAttr","translateMatrix","widthDiff","heightDiff","parsedDim","pasedViewBox","createElementNS","firstChild","getTagName","node","tagName","svgInvalidAncestorsRegEx","hasInvalidAncestor","getMultipleNodes","nodeNames","nodeArray","nodeList","getElementsByTagNameNS","parseUseDirectives","nodelist","skipAttributes","useElement","useAttributes","useAttrMap","xlink","href","referencedElement","clonedOriginal","cloneNode","originalAttributes","originalAttrMap","currentTrans","el3","setAttributeNS","childNodes","styleRecord","mergedStyles","entry","gradientsAttrs","xlinkAttr","recursivelyParseGradientsXlink","_gradient$getAttribut","xLink","referencedGradient","children","referenceClone","tagArray","getGradientDefs","elList","gradientDefs","getCSSRules","allRules","styleContents","ruleObj","declaration","propertyValuePairs","pair","_rule","findTag","ElementsParser","clipPaths","regexUrl","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","storage","gradientDef","usingElement","exactOwner","clipPathElements","objTransformInv","clipPathTag","clipPathOwner","clipPathElement","enlivedClippath","clipRule","gTransform","isValidSvgTag","createEmptyResponse","allElements","parseSVGDocument","descendants","localClipPaths","elementParser","loadSVGFromString","parser","DOMParser","parseFromString","loadSVGFromURL","xml","responseXML","parsedDoc","ACTION_NAME","createPolyPositionHandler","pointIndex","polyObject","polyActionHandler","poly","mouseLocalPosition","factoryPolyActionHandler","anchorPoint","anchorPointInParentPlane","newAnchorPointInParentPlane","createPolyActionHandler","createPolyControls","calcPathPointPosition","pathObject","commandIndex","movePathPoint","anchorCommand","pathPositionHandler","pathActionHandler","indexFromPrevCommand","previousCommandType","PathPointControl","controlFill","controlStroke","PathControlPointControl","connectToCommandIndex","connectToPointIndex","connectionDashArray","commandType","createControl","commandIndexPos","pointIndexPos","isControlPoint","controlPointStyle","pointStyle","createPathControls","isWebGLPipelineState","isPutImageFaster","sourceCanvas","ArrayBuffer","testContext","testPipelineState","performance","now","drawImageTime","putImageDataTime","highPsourceCode","identityFragmentShader","vertexSource","BaseFilter","getFragmentSource","getVertexSource","createProgram","vertexShader","VERTEX_SHADER","program","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","attributeLocations","getAttributeLocations","getAttribLocation","locations","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","temp","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","_gl","_uniformLocations","createHelpLayer","helpLayer","defaultKeys","filterOptions","blendColorFragmentSource","screen","difference","lighten","darken","exclusion","tint","blendColorDefaultValues","mode","BlendColor","tg","alpha1","uniform4fv","uColor","mask","blendImageDefaultValues","BlendImage","image","TEXTURE1","calculateMatrix","resources","blendImage","canvas1","blendData","uniform1i","uImage","uniformMatrix3fv","uTransformMatrix","enlivedImage","blurDefaultValues","Blur","aspectRatio","horizontal","simpleBlur","blurLayer1","blurLayer2","canvas2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","uniform2fv","uDelta","blurScale","brightnessDefaultValues","brightness","Brightness","uBrightness","colorMatrixDefaultValues","colorsOnly","ColorMatrix","constants","uniformMatrix4fv","uColorMatrix","uConstants","createColorMatrixFilter","_Class","newClass","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","Composed","subFilters","enlivedFilters","contrastDefaultValues","contrast","Contrast","contrastF","uContrast","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","convoluteDefaultValues","opaque","Convolute","weights","side","halfSide","sw","sh","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uniform1fv","uMatrix","GAMMA","gammaDefaultValues","gamma","Gamma","rInv","gInv","bInv","rgbValues","rgb","uniform3fv","uGamma","lightness","luminosity","grayscaleDefaultValues","Grayscale","uMode","hueRotationDefaultValues","rotation","HueRotation","cosine","sine","aThird","aThirdSqtSin","OneMinusCos","invertDefaultValues","invert","Invert","uInvert","uAlpha","noiseDefaultValues","noise","Noise","rand","uNoise","uSeed","pixelateDefaultValues","blocksize","Pixelate","_i","_j","uBlocksize","removeColorDefaultValues","useAlpha","RemoveColor","lowC","highC","uLow","uHigh","resizeDefaultValues","resizeType","lanczosLobes","Resize","uTaps","taps","getFilterWindow","tempScale","filterWindow","generateShader","getTaps","lobeFunction","lanczosCreate","applyToForWebgl","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","dX","dY","tmpCanvas","process","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","saturationDefaultValues","saturation","Saturation","adjust","uSaturation","vibranceDefaultValues","vibrance","Vibrance","amt","uVibrance"],"version":3,"file":"index.61542594.js.map","sourceRoot":"/__parcel_source_root/"}